{"version":3,"sources":["regions.js","firebase.js","auth.js","components/I18n.jsx","providers/UserProvider.jsx","components/NavDrawer.jsx","components/FormComponents/StatusChip.jsx","utils/validate.js","utils/misc.js","components/FormComponents/LastEdited.jsx","components/FormComponents/SimpleModal.jsx","components/FormComponents/RecordStatusIcon.jsx","components/Pages/Submissions.jsx","components/FormComponents/ContactTitle.jsx","components/Pages/ContactsSaved.jsx","components/Pages/Login.jsx","components/Pages/NotFound.jsx","components/FormComponents/RequiredMark.jsx","components/FormComponents/QuestionStyles.jsx","components/Tabs/StartTab.jsx","components/FormComponents/CheckBoxList.jsx","isoCodeLists.js","components/FormComponents/ContactEditor.jsx","components/FormComponents/SelectInput.jsx","components/FormComponents/ContactLeftList.jsx","components/FormComponents/ApaPreview.jsx","components/Tabs/ContactTab.jsx","components/FormComponents/BilingualTextInput.jsx","components/FormComponents/Resources.jsx","components/Tabs/ResourcesTab.jsx","components/FormComponents/DateInput.jsx","keywordList.js","utils/i18nDictionaryFr.js","utils/i18n.js","components/FormComponents/KeywordsInput.jsx","utils/licenses.js","components/Tabs/IdentificationTab.jsx","components/FormComponents/Instruments.jsx","components/FormComponents/Platform.jsx","components/Tabs/PlatformTab.jsx","components/FormComponents/MapSelect.jsx","components/Tabs/SpatialTab.jsx","components/FormComponents/Regions.jsx","components/Tabs/SubmitTab.jsx","utils/blankRecord.js","components/Pages/MetadataForm.jsx","components/FormComponents/EditSavedContact.jsx","components/FormComponents/MetadataRecordListItem.jsx","components/Pages/Reviewer.jsx","components/Pages/Admin.jsx","components/Pages/SentryTest.jsx","components/BaseLayout.jsx","components/FormComponents/RegionCard.jsx","components/Pages/RegionSelect.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["regions","pacific","title","en","fr","catalogueTitle","colors","primary","secondary","email","catalogueURL","introPageText","showInRegionSelector","stlaurent","atlantic","iys","hakai","config","apiKey","authDomain","databaseURL","process","REACT_APP_DEV_DEPLOYMENT","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","provider","auth","GoogleAuthProvider","setCustomParameters","promt","spanInLanguage","lang","children","useParams","language","En","Fr","I18n","props","console","error","Array","isArray","length","UserContext","createContext","user","authIsLoading","UserProvider","componentDidMount","region","match","params","setState","unsubscribe","onAuthStateChanged","userAuth","displayName","uid","Sentry","scope","setUser","username","database","ref","child","update","on","permissionsFB","permissions","toJSON","admins","Object","values","reviewers","isAdmin","includes","isReviewer","loggedIn","state","this","translate","functions","httpsCallable","Provider","value","Component","withRouter","useStyles","makeStyles","theme","root","display","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","languageSelector","borderColor","color","spacing","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","MiniDrawer","history","useHistory","classes","useTheme","useContext","userIsReviewer","userIsAdmin","keys","pathname","useLocation","pathWithoutLang","split","map","e","slice","join","baseURL","React","useState","Boolean","open","setOpen","translations","home","new","contacts","saved","review","admin","signIn","logout","topBarBackgroundColor","usingDevDatabase","className","CssBaseline","AppBar","position","clsx","Toolbar","style","backgroundColor","IconButton","aria-label","onClick","edge","Menu","Typography","variant","noWrap","marginBottom","flex","src","alt","verticalAlign","paddingRight","Select","onChange","push","target","MenuItem","Drawer","paper","direction","ChevronRight","ChevronLeft","ListItem","key","ListItemIcon","Avatar","photoURL","ListItemText","Divider","List","Tooltip","placement","disabled","button","a","signInWithPopup","AccountCircle","ListAlt","RateReview","SupervisorAccount","signOut","then","ExitToApp","StatusChip","status","chipText","Chip","label","validateLatitude","num","validateLongitude","polygonIsValid","polygon","obj1","obj2","coordinates","c","JSON","parse","stringify","filter","lat","lon","parseFloat","contactIsFilled","contact","role","orgName","indName","validators","validation","val","tab","abstract","keywords","eov","north","south","east","west","progress","distribution","dist","name","url","verticalExtentMin","verticalExtentMax","verticalExtentDirection","platformID","record","noPlatform","platformDescription","instruments","instrument","id","license","every","find","validateField","fieldName","valueToValidate","validationFunction","percentValid","fields","numTotal","field","camelToSentenceCase","text","result","replace","charAt","toUpperCase","deepCopy","obj","firebaseToJSObject","input","out","forEach","entries","LastEdited","timeAgo","dateStr","TimeAgo","addLocale","format","Date","rand","Math","round","random","getModalStyle","top","left","transform","palette","background","border","boxShadow","shadows","SimpleModal","onClose","onAccept","modalStyle","Modal","aria-labelledby","aria-describedby","type","RecordStatusIcon","AssignmentTurnedIn","Description","Drafts","Submissions","records","deleteModalOpen","submitModalOpen","withdrawModalOpen","modalKey","modalRecord","loading","prevProps","loadRecords","currentUser","recordRef","set","filename","getRecordFilename","recordsRef","once","recordFirebase","recordID","lastEditedBy","created","toISOString","timeFirstPublished","identifier","uuidv4","remove","modalName","toggleModal","deleteRecord","submitRecord","withdrawRecord","CircularProgress","marginTop","Button","startIcon","Add","sort","b","submitted","published","percentValidInt","recordIsComplete","submitTooltip","withdrawTooltip","editRecord","ListItemAvatar","ListItemSecondaryAction","cloneRecord","FileCopy","Visibility","Edit","Delete","Publish","Eject","trim","toLowerCase","ContactTitle","getContactTitleFromNames","Contacts","modalOpen","contactsRef","contactFirebase","Grid","container","item","xs","deleteContact","addContact","editContact","PermContactCalendar","cloneContact","Login","NotFound","RequiredMark","passes","fontSize","bottom","SupplementalText","component","QuestionText","paperClass","margin","StartTab","regionInfo","Paper","href","Save","CheckBoxList","options","optionLabels","optionTooltips","labelSize","v","i","FormControlLabel","control","Checkbox","checked","ele","arr","newCheckedValuesArray","concat","eovList","roleCodes","custodian","owner","includeInCitation","distributor","author","coAuthor","collaborator","contributor","editor","funder","mediator","originator","pointOfContact","principalInvestigator","processor","publisher","resourceProvider","rightsHolder","sponsor","stakeholder","progressCodes","onGoing","historicalArchive","completed","depthDirections","EditContact","showRolePicker","updateContact","updateContactEvent","citationRoleText","tooltips","expanded","setExpanded","selectOptionIsInExpandedList","indexOf","numSpecialRoles","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","AccordionDetails","marginleft","TextField","fullWidth","orgURL","orgAdress","orgCity","orgCountry","orgEmail","indPosition","indEmail","formControl","minWidth","selectEmpty","SelectInput","FormControl","displayEmpty","InputLabel","enterDelay","initial","ContactListLeft","updateContacts","activeContact","setActiveContact","userContacts","currentContacts","setItems","contactList","justify","dragHandleSelector","lockAxis","onDrop","removedIndex","addedIndex","reorderedContacts","arrayMove","contactItem","fontWeight","contactIndex","duplicatedContact","duplicateContact","itemIndex","index","height","labelId","APAPreview","datasetIdentifier","datePublished","apaData","arrA","arrB","x","family","date","raw","html","Cite","template","dangerouslySetInnerHTML","__html","ContactTab","updateRecord","showApaBox","ApaPreview","ContactLeftList","newContacts","BilingualTextInput","multiline","translationButonDisabled","awaitingTranslation","setAwaitingTranslation","handleEvent","newData","languages","textTooBig","Blob","size","InputProps","startAdornment","InputAdornment","endIcon","alternateLanguage","fromLang","translatedText","translation","data","Resources","updateResources","resources","emptyResource","description","removeResource","nameLabel","descriptionLabel","handleResourceChange","newValue","ResourcesTab","formatDate","d","getDate","m","getMonth","y","getFullYear","DateInput","dateStart","dateEnd","utils","DateFnsUtils","minDate","maxDate","dateSelected","KeyboardButtonProps","keywordList","dictionary","oxygen","nutrients","nitrate","phosphate","silicate","inorganicCarbon","dissolvedOrganicCarbon","seaSurfaceHeight","seawaterDensity","potentialTemperature","potentialDensity","speedOfSound","seaIce","seaState","seaSurfaceSalinity","seaSurfaceTemperature","subSurfaceCurrents","subSurfaceSalinity","subSurfaceTemperature","surfaceCurrents","pressure","other","deprecated","proposed","withdrawn","notAccepted","accepted","valid","tentative","superseded","retired","pending","final","underDevelopment","required","planned","obsolete","farming","biota","boundaries","climatologyMeteorologyAtmosphere","economy","elevation","environment","geoscientificInformation","health","imageryBaseMapsEarthCover","intelligenceMilitary","inlandWaters","location","oceans","planningCadastre","society","structure","transportation","utilitiesCommunication","extraTerrestrial","disaster","watershed","crustacean","sampling","crayfish","mariculture","fluorescence","spawning","hydrocarbon","incidents","macroalgae","marsh","meteorology","wetlands","enhancement","mollusc","seabirds","phytoplankton","fish","radiation","salinity","sediment","taxonomy","sustainabilty","waves","wind","depthPositive","heightPositive","spatial","platform","toLang","enToFr","KeywordsInput","selectedKeyword","setKeyword","inputValue","setInputValue","selectedKeywordAltLang","setSelectedKeywordAltLang","reverse","altLanguage","cleanList","list","Autocomplete","onInputChange","event","newInputValue","keyword","freeSolo","renderOption","option","getOptionLabel","renderInput","userKeywordList","userKeywordListAlt","onDelete","deletedChipLang","licenses","CC0","IdentificationTab","handleUpdateRecord","CatalogueLink","rel","undefined","dateRevised","limitations","emptyInstrument","manufacturer","version","Instruments","updateInstruments","activeInstrument","setActiveInstrument","updateInstrumentField","instrumentsCopy","manufacturerLabel","versionLabel","typeLabel","instrumentItem","Platform","PlatformTab","withLeaflet","handleUpdateMap","updateMap","mapData","onMapClear","editableFG","setEditableFG","setLayerError","coordTest","polyTest","clearExtraLayers","drawnItems","layerid","leafletElement","_layers","layer","removeLayer","handleChange","limitDecimals","Number","toPrecision","L","EditToolbar","include","enable","featureGroup","clearLayers","bboxIsDrawn","fieldsAreEmpty","Map","center","zoom","TileLayer","attribution","FeatureGroup","featureGroupRef","onCreated","layerType","polygonStrings","getLatLngs","lng","bounds","getBounds","getNorthEast","wrap","getSouthWest","draw","marker","circle","polyline","circlemarker","edit","test_string","test","hasPolygon","positions","polygonList","coordList","matchAll","point","parsePolyString","test_n","test_s","test_e","test_w","hasBoundingBox","inputProps","inputMode","pattern","SpatialTab","paddingBottom","GetRegionInfo","SubmitTab","isSubmitting","setSubmitting","validationErrors","reduce","acc","getErrorsByTab","blankRecord","comment","category","organization","LinearProgressWithLabel","Box","mr","LinearProgress","TabPanel","hidden","MetadataForm","changes","saveDisabled","tabIndex","highlightMissingRequireFields","editorInfo","loggedInUserCanEditRecord","isNewRecord","endsWith","loggedInUserID","recordUserID","userID","loggedInUserOwnsRecord","context","editorDataRef","userinfo","userDataRef","recordFireBase","recordFireBaseObj","handleSaveClick","newNode","tabProps","Fab","fab","Tabs","scrollButtons","Tab","tabRoot","textAlign","contextType","withStyles","right","contactID","off","isFilledEnoughToSave","ContactEditor","handleSubmitClick","handleCancelClick","MetadataRecordListItem","onViewClick","onDeleteClick","onSubmitClick","showPublishAction","showUnPublishAction","showUnSubmitAction","onUnSubmitClick","onUnPublishClick","log","Reviewer","users","publishModalOpen","unPublishModalOpen","unSubmitModalOpen","modalUserID","showRecordTypes","showUsers","recordsFilter","recordCountsByStatus","regionUsersRaw","regionUsers","Set","recordsToShow","draft","DraftRecordItem","SubmittedRecordItem","PublishedRecordItem","RecordItem","recordStatusTranslate","selectedText","s","unique","Admin","permissionsFirebase","dbRef","updatePermissions","SentryTest","Error","RegionLogo","imgPath","paddingLeft","Pages","path","exact","BaseLayout","createMuiTheme","main","MuiTextField","MuiSelect","MuiButton","ThemeProvider","maxWidth","media","MediaCard","regionSummary","Card","minHeight","CardActionArea","CardMedia","image","CardContent","maxHeight","RegionSelect","regionCode","regionPath","App","basename","to","window","hostname","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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qBACA,iBACA,aACA,qBACA,gBACA,QACA,cACA,WACA,mCACA,cACA,yBACA,UACA,YACA,WACA,iBACA,uBACA,yBACA,oBACA,gBACA,YACA,OACA,oBACA,uBACA,mBACA,qBACA,gBACA,YACA,qBACA,4BACA,oBACA,2BACA,sBACA,gBACA,eACA,WACA,WACA,gBACA,mBACA,mBACA,mBACA,WACA,iBACA,oBACA,cACA,WACA,gBACA,QACA,OACA,gBC4FaC,GArLI,CACjBC,OAAQ,aACRC,UAAW,aACXC,QAAS,UACTC,UAAW,YACXC,SAAU,WACVC,gBAAiB,qBACjBC,uBAAwB,8BACxBC,iBAAkB,kCAClBC,gBAAiB,0BACjBC,qBAAsB,6BACtBC,iBAAkB,yBAClBC,aAAc,iBACdC,OAAQ,eACRC,SAAU,oBACVC,mBAAoB,yBACpBC,sBAAuB,4BACvBC,mBAAoB,uBACpBC,mBAAoB,8BACpBC,sBAAuB,iCACvBC,gBAAiB,sBACjBC,SAAU,WACVC,MAAO,QACPjK,iBAAkB,4BAClBhB,UAAW,iBACXC,MAAO,kBACP9X,KAAM,cACNgY,YAAa,eACbQ,WAAY,aACZC,eAAgB,mBAChBC,sBAAuB,2BACvBC,UAAW,iBACXC,UAAW,UACXX,OAAQ,SACRc,QAAS,UACTb,SAAU,YACVC,aAAc,gBACdE,OAAQ,cACRE,SAAU,eACVO,aAAc,cACdV,YAAa,eACbE,OAAQ,YACRU,YAAa,cACb+J,WAAY,cACZC,SAAU,aACVC,UAAW,YACXC,YAAa,iBACbC,SAAU,aACVC,MAAO,SACPC,UAAW,YACXC,WAAY,cACZC,QAAS,YACTC,QAAS,aACTC,MAAO,QACPC,iBAAkB,sBAClBC,SAAU,SACVC,QAAS,cACT1K,QAAS,WACT2K,SAAU,cACV1K,kBAAmB,qBACnBC,UAAW,aACX0K,QAAS,cACTC,MAAO,QACPC,WAAY,mBACZC,iCAAkC,mDAClCC,QAAS,cACTC,UAAW,kBACXC,YAAa,eACbC,yBAA0B,iCAC1BC,OAAQ,WACRC,0BAA2B,gCAC3BC,qBAAsB,6BACtBC,aAAc,sBACdC,SAAU,cACVC,OAAQ,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","file":"static/js/main.3b1aa837.chunk.js","sourcesContent":["// Copying how RA's use colors in their wordpress sites\nconst regions = {\n  pacific: {\n    title: { en: \"CIOOS Pacific\", fr: \"SIOOC Pacifique\" },\n    catalogueTitle: {\n      fr: \"Catalogue de données du SIOOC du Pacifique\",\n      en: \"CIOOS Pacific Data Catalogue\",\n    },\n    colors: { primary: \"#006e90\", secondary: \"#ffc857\" },\n    email: \"info@cioospacific.ca\",\n    catalogueURL: {\n      fr: \"https://catalogue.cioospacific.ca/fr/\",\n      en: \"https://catalogue.cioospacific.ca/\",\n    },\n    introPageText: {\n      en: \"CIOOS Pacific is focused on ocean data from Canada’s West Coast\",\n      fr:\n        \"SIOOC Pacifique se concentre sur les données océaniques de la côte ouest du Canada\",\n    },\n    showInRegionSelector: true,\n  },\n\n  stlaurent: {\n    title: { en: \"CIOOS St. Lawrence\", fr: \"SIOOC Saint-Laurent\" },\n    catalogueTitle: {\n      fr:\n        \"Catalogue de données de l'Observatoire global du Saint-Laurent (OGSL)\",\n      en: \"St. Lawrence Global Observatory Data Catalogue (SLGO)\",\n    },\n    colors: { primary: \"#00adef\", secondary: \"#00aeef\" },\n    email: \"info@ogsl.ca\",\n    catalogueURL: {\n      fr: \"https://catalogue.ogsl.ca\",\n      en: \"https://catalogue.ogsl.ca/en/\",\n    },\n    introPageText: {\n      en:\n        \"The St. Lawrence Global Observatory integrates multidisciplinary data and information about the St. Lawrence’s global system, from the Great Lakes to the Gulf.\",\n      fr:\n        \"L'Observatoire global du Saint-Laurent intégre des données et de l'information multidisciplinaires sur l'écosystème global du Saint-Laurent, des Grands Lacs au Golfe\",\n    },\n    showInRegionSelector: true,\n  },\n  atlantic: {\n    title: { en: \"CIOOS Atlantic\", fr: \"SIOOC Atlantique\" },\n    catalogueTitle: {\n      fr: \"Catalogue de données du SIOOC du Atlantic\",\n      en: \"CIOOS Atlantic Data Catalogue\",\n    },\n    colors: { primary: \"#19222b\", secondary: \"#e55162\" },\n    email: \"info@cioosatlantic.ca\",\n    catalogueURL: {\n      fr: \"https://cioosatlantic.ca/ckan/fr/\",\n      en: \"https://cioosatlantic.ca/ckan/\",\n    },\n    introPageText: {\n      en:\n        \"CIOOS Atlantic is focused on the integration of oceanographic data from the Atlantic seaboard, a region spanning from Labrador to the USA.\",\n      fr:\n        \"SIOOC Atlantique intègre des données océanographiques de la côte atlantique, une région qui s’étend du Labrador aux États-Unis\",\n    },\n    showInRegionSelector: true,\n  },\n\n  iys: {\n    title: { en: \"IYS\", fr: \"IYS\" },\n    catalogueTitle: {\n      fr: \"Catalogue de données du IYS\",\n      en: \"IYS Data Catalogue\",\n    },\n    colors: { primary: \"#006e90\", secondary: \"#ffc857\" },\n    email: \"iys.data@hakai.org\",\n    catalogueURL: {\n      fr: \"https://iys.hakai.org/dataset/\",\n      en: \"https://iys.hakai.org/dataset/\",\n    },\n    introPageText: { en: \"\", fr: \"\" },\n    showInRegionSelector: false,\n  },\n  hakai: {\n    title: { en: \"Hakai\", fr: \"Hakai\" },\n    catalogueTitle: {\n      fr: \"Catalogue de données du Hakai\",\n      en: \"Hakai Data Catalogue\",\n    },\n    colors: { primary: \"#aa2025\", secondary: \"#459be2\" },\n    email: \"info@hakai.org\",\n    catalogueURL: {\n      fr: \"https://catalogue.hakai.org\",\n      en: \"https://catalogue.hakai.org\",\n    },\n    introPageText: { en: \"\", fr: \"\" },\n    showInRegionSelector: false,\n  },\n};\n\nexport default regions;\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport \"firebase/functions\";\nimport \"firebase/firestore\";\n\nconst deployedOnTestSserver = process.env.REACT_APP_DEV_DEPLOYMENT;\n\nconst productionDB = \"https://cioos-metadata-form.firebaseio.com\";\nconst devDB = \"https://cioos-metadata-form-dev.firebaseio.com\";\n\nconst config = {\n  apiKey: \"AIzaSyAdlELZS5Lbea5NquotMT8amwO-Lc_7ogc\",\n  authDomain: \"cioos-metadata-form.firebaseapp.com\",\n  databaseURL:\n    process.env.NODE_ENV === \"production\" && !deployedOnTestSserver\n      ? productionDB\n      : devDB,\n  projectId: \"cioos-metadata-form\",\n  storageBucket: \"cioos-metadata-form.appspot.com\",\n  messagingSenderId: \"646114203434\",\n  appId: \"1:646114203434:web:bccceadc5144270f98f053\",\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import firebase from \"./firebase\";\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nprovider.setCustomParameters({ promt: \"select_account\" });\n\nexport const auth = firebase.auth();\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst spanInLanguage = (lang) => ({ children }) => {\n  const { language } = useParams();\n  return language === lang && <>{children}</>;\n};\n\nexport const En = spanInLanguage(\"en\");\nexport const Fr = spanInLanguage(\"fr\");\n\n/* \n  This component can be used with attributes only, eg\n  <I18n en=\"boat\" fr=\"bateau\"/>\n\n  Or as a container for the <En> and <Fr> tags\n\n  Eg:\n\n  <I18n>\n    <En>rabbit</En>\n    <Fr>lapin</Fr>\n  </I18n>\n*/\n\nexport const I18n = (props) => {\n  const { en, fr } = props;\n  const { language = \"en\" } = useParams();\n\n  // If this component used via attributes\n  if (en || fr) {\n    if (en && fr) return language === \"en\" ? en : fr;\n\n    console.error(\"Tag missing french or english!\");\n    return null;\n  }\n\n  if (Array.isArray(props.children) && props.children.length !== 2) {\n    console.error(props, \"Tag missing french or english!\");\n  }\n\n  return props.children;\n};\n","import React, { Component, createContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { auth } from \"../auth\";\nimport firebase from \"../firebase\";\n\nexport const UserContext = createContext({ user: null, authIsLoading: false });\n\nclass UserProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      authIsLoading: false,\n      admins: [],\n      reviewers: [],\n      isReviewer: false,\n      loggedIn: false,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) this.unsubscribe();\n  }\n\n  componentDidMount = () => {\n    const { match } = this.props;\n\n    const { region } = match.params;\n    this.setState({ authIsLoading: true });\n    this.unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        const { displayName, email, uid } = userAuth;\n\n        Sentry.configureScope((scope) => {\n          scope.setUser({\n            email: email,\n            username: email,\n          });\n        });\n\n        firebase\n          .database()\n          .ref(region)\n          .child(`users`)\n          .child(uid)\n          .child(\"userinfo\")\n          .update({ displayName, email });\n\n        firebase\n          .database()\n          .ref(region)\n          .child(`permissions`)\n          .on(\"value\", (permissionsFB) => {\n            const permissions = permissionsFB.toJSON();\n\n            const admins =\n              permissions && Object.values(permissions.admins || {});\n            const reviewers =\n              permissions && Object.values(permissions.reviewers || {});\n\n            const isAdmin = admins && admins.includes(email);\n            const isReviewer = reviewers && reviewers.includes(email);\n\n            this.setState({\n              admins,\n              reviewers,\n              isAdmin,\n              isReviewer,\n              loggedIn: true,\n            });\n          });\n      } else {\n        this.setState({\n          loggedIn: false,\n          authIsLoading: false,\n        });\n      }\n      this.setState({ user: userAuth, authIsLoading: false });\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    const translate = firebase.functions().httpsCallable(\"translate\");\n\n    return (\n      <UserContext.Provider value={{ ...this.state, translate }}>\n        {children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(UserProvider);\n","import React, { useContext } from \"react\";\n\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  ExitToApp,\n  Contacts,\n  ListAlt,\n  AccountCircle,\n  ChevronLeft,\n  ChevronRight,\n  RateReview,\n  SupervisorAccount,\n  Menu,\n} from \"@material-ui/icons\";\n\nimport {\n  Drawer,\n  Avatar,\n  AppBar,\n  Toolbar,\n  CssBaseline,\n  Typography,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Select,\n  Tooltip,\n  MenuItem,\n} from \"@material-ui/core\";\nimport regions from \"../regions\";\nimport { auth, signInWithGoogle } from \"../auth\";\n\nimport { En, Fr, I18n } from \"./I18n\";\n\nimport { UserContext } from \"../providers/UserProvider\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  languageSelector: {\n    \"&:before\": {\n      borderColor: \"white\",\n    },\n    \"&:hover:not(.Mui-disabled):before\": {\n      borderColor: \"white\",\n    },\n    color: \"white\",\n    borderColor: \"white\",\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer({ children }) {\n  const history = useHistory();\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const {\n    user,\n    isReviewer: userIsReviewer,\n    isAdmin: userIsAdmin,\n    authIsLoading,\n  } = useContext(UserContext);\n\n  let { language = \"en\", region = \"region-select\" } = useParams();\n\n  if (![\"en\", \"fr\"].includes(language)) language = \"en\";\n\n  // This component may be displayed before the region is selected\n  if (!Object.keys(regions).includes(region)) region = \"\";\n\n  const { pathname } = useLocation();\n\n  const pathWithoutLang = pathname\n    .split(\"/\")\n    .map((e) => e)\n    .slice(2)\n    .join(\"/\");\n\n  const baseURL = `/${language}/${region}`;\n\n  // if region not set, keep drawer closed\n  const [open, setOpen] = React.useState(Boolean(region));\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const translations = {\n    home: <I18n en=\"Home\" fr=\"Accueil\" />,\n    new: <I18n en=\"Metadata Editor\" fr=\"Éditeur de méta-données\" />,\n    contacts: <I18n en=\"Contacts\" fr=\"Contacts\" />,\n    saved: <I18n en=\"My Records\" fr=\"Enregistrements\" />,\n    review: <I18n en=\"Review submissions\" fr=\"Examen des soumissions\" />,\n    admin: <I18n en=\"Admin\" fr=\"Admin\" />,\n    signIn: <I18n en=\"Sign in\" fr=\"Se Connecter\" />,\n    logout: <I18n en=\"Logout\" fr=\"Déconnexion\" />,\n  };\n  const topBarBackgroundColor = region\n    ? regions[region].colors.primary\n    : // CIOOS national \"dominant colour\" from branding doc\n      \"#52a79b\";\n\n  // const regionText = region ? regions[region].title[language] : \"\";\n\n  const usingDevDatabase =\n    process.env.REACT_APP_DEV_DEPLOYMENT ||\n    process.env.NODE_ENV === \"development\";\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar\n          style={{\n            backgroundColor: topBarBackgroundColor,\n            alignItems: \"end\",\n          }}\n        >\n          {region && (\n            <IconButton\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <Menu />\n            </IconButton>\n          )}\n          <Typography\n            variant=\"h5\"\n            noWrap\n            style={{\n              marginLeft: \"10px\",\n              marginBottom: \"10px\",\n              flex: 1,\n              color: \"white\",\n            }}\n          >\n            <I18n>\n              <En>Metadata Entry Tool</En>\n              <Fr>Outil de saisie de métadonnées</Fr>\n            </I18n>\n          </Typography>\n          <div style={{ marginLeft: \"auto\" }}>\n            <img\n              src={`${process.env.PUBLIC_URL}/cioos_website_top_banner_${language}.png`}\n              alt=\"CIOOS/SIOOC\"\n              width={350}\n              style={{ verticalAlign: \"bottom\", paddingRight: \"15px\" }}\n            />\n\n            <Select\n              color=\"primary\"\n              className={classes.languageSelector}\n              value={language}\n              onChange={(e) =>\n                history.push(`/${e.target.value}/${pathWithoutLang}`)\n              }\n            >\n              <MenuItem value=\"en\">EN</MenuItem>\n              <MenuItem value=\"fr\">FR</MenuItem>\n            </Select>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {region && (\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? <ChevronRight /> : <ChevronLeft />}\n            </IconButton>\n          </div>\n\n          {user && (\n            <ListItem key=\"userInfo\">\n              <ListItemIcon>\n                <Avatar src={user.photoURL} />\n              </ListItemIcon>\n              <ListItemText primary={user.displayName} />\n            </ListItem>\n          )}\n          <Divider />\n          <List>\n            {!user && region && (\n              <Tooltip\n                placement=\"right-start\"\n                title={open ? \"\" : translations.signIn}\n              >\n                <ListItem\n                  disabled={authIsLoading}\n                  button\n                  key=\"Sign in\"\n                  onClick={async () => {\n                    await signInWithGoogle();\n                    history.push(pathname);\n                  }}\n                >\n                  <ListItemIcon>\n                    <AccountCircle />\n                  </ListItemIcon>\n                  <ListItemText primary={translations.signIn} />\n                </ListItem>\n              </Tooltip>\n            )}\n            {user && region && (\n              <>\n                <Tooltip\n                  placement=\"right-start\"\n                  title={open ? \"\" : translations.saved}\n                >\n                  <ListItem\n                    button\n                    key=\"My Records\"\n                    onClick={() => history.push(`${baseURL}/submissions`)}\n                  >\n                    <ListItemIcon>\n                      <ListAlt />\n                    </ListItemIcon>\n                    <ListItemText primary={translations.saved} />\n                  </ListItem>\n                </Tooltip>\n                {region && (\n                  <>\n                    <Tooltip\n                      placement=\"right-start\"\n                      title={open ? \"\" : translations.contacts}\n                    >\n                      <ListItem\n                        button\n                        key=\"Contacts\"\n                        onClick={() => history.push(`${baseURL}/contacts`)}\n                      >\n                        <ListItemIcon disabled>\n                          <Contacts />\n                        </ListItemIcon>\n                        <ListItemText primary={translations.contacts} />\n                      </ListItem>\n                    </Tooltip>\n\n                    {userIsReviewer && (\n                      <Tooltip\n                        placement=\"right-start\"\n                        title={open ? \"\" : translations.review}\n                      >\n                        <ListItem\n                          button\n                          key=\"Review\"\n                          onClick={() => history.push(`${baseURL}/reviewer`)}\n                        >\n                          <ListItemIcon>\n                            <RateReview />\n                          </ListItemIcon>\n                          <ListItemText primary={translations.review} />\n                        </ListItem>\n                      </Tooltip>\n                    )}\n                    {userIsAdmin && (\n                      <Tooltip\n                        placement=\"right-start\"\n                        title={open ? \"\" : translations.admin}\n                      >\n                        <ListItem\n                          button\n                          key=\"Admin\"\n                          onClick={() => history.push(`${baseURL}/admin`)}\n                        >\n                          <ListItemIcon>\n                            <SupervisorAccount />\n                          </ListItemIcon>\n                          <ListItemText primary={translations.admin} />\n                        </ListItem>\n                      </Tooltip>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n            {user && (\n              <Tooltip\n                placement=\"right-start\"\n                title={open ? \"\" : translations.logout}\n              >\n                <ListItem\n                  button\n                  key=\"Logout\"\n                  onClick={() =>\n                    auth.signOut().then(() => history.push(baseURL))\n                  }\n                >\n                  <ListItemIcon>\n                    <ExitToApp />\n                  </ListItemIcon>\n                  <ListItemText primary={translations.logout} />\n                </ListItem>\n              </Tooltip>\n            )}\n          </List>\n          <Divider />\n          {usingDevDatabase && <h5>Connected to development database</h5>}\n        </Drawer>\n      )}\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Chip } from \"@material-ui/core\";\nimport { I18n } from \"../I18n\";\n\nconst StatusChip = ({ status }) => {\n  let chipText = \"\";\n\n  if (status === \"submitted\") chipText = <I18n en=\"Submitted\" fr=\"Soumis\" />;\n  else if (status === \"published\")\n    chipText = <I18n en=\"Published\" fr=\"Publié\" />;\n  else chipText = <I18n en=\"Draft\" fr=\"Brouillon\" />;\n\n  return (\n    <Chip\n      label={chipText}\n      // color={statusColors[status] || \"default\"}\n      variant=\"outlined\"\n    />\n  );\n};\n\nexport default StatusChip;\n","const validateLatitude = (num) => num >= -90 && num <= 90;\n\nconst deepCompare = (obj1, obj2) =>\n  JSON.parse(JSON.stringify(obj1) === JSON.stringify(obj2));\n\nconst validateLongitude = (num) => num >= -180 && num <= 180;\n\nconst polygonIsValid = (polygon) => {\n  // eg 48,-128 56,-133 56,-147 48,-128\n  const coordinates = polygon.split(\" \").map((c) => c.split(\",\"));\n  if (coordinates.length < 2) return false;\n  if (!deepCompare(coordinates[0], coordinates[coordinates.length - 1]))\n    return false;\n\n  return (\n    coordinates.filter(\n      ([lat, lon]) =>\n        validateLongitude(parseFloat(lon)) && validateLatitude(parseFloat(lat))\n    ).length === coordinates.length\n  );\n};\n\nconst contactIsFilled = (contact) =>\n  Boolean(\n    contact.role && contact.role.length && (contact.orgName || contact.indName)\n  );\n\n// required fields and  a function to validate each\nconst validators = {\n  title: {\n    validation: (val) => val && val.en && val.fr,\n    tab: \"data identification\",\n    error: {\n      en: \"Missing title in French or English\",\n      fr: \"Titre manquant en français ou en anglais\",\n    },\n  },\n  abstract: {\n    validation: (val) => val && val.en && val.fr,\n    tab: \"data identification\",\n    error: {\n      en: \"Missing abstract in French or English\",\n      fr: \"Abrégé manquant en français ou en anglais\",\n    },\n  },\n  keywords: {\n    validation: (val) => val && (val.en.length || val.fr.length),\n    tab: \"data identification\",\n    error: {\n      en: \"At least one keyword is required\",\n      fr: \"Au moins un mot clé est requis\",\n    },\n  },\n  eov: {\n    validation: (val) => val && val.length,\n    tab: \"data identification\",\n    error: {\n      en: \"At least one EOV is required\",\n      fr: \"Au moins un variable essentielle océanique est requise\",\n    },\n  },\n  map: {\n    error: {\n      en: \"Spatial information is missing\",\n      fr: \"L'information géographique est manquante\",\n    },\n    tab: \"spatial\",\n    validation: (val) => {\n      if (!val) return false;\n      const north = parseFloat(val.north);\n      const south = parseFloat(val.south);\n      const east = parseFloat(val.east);\n      const west = parseFloat(val.west);\n      const { polygon } = val;\n\n      return (\n        (north &&\n          south &&\n          east &&\n          west &&\n          north >= south &&\n          east >= west &&\n          validateLatitude(north) &&\n          validateLatitude(south) &&\n          validateLongitude(east) &&\n          validateLongitude(west)) ||\n        (polygon && polygonIsValid(polygon))\n      );\n    },\n  },\n  progress: {\n    tab: \"data identification\",\n    validation: (val) => val,\n    error: {\n      en: \"Please select a dataset status\",\n      fr: \"L'information spatiale est manquante\",\n    },\n  },\n  distribution: {\n    tab: \"resources\",\n    validation: (val) =>\n      Array.isArray(val) && val.filter((dist) => dist.name && dist.url).length,\n    error: {\n      en: \"Must have at least one resource\",\n      fr: \"Doit avoir au moins une ressource\",\n    },\n  },\n  verticalExtentMin: {\n    tab: \"spatial\",\n\n    validation: (val) => val,\n    error: {\n      en: \"Missing Vertical Extent Min\",\n      fr: \"Étendue verticale manquante Min\",\n    },\n  },\n  verticalExtentMax: {\n    tab: \"spatial\",\n    validation: (val) => val,\n    error: {\n      en: \"Missing Vertical Extent Max\",\n      fr: \"Étendue verticale manquante Max\",\n    },\n  },\n  verticalExtentDirection: {\n    tab: \"spatial\",\n    validation: (val) => val,\n    error: {\n      en: \"Missing Vertical Extent Direction\",\n      fr: \"Direction de l'étendue verticale manquante\",\n    },\n  },\n  platformID: {\n    tab: \"platform\",\n    validation: (val, record) => record.noPlatform || val,\n    error: {\n      en: \"Missing platform ID\",\n      fr: \"ID de la plateforme manquant\",\n    },\n  },\n  platformDescription: {\n    tab: \"platform\",\n    validation: (val, record) => record.noPlatform || val,\n    error: {\n      en: \"Missing platform description\",\n      fr: \"Description de la plateforme manquante\",\n    },\n  },\n  instruments: {\n    tab: \"platform - instruments\",\n    validation: (val, record) =>\n      record.noPlatform ||\n      (val && val.filter((instrument) => instrument.id).length),\n    error: {\n      en: \"At least one instrument is required if there is a platform\",\n      fr: \"Au moins un instrument est requis s'il y a une plateforme\",\n    },\n  },\n  language: {\n    tab: \"data identification\",\n    validation: (val) => val,\n    error: {\n      en: \"Language field is missing\",\n      fr: \"Le champ de langue est vide\",\n    },\n  },\n  license: {\n    tab: \"data identification\",\n    validation: (val) => val,\n    error: {\n      en: \"Please select a license for the dataset\",\n      fr: \"Veuillez sélectionner une licence pour le jeu de données\",\n    },\n  },\n  // at least one contact has to have a role and a org or individual name\n  contacts: {\n    tab: \"contacts\",\n    validation: (val) =>\n      val &&\n      // every contact must have a role and name\n      val.every(contactIsFilled) &&\n      val\n        .filter(contactIsFilled)\n        .find((contact) => contact.role.includes(\"custodian\")) &&\n      val\n        .filter(contactIsFilled)\n        .find((contact) => contact.role.includes(\"owner\")),\n    error: {\n      en:\n        \"Every contact must have at least one role checked, and  'Data contact' or 'Metadata contact' must be added to at least one contact\",\n      fr:\n        \"Assurez-vous que chaque contact a un rôle qui lui est attribué. Assurez-vous également d'avoir une personne ressource pour les métadonnées et un personne ressource pour les données\",\n    },\n  },\n};\nexport const validateField = (record, fieldName) => {\n  const valueToValidate = record[fieldName];\n  // if no validator funciton exists, then it is not a required field\n  const validationFunction =\n    (validators[fieldName] && validators[fieldName].validation) || (() => true);\n\n  return validationFunction && validationFunction(valueToValidate, record);\n};\n\nexport const getErrorsByTab = (record) => {\n  const fields = Object.keys(validators);\n  const invalidFields = fields.filter((field) => !validateField(record, field));\n  const fieldErrorInfo = invalidFields.map((field) => {\n    const { error, tab } = validators[field];\n    return { error, tab };\n  });\n\n  return fieldErrorInfo.reduce((acc, { error, tab }) => {\n    if (!acc[tab]) acc[tab] = [];\n    acc[tab].push(error);\n    return acc;\n  }, {});\n};\n\nexport const percentValid = (record) => {\n  const fields = Object.keys(validators);\n  const numTotal = fields.length;\n  const validFields = fields.filter((field) => validateField(record, field));\n\n  const numValid = validFields.length;\n\n  return numValid / numTotal;\n};\nexport const recordIsValid = (record) => {\n  return percentValid(record) === 1;\n};\n","export function camelToSentenceCase(text = \"\") {\n  if (!text) return \"\";\n  const result = text.replace(/([A-Z])/g, \" $1\");\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\nexport function deepCopy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\nexport function deepEquals(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\nexport function firebaseToJSObject(input) {\n  if (!input) return null;\n  const out = deepCopy(input);\n  Object.keys(out).forEach((key) => {\n    if (typeof out[key] === \"object\" && Object.keys(out[key])[0] === \"0\") {\n      out[key] = Object.entries(out[key]).map(([, v]) => v);\n    }\n\n    //  special case\n    if (input.keywords)\n      out.keywords = {\n        en: Object.values(input.keywords.en || {}),\n        fr: Object.values(input.keywords.fr || {}),\n      };\n  });\n  if (out.contacts) {\n    Object.values(out.contacts).forEach((contact) => {\n      if (contact.role) {\n        // eslint-disable-next-line no-param-reassign\n        contact.role = Object.values(contact.role);\n      }\n    });\n  }\n\n  return out;\n}\n","import React from \"react\";\nimport TimeAgo from \"javascript-time-ago\";\nimport { useParams } from \"react-router-dom\";\n\nimport en from \"javascript-time-ago/locale/en\";\nimport fr from \"javascript-time-ago/locale/fr\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nconst LastEdited = ({ dateStr }) => {\n  const { language } = useParams();\n\n  if (!dateStr) return null;\n\n  let timeAgo;\n\n  if (language === \"en\") {\n    TimeAgo.addLocale(en);\n    timeAgo = new TimeAgo(\"en-US\");\n  } else {\n    TimeAgo.addLocale(fr);\n    timeAgo = new TimeAgo(\"fr-FR\");\n  }\n\n  return (\n    <span>\n      <I18n>\n        <En>Last edited</En>\n        <Fr>Dernière modification</Fr>\n      </I18n>{\" \"}\n      {timeAgo.format(new Date(dateStr))}\n      {\". \"}\n    </span>\n  );\n};\n\nexport default LastEdited;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal({ open, onClose, onAccept }) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">\n            <I18n>\n              <En>Are you sure?</En>\n              <Fr>Vous êtes sûr ?</Fr>\n            </I18n>\n          </h2>\n          <button\n            type=\"button\"\n            onClick={() => {\n              onClose();\n              onAccept();\n            }}\n          >\n            <I18n>\n              <En>Yes</En>\n              <Fr>Oui</Fr>\n            </I18n>\n          </button>\n          <button type=\"button\" onClick={onClose}>\n            <I18n>\n              <En>No</En>\n              <Fr>Non</Fr>\n            </I18n>\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Description, AssignmentTurnedIn, Drafts } from \"@material-ui/icons\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { I18n } from \"../I18n\";\n\nconst RecordStatusIcon = ({ status }) => {\n  if (status === \"published\")\n    return (\n      <Tooltip title={<I18n en=\"Published\" fr=\"Publié\" />}>\n        <AssignmentTurnedIn color=\"primary\" />\n      </Tooltip>\n    );\n  if (status === \"submitted\")\n    return (\n      <Tooltip title={<I18n en=\"Submitted\" fr=\"Soumis\" />}>\n        <Description color=\"secondary\" />\n      </Tooltip>\n    );\n  if (status === \"\")\n    return (\n      <Tooltip title={<I18n en=\"Draft\" fr=\"Brouillon\" />}>\n        <Drafts color=\"action\" />\n      </Tooltip>\n    );\n  return null;\n};\nexport default RecordStatusIcon;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n  Tooltip,\n  ListItemSecondaryAction,\n  IconButton,\n  CircularProgress,\n  Button,\n} from \"@material-ui/core\";\n\nimport {\n  Delete,\n  Edit,\n  Publish,\n  FileCopy,\n  Visibility,\n  Add,\n  Eject,\n  // CloudDownload,\n  // Code,\n} from \"@material-ui/icons\";\nimport StatusChip from \"../FormComponents/StatusChip\";\n\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\nimport { percentValid } from \"../../utils/validate\";\n\nimport { Fr, En, I18n } from \"../I18n\";\nimport { firebaseToJSObject } from \"../../utils/misc\";\nimport LastEdited from \"../FormComponents/LastEdited\";\nimport SimpleModal from \"../FormComponents/SimpleModal\";\n\nimport regions from \"../../regions\";\nimport RecordStatusIcon from \"../FormComponents/RecordStatusIcon\";\n\n// const WAF_URL = \"https://pac-dev1.cioos.org/dev/metadata\";\n// function openInNewTab(url) {\n//   const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\n//   if (newWindow) newWindow.opener = null;\n// }\nclass Submissions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: {},\n      deleteModalOpen: false,\n      submitModalOpen: false,\n      withdrawModalOpen: false,\n      modalKey: \"\",\n      modalRecord: null,\n      loading: false,\n    };\n  }\n  async componentDidUpdate(prevProps) {\n    // check for region change\n    if (this.props.match.params.region !== prevProps.match.params.region) {\n      this.loadRecords();\n    }\n  }\n\n  async loadRecords() {\n    this.setState({ loading: true });\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(user.uid)\n          .child(\"records\")\n          .on(\"value\", (records) =>\n            this.setState({ records: records.toJSON(), loading: false })\n          );\n      } else {\n        this.setState({ loading: false });\n      }\n    });\n  }\n\n  async componentDidMount() {\n    this.loadRecords();\n  }\n\n  static getRecordFilename(record) {\n    return `${record.title[record.language].slice(\n      0,\n      30\n    )}_${record.identifier.slice(0, 5)}`\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]/g, \"_\");\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) this.unsubscribe();\n  }\n\n  editRecord(key) {\n    const { match, history } = this.props;\n    const { language, region } = match.params;\n    const { currentUser } = auth;\n    history.push(`/${language}/${region}/${currentUser.uid}/${key}`);\n  }\n\n  submitRecord(key, record) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser && key) {\n      const recordRef = firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        .child(auth.currentUser.uid)\n        .child(\"records\")\n        .child(key);\n\n      recordRef.child(\"status\").set(\"submitted\");\n\n      if (record && !record.filename) {\n        const filename = Submissions.getRecordFilename(record);\n        recordRef.child(\"filename\").set(filename);\n      }\n    }\n  }\n\n  // Make record a draft again\n  withdrawRecord(key) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser && key) {\n      firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        .child(auth.currentUser.uid)\n        .child(\"records\")\n        .child(key)\n        .child(\"status\")\n        .set(\"\");\n    }\n  }\n\n  cloneRecord(key) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      const recordsRef = firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        .child(auth.currentUser.uid)\n        .child(\"records\");\n\n      recordsRef.child(key).once(\"value\", (recordFirebase) => {\n        const record = recordFirebase.toJSON();\n\n        // reset record details\n        record.recordID = \"\";\n        record.status = \"\";\n        record.lastEditedBy = {};\n        record.created = new Date().toISOString();\n        record.filename = \"\";\n        record.timeFirstPublished = \"\";\n\n        if (record.title.en) record.title.en = `${record.title.en} (Copy)`;\n        if (record.title.fr) record.title.fr = `${record.title.fr} (Copte)`;\n        record.identifier = uuidv4();\n        record.created = new Date().toISOString();\n\n        recordsRef.push(record);\n      });\n    }\n  }\n\n  deleteRecord(key) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        .child(auth.currentUser.uid)\n        .child(\"records\")\n        .child(key)\n        .remove();\n    }\n  }\n\n  toggleModal(modalName, state, key = \"\", record = null) {\n    this.setState({ modalKey: key, [modalName]: state, modalRecord: record });\n  }\n\n  render() {\n    const { match, history } = this.props;\n\n    const { language, region } = match.params;\n\n    const {\n      deleteModalOpen,\n      withdrawModalOpen,\n      modalKey,\n      modalRecord,\n      submitModalOpen,\n      records,\n      loading,\n    } = this.state;\n\n    const recordDateSort = (a, b) =>\n      new Date(b[1].created) - new Date(a[1].created);\n\n    return (\n      <div>\n        <SimpleModal\n          open={deleteModalOpen}\n          onClose={() => this.toggleModal(\"deleteModalOpen\", false)}\n          onAccept={() => this.deleteRecord(modalKey)}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={submitModalOpen}\n          onClose={() => this.toggleModal(\"submitModalOpen\", false)}\n          onAccept={() => this.submitRecord(modalKey, modalRecord)}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={withdrawModalOpen}\n          onClose={() => this.toggleModal(\"withdrawModalOpen\", false)}\n          onAccept={() => this.withdrawRecord(modalKey)}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n\n        <Typography variant=\"h5\">\n          <I18n>\n            <En>My Records</En>\n            <Fr>Mes dossiers</Fr>\n          </I18n>\n        </Typography>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <span>\n            <div>\n              <Typography>\n                <I18n>\n                  <En>\n                    To start a new record, click on \"New Record\" and begin\n                    adding information. To continue working on a record, select\n                    it from the list below. Once your record is completed and\n                    information has been provided for all mandatory fields, you\n                    can submit your record for review by clicking the \"Submit\n                    for review\" icon to the right of your record title. The\n                    record will not be published until it is reviewed and\n                    approved by {regions[region].title[language]} staff.\n                  </En>\n                  <Fr>\n                    Afin de soumettre vos métadonnées, cliquez sur « Nouvel\n                    enregistrement » et ajoutez-y les informations demandées. Si\n                    vous désirez reprendre la saisie d’un formulaire déjà\n                    entamé, sélectionnez-le dans la liste ci-dessous. Lorsque\n                    les informations sont saisies pour tous les champs\n                    obligatoires, vous pouvez soumettre vos métadonnées pour\n                    validation en cliquant sur l’icône « soumettre pour\n                    validation ». Vos métadonnées seront publiées lorsqu’elles\n                    auront été validées et approuvées par un professionel du{\" \"}\n                    {regions[region].title[language]}.\n                  </Fr>\n                </I18n>\n              </Typography>\n\n              <div style={{ marginTop: \"10px\" }}>\n                <Button\n                  startIcon={<Add />}\n                  onClick={() => history.push(`/${language}/${region}/new`)}\n                >\n                  <I18n en=\"New Record\" fr=\"Nouvel enregistrement\" />\n                </Button>\n              </div>\n\n              <List>\n                {Object.entries(records || {})\n                  .sort(recordDateSort)\n                  .map(([key, recordFireBase]) => {\n                    const record = firebaseToJSObject(recordFireBase);\n                    const { status, title, created } = record;\n\n                    if (!title || (!title.en && !title.fr)) return null;\n\n                    const submitted = status === \"submitted\";\n                    const published = status === \"published\";\n\n                    const percentValidInt = Math.round(\n                      percentValid(record) * 100\n                    );\n                    const recordIsComplete = percentValidInt === 100;\n                    let submitTooltip = {\n                      en: \"Submit for review\",\n                      fr: \"Soumettre pour examen\",\n                    };\n                    const withdrawTooltip = {\n                      en: \"Return record to draft for editing\",\n                      fr:\n                        \"Retourner l'enregistrement au brouillon pour modification\",\n                    };\n\n                    if (!recordIsComplete)\n                      submitTooltip = {\n                        en: \"Can't submit incomplete record\",\n                        fr:\n                          \"Impossible de soumettre un enregistrement incomplet\",\n                      };\n                    else if (status === \"submitted\" || status === \"published\")\n                      submitTooltip = {\n                        en: \"Record has been submitted\",\n                        fr: \"L'enregistrement a été soumis\",\n                      };\n                    // const recordTitleShortened = `${record.title[\n                    //   language\n                    // ].slice(0, 30)}_${record.identifier.slice(0, 5)}`\n                    //   .trim()\n                    //   .toLowerCase()\n                    //   .replace(/[^a-zA-Z0-9]/g, \"_\");\n\n                    // let wafPath = `${WAF_URL}/${region}`;\n                    // if (status !== \"published\") wafPath += \"/unpublished\";\n                    // const recordURLXML = `${wafPath}/${recordTitleShortened}.xml`;\n                    // const recordURLERDDAP = `${wafPath}/${recordTitleShortened}_erddap.txt`;\n\n                    return (\n                      <ListItem\n                        key={key}\n                        button\n                        onClick={() => this.editRecord(key)}\n                      >\n                        <ListItemAvatar>\n                          <Avatar>\n                            <RecordStatusIcon status={record.status} />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary={\n                            <div style={{ width: \"60%\" }}>\n                              {title[language]} <StatusChip status={status} />\n                            </div>\n                          }\n                          secondary={\n                            created && (\n                              <span>\n                                <LastEdited dateStr={created} />\n                                <I18n>\n                                  <En>{percentValidInt}% complete</En>\n                                  <Fr>{percentValidInt}% Achevée</Fr>\n                                </I18n>\n                              </span>\n                            )\n                          }\n                        />\n                        <ListItemSecondaryAction>\n                          <Tooltip title={<I18n en=\"Clone\" fr=\"Clone\" />}>\n                            <span>\n                              <IconButton\n                                onClick={() => this.cloneRecord(key)}\n                                edge=\"end\"\n                                aria-label=\"clone\"\n                              >\n                                <FileCopy />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          {published ? (\n                            <Tooltip title={<I18n en=\"View\" fr=\"Vue\" />}>\n                              <span>\n                                <IconButton\n                                  onClick={() => this.editRecord(key)}\n                                  edge=\"end\"\n                                >\n                                  <Visibility />\n                                </IconButton>\n                              </span>\n                            </Tooltip>\n                          ) : (\n                            <Tooltip title={<I18n en=\"Edit\" fr=\"Éditer\" />}>\n                              <span>\n                                <IconButton\n                                  onClick={() => this.editRecord(key)}\n                                  edge=\"end\"\n                                >\n                                  <Edit />\n                                </IconButton>\n                              </span>\n                            </Tooltip>\n                          )}\n                          <Tooltip title={<I18n en=\"Delete\" fr=\"Supprimer\" />}>\n                            <span>\n                              <IconButton\n                                onClick={() =>\n                                  this.toggleModal(\"deleteModalOpen\", true, key)\n                                }\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                              >\n                                <Delete />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          <Tooltip\n                            title={\n                              <I18n\n                                en={submitTooltip.en}\n                                fr={submitTooltip.fr}\n                              />\n                            }\n                          >\n                            <span>\n                              <IconButton\n                                disabled={\n                                  submitted || published || !recordIsComplete\n                                }\n                                onClick={() =>\n                                  this.toggleModal(\n                                    \"submitModalOpen\",\n                                    true,\n                                    key,\n                                    record\n                                  )\n                                }\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                              >\n                                <Publish />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          <Tooltip\n                            title={\n                              <I18n\n                                en={withdrawTooltip.en}\n                                fr={withdrawTooltip.fr}\n                              />\n                            }\n                          >\n                            <span>\n                              <IconButton\n                                disabled={!status}\n                                onClick={() =>\n                                  this.toggleModal(\n                                    \"withdrawModalOpen\",\n                                    true,\n                                    key\n                                  )\n                                }\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                              >\n                                <Eject />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          {/* <Tooltip\n                            title={\n                              <I18n en=\"Download XML\" fr=\"Télécharger XML\" />\n                            }\n                          >\n                            <span>\n                              <IconButton\n                                disabled={!status}\n                                onClick={() => openInNewTab(recordURLXML)}\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                              >\n                                <CloudDownload />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          <Tooltip\n                            title={\n                              <I18n\n                                en=\"Download ERDDAP snippet\"\n                                fr={\"Télécharger l'extrait ERDDAP\"}\n                              />\n                            }\n                          >\n                            <span>\n                              <IconButton\n                                disabled={!status}\n                                onClick={() => openInNewTab(recordURLERDDAP)}\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                              >\n                                <Code />\n                              </IconButton>\n                            </span>\n                          </Tooltip> */}\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    );\n                  })}\n              </List>\n            </div>\n\n            {!records && (\n              <Typography>\n                <I18n>\n                  <En>You don't have any records.</En>\n                  <Fr>Vous n'avez pas d'historique de saisie.</Fr>\n                </I18n>\n              </Typography>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Submissions;\n","import React from \"react\";\n\nimport { I18n } from \"../I18n\";\n\nfunction getContactTitleFromNames(contact) {\n  const { orgName, indName } = contact;\n  const titleParts = [orgName, indName];\n\n  return titleParts\n    .filter((e) => e)\n    .map((e) => e.trim())\n    .filter((e) => e)\n    .join(\" - \");\n}\n\nfunction ContactTitle({ contact }) {\n  return (\n    getContactTitleFromNames(contact) || (\n      <I18n en=\"new contact\" fr=\"Nouveau contact\" />\n    )\n  );\n}\n\nexport default ContactTitle;\n","import React from \"react\";\nimport {\n  Typography,\n  IconButton,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n  Grid,\n  ListItemSecondaryAction,\n  ListItemAvatar,\n  CircularProgress,\n  Tooltip,\n} from \"@material-ui/core\";\nimport {\n  Add,\n  Edit,\n  Delete,\n  PermContactCalendar,\n  FileCopy,\n} from \"@material-ui/icons\";\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\nimport ContactTitle from \"../FormComponents/ContactTitle\";\nimport { I18n, En, Fr } from \"../I18n\";\nimport SimpleModal from \"../FormComponents/SimpleModal\";\n\nclass Contacts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: {},\n      modalOpen: false,\n      modalKey: \"\",\n      loading: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(user.uid)\n          .child(\"contacts\")\n          .on(\"value\", (records) =>\n            this.setState({ contacts: records.toJSON(), loading: false })\n          );\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) this.unsubscribe();\n  }\n\n  deleteContact(key) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        .child(auth.currentUser.uid)\n        .child(\"contacts\")\n        .child(key)\n        .remove();\n    }\n  }\n\n  cloneContact(key) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      const contactsRef = firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        .child(auth.currentUser.uid)\n        .child(\"contacts\");\n\n      contactsRef.child(key).once(\"value\", (contactFirebase) => {\n        const contact = contactFirebase.toJSON();\n        if (contact.indName) contact.indName += \" (Copy)\";\n        else contact.orgName += \" (Copy)\";\n        contactsRef.push(contact);\n      });\n    }\n  }\n\n  addContact() {\n    const { history, match } = this.props;\n    const { language, region } = match.params;\n    // render different page with 'save' button?\n\n    if (auth.currentUser) {\n      firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        .child(auth.currentUser.uid)\n        .child(\"contacts\")\n        .push({})\n        .then(({ key }) => {\n          history.push(`/${language}/${region}/contacts/${key}`);\n        });\n    }\n  }\n\n  editContact(key) {\n    const { history, match } = this.props;\n    const { language, region } = match.params;\n\n    // render different page with 'save' button?\n    history.push(`/${language}/${region}/contacts/${key}`);\n  }\n\n  toggleModal(state, key = \"\") {\n    this.setState({ modalKey: key, modalOpen: state });\n  }\n\n  render() {\n    const { modalOpen, modalKey, loading, contacts } = this.state;\n    return (\n      <Grid container direction=\"column\" spacing={3}>\n        <Grid item xs>\n          <SimpleModal\n            open={modalOpen}\n            onClose={() => this.toggleModal(false)}\n            onAccept={() => this.deleteContact(modalKey)}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          />\n\n          <Typography variant=\"h5\">\n            <I18n>\n              <En>Contacts</En>\n              <Fr>Contacts</Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <Typography>\n            <I18n>\n              <En>\n                Create contacts here that you can reuse in multiple metadata\n                records.\n              </En>\n              <Fr>\n                Ajoutez ici les personnes ressources que vous désirez réutiliser pour la saisie d’autres métadonnées.\n              </Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n\n        <Grid item xs>\n          <Button startIcon={<Add />} onClick={() => this.addContact()}>\n            <I18n>\n              <En>Add contact</En>\n              <Fr>ajouter un contact</Fr>\n            </I18n>\n          </Button>\n        </Grid>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <>\n            <Grid item xs>\n              {contacts && Object.keys(contacts).length ? (\n                <div>\n                  <Typography>\n                    <I18n>\n                      <En>These are your contacts</En>\n                      <Fr>Ce sont vos contacts</Fr>\n                    </I18n>\n                  </Typography>\n                  <List>\n                    {Object.entries(contacts).map(([key, val]) => (\n                      <ListItem\n                        key={key}\n                        button\n                        onClick={() => this.editContact(key)}\n                      >\n                        <ListItemAvatar>\n                          <Avatar>\n                            <PermContactCalendar />\n                          </Avatar>\n                        </ListItemAvatar>\n\n                        <ListItemText\n                          primary={<ContactTitle contact={val} />}\n                        />\n                        <ListItemSecondaryAction>\n                          <Tooltip title={<I18n en=\"Edit\" fr=\"Éditer\" />}>\n                            <span>\n                              <IconButton onClick={() => this.editContact(key)}>\n                                <Edit />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          <Tooltip title={<I18n en=\"Clone\" fr=\"Clone\" />}>\n                            <span>\n                              <IconButton\n                                onClick={() => this.cloneContact(key)}\n                              >\n                                <FileCopy />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          <Tooltip title={<I18n en=\"Delete\" fr=\"Supprimer\" />}>\n                            <span>\n                              <IconButton\n                                onClick={() => this.toggleModal(true, key)}\n                              >\n                                <Delete />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                </div>\n              ) : (\n                <Typography>\n                  <I18n>\n                    <En>No contacts submitted yet</En>\n                    <Fr>Aucun contacts n'a encore été soumis</Fr>\n                  </I18n>\n                </Typography>\n              )}\n            </Grid>\n          </>\n        )}\n      </Grid>\n    );\n  }\n}\nexport default Contacts;\n","import React from \"react\";\n\nimport { Typography } from \"@material-ui/core\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nconst Login = () => {\n  return (\n    <div>\n      <Typography>\n        <I18n>\n          <En>\n            Please sign in to access your metadata records. You will need a\n            Google account to login.\n          </En>\n          <Fr>\n            Connectez-vous pour accéder à l'historique de saisie de vos métadonnées.\n            Vous aurez besoin d'un compte Google pour vous connecter.\n          </Fr>\n        </I18n>\n      </Typography>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <Typography variant=\"h5\">Not Found / Non trouvé</Typography>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { I18n } from \"../I18n\";\n\nfunction RequiredMark({ passes }) {\n  if (passes)\n    return (\n      <span\n        style={{\n          color: \"green\",\n          fontSize: \"x-large\",\n          position: \"relative\",\n          bottom: \"-4px\",\n        }}\n      >\n        {\" \"}\n        ✓{\" \"}\n      </span>\n    );\n  return (\n    <Tooltip title={<I18n en=\"Required\" fr=\"Obligatoire\" />}>\n      <span\n        style={{\n          color: \"red\",\n          fontSize: \"large\",\n        }}\n      >\n        {\" \"}\n        ✵{\" \"}\n      </span>\n    </Tooltip>\n  );\n}\nexport default RequiredMark;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const SupplementalText = ({ children }) => (\n  <Typography variant=\"body2\" component=\"div\">\n    {children}\n  </Typography>\n);\nexport const QuestionText = ({ children }) => (\n  <Typography variant=\"body1\" component=\"div\" style={{ marginBottom: \"10px\" }}>\n    {children}\n  </Typography>\n);\nexport const paperClass = {\n  padding: \"10px\",\n  margin: \"20px\",\n  width: \"90%\",\n};\n","import React from \"react\";\n\nimport { Save } from \"@material-ui/icons\";\nimport { Typography, Paper, Grid } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nimport regions from \"../../regions\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport { paperClass } from \"../FormComponents/QuestionStyles\";\n\nconst StartTab = ({ disabled, record }) => {\n  const { region } = useParams();\n  const regionInfo = regions[region];\n\n  return (\n    <Grid item xs>\n      <Paper style={paperClass}>\n        {disabled && (\n          <Typography>\n            <I18n>\n              <En>\n                <b>\n                  This form is locked because it has already been{\" \"}\n                  {record.status}.\n                </b>\n              </En>\n              <Fr>\n                <b>\n                  Ce formulaire est verrouillé car il a déjà été{\" \"}\n                  {record.status === \"submitted\" ? \"soumis\" : \"publié\"} .\n                </b>\n              </Fr>\n            </I18n>\n          </Typography>\n        )}\n        <Typography variant=\"body1\">\n          <I18n>\n            <En>\n              Welcome to the {regionInfo.title.en} Metadata Entry Tool, the\n              first step in making your data discoverable and accessible through\n              CIOOS. This information will be used to create a metadata profile\n              for your dataset that will allow it to be searchable through the{\" \"}\n              {regionInfo.catalogueTitle.en} Data Catalogue. Please fill out\n              each field with as much detail as possible. The metadata profile\n              will help describe this dataset for others to determine if it is\n              relevant for their work and ensure it is interoperable with other\n              databases and systems.\n              <br />\n              <br /> Questions regarding the form can be directed to{\" \"}\n            </En>\n            <Fr>\n              Bienvenue dans l’outil de saisie de métadonnées du{\" \"}\n              {regionInfo.title.fr}! Ceci constitue la première étape pour rendre vos données\n              accessibles et découvrables via notre plateforme. Ces\n              renseignements serviront à créer un profil de métadonnées pour\n              votre jeu de données, facilitant ainsi sa découverte dans le{\" \"}\n              {regionInfo.catalogueTitle.fr} et le rendant interopérable avec\n              d’autres systèmes de diffusion. Veuillez remplir les champs requis\n              de la façon la plus exhaustive possible.\n              <br />\n              <br /> Les questions concernant le formulaire peuvent être\n              adressées à{\" \"}\n            </Fr>\n          </I18n>\n          <a href={`mailto:${regionInfo.email}`}>{regionInfo.email}</a>.\n        </Typography>\n\n        <ul>\n          <li>\n            <I18n>\n              <En>You can save the form once you have filled out a title.</En>\n              <Fr>\n                Vous pouvez enregistrer le formulaire une fois que vous avez\n                saisi un titre.\n              </Fr>\n            </I18n>\n          </li>\n          <li>\n            <En>\n              All fields marked with a <RequiredMark /> are mandatory.\n            </En>\n            <Fr>\n              Tous les champs marqués d'une étoile <RequiredMark /> sont obligatoires.\n            </Fr>\n          </li>\n          <li>\n            <I18n>\n              <En>\n                The form can be saved and completed over time by clicking the{\" \"}\n                <Save /> icon in the bottom right corner. This icon will be\n                greyed out until you have filled in the dataset title in the\n                \"Identification\" section.\n              </En>\n              <Fr>\n                Le formulaire peut être sauvegardé et complété ultérieurement\n                en cliquant sur le bouton <Save /> dans le coin inférieur droit.\n                Cette icône sera grisée jusqu'à ce que vous ayez complété le\n                titre du jeu de données dans la Section « Identification des\n                données ».\n              </Fr>\n            </I18n>\n          </li>\n          <li>\n            <I18n>\n              <En>\n                Some fields can have text in both French and English, though\n                this is only required for the title and the abstract. There is a\n                'Translate' button that will automatically generate text in the\n                other language. This translation is more accurate when there is\n                more text to translate.\n              </En>\n              <Fr>\n                Certains champs peuvent avoir du texte à la fois en français et\n                en anglais, toutefois seules les traductions du titre et de\n                l'abrégé sont réellement requisent. Il y a un Bouton « Traduire » qui générera\n                automatiquement du texte dans l'autre langue. Veuillez noter que cette traduction\n                est plus précise quand il y a plus de texte que moins à traduire.\n              </Fr>\n            </I18n>\n          </li>\n        </ul>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default StartTab;\n","import React from \"react\";\n\nimport {\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\n\nconst CheckBoxList = ({\n  onChange,\n  value = [],\n  name,\n  options,\n  optionLabels = options,\n  optionTooltips = [],\n  disabled,\n  labelSize = 3,\n}) => {\n  // remove array element from array, by value\n  function toggleArrayElement(ele, arr) {\n    if (arr.includes(ele)) return arr.filter((v) => v !== ele);\n    return arr.concat(ele);\n  }\n\n  return (\n    <Grid container direction=\"row\">\n      {options.map((v, i) => {\n        return (\n          <Grid item key={i} xs={labelSize}>\n            <Tooltip title={optionTooltips[i] || \"\"}>\n              <FormControlLabel\n                disabled={disabled}\n                control={\n                  <Checkbox\n                    value={v || []}\n                    name={name}\n                    checked={value.includes(v)}\n                    onChange={(e) => {\n                      const val = e.target.value;\n                      const newCheckedValuesArray = toggleArrayElement(\n                        val,\n                        value\n                      );\n\n                      onChange(newCheckedValuesArray);\n                    }}\n                  />\n                }\n                label={<Typography>{optionLabels[i]}</Typography>}\n              />\n            </Tooltip>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default CheckBoxList;\n","export const eovList = [\n  \"dissolvedOrganicCarbon\",\n  \"inorganicCarbon\",\n  \"nitrate\",\n  \"nutrients\",\n  \"oxygen\",\n  \"phosphate\",\n  \"potentialDensity\",\n  \"potentialTemperature\",\n  \"pressure\",\n  \"seaIce\",\n  \"seaState\",\n  \"seaSurfaceHeight\",\n  \"seaSurfaceSalinity\",\n  \"seaSurfaceTemperature\",\n  \"seawaterDensity\",\n  \"silicate\",\n  \"speedOfSound\",\n  \"subSurfaceCurrents\",\n  \"subSurfaceSalinity\",\n  \"subSurfaceTemperature\",\n  \"surfaceCurrents\",\n  \"other\",\n];\n\nexport const roleCodes = {\n  custodian: {\n    title: {\n      en: \"Metadata Custodian\",\n      fr: \"Dépositaire des métadonnées\",\n    },\n    text: {\n      en:\n        \"Party that accepts accountability and responsibility for the resource and ensures appropriate care and maintenance of the resource \",\n      fr:\n        \"Partie qui accepte la reddition de comptes et la responsabilité de la ressource et assure le soin et l'entretien appropriés de la ressource \",\n    },\n  },\n  owner: {\n    title: { en: \"Data Owner\", fr: \"Propriétaire des données\" },\n    text: {\n      en: \"Party that owns the resource\",\n      fr: \"Partie propriétaire de la ressource\",\n    },\n    includeInCitation: true,\n  },\n  distributor: {\n    title: { en: \"Distributor\", fr: \"Distributeur\" },\n    text: {\n      en: \"Party who distributes the resource\",\n      fr: \"Partie qui distribue la ressource\",\n    },\n  },\n  author: {\n    title: { en: \"Author\", fr: \"Auteur\" },\n    text: { en: \"Party who authored the resource\" },\n    includeInCitation: true,\n  },\n  coAuthor: {\n    title: { en: \"Coauthor\", fr: \"Co-auteur\" },\n    text: { en: \"Parti qui est l'auteur de la ressource\" },\n  },\n\n  collaborator: {\n    title: { en: \"Collaborator\", fr: \"Collaborateur\" },\n    text: {\n      en:\n        \"Party who assists with the generation of the resource other than the principal investigator\",\n      fr:\n        \"Partie qui aide à la production de la ressource autre que le chercheur principal\",\n    },\n  },\n  contributor: {\n    title: { en: \"Contributor\", fr: \"Contributeur\" },\n    text: {\n      en: \"Party contributing to the resource\",\n      fr: \"Partie contribuant à la ressource\",\n    },\n  },\n  editor: {\n    title: { en: \"Editor\", fr: \"Éditeur\" },\n    text: {\n      en: \"Party who reviewed or modified the resource to improve the content\",\n      fr:\n        \"Partie qui a examiné ou modifié la ressource pour améliorer le contenu\",\n    },\n  },\n  funder: {\n    title: { en: \"Funder\", fr: \"Fondateur\" },\n    text: {\n      en: \"Party providing monetary support for the resource\",\n      fr: \"Partie fournissant un soutien monétaire pour la ressource\",\n    },\n  },\n  mediator: {\n    title: { en: \"Mediator\", fr: \"Médiateur\" },\n    text: {\n      en:\n        \"A class of entity that mediates access to the resource and for whom the resource is intended or useful \",\n      fr:\n        \"Classe d'entité qui sert de médiateur à l'accès à la ressource et pour laquelle la ressource est destinée ou utile\",\n    },\n  },\n  originator: {\n    title: { en: \"Originator\", fr: \"Initiateur\" },\n    text: {\n      en: \"Party who created the resource\",\n      fr: \"Partie qui a créé la ressource\",\n    },\n    includeInCitation: true,\n  },\n  pointOfContact: {\n    title: { en: \"Point Of Contact\", fr: \"Point de contact\" },\n    text: {\n      en:\n        \"Party who can be contacted for acquiring knowledge about or acquisition of the resource\",\n      fr:\n        \"Partie qui peut être contactée pour acquérir des connaissances sur la ressource ou l'acquisition de la ressource\",\n    },\n  },\n\n  principalInvestigator: {\n    title: { en: \"Principal Investigator\", fr: \"Responsable de recherche\" },\n    text: {\n      en:\n        \"Key party responsible for gathering information and conducting research\",\n      fr:\n        \"Partie clé responsable de la collecte de l'information et de la réalisation de la recherche\",\n    },\n    includeInCitation: true,\n  },\n  processor: {\n    title: { en: \"Processor\", fr: \"Transformateur\" },\n    text: {\n      en:\n        \"Party who has processed the data in a manner such that the resource has been modified\",\n      fr:\n        \"Partie qui a traité les données d'une manière telle que la ressource a été modifiée\",\n    },\n  },\n  publisher: {\n    title: { en: \"Publisher\", fr: \"Editeur\" },\n    text: {\n      en: \"Party who published the resource\",\n      fr: \"Partie qui a publié la ressource\",\n    },\n  },\n  resourceProvider: {\n    title: { en: \"Resource Provider\", fr: \"Fournisseur de ressources\" },\n    text: {\n      en: \"Party that supplies the resource\",\n      fr: \"Partie qui fournit la ressource \",\n    },\n  },\n  rightsHolder: {\n    title: { en: \"Rights Holder\", fr: \"Ayant droit\" },\n    text: {\n      en: \"Party owning or managing rights over the resource \",\n      fr: \"Partie détenant ou gérant des droits sur la ressource\",\n    },\n  },\n  sponsor: {\n    title: { en: \"Sponsor\", fr: \"Commanditaire\" },\n    text: {\n      en: \"Party who speaks for the resource \",\n      fr: \"Parti qui parle pour la ressource\",\n    },\n  },\n  stakeholder: {\n    title: { en: \"Stakeholder\", fr: \"Actionnaire\" },\n    text: {\n      en:\n        \"Party who has an interest in the resource or the use of the resource \",\n      fr:\n        \"Partie qui a un intérêt dans la ressource ou l'utilisation de la ressource\",\n    },\n  },\n  // This option doesn't seem appropriate to the form\n  // user: {\n  //   title: { en: \"User\", fr: \"Utilisateur\" },\n  //   text: {\n  //     en: \"Party who uses the resource\",\n  //     fr: \"Partie qui utilise la ressource\",\n  //   },\n  // },\n};\n\nexport const progressCodes = {\n  onGoing: {\n    title: { en: \"Ongoing\", fr: \"En cours\" },\n    text: {\n      en:\n        \"Data is continually being updated. e.g satellite dataset that continues to be augmented\",\n      fr:\n        \"Les données sont continuellement mises à jour, par exemple un ensemble de données satellite qui continue d'être augmenté\",\n    },\n  },\n\n  historicalArchive: {\n    title: { en: \"Historical Archive\", fr: \"Archives historiques\" },\n    text: {\n      en:\n        \"Data has been stored in an offline storage facility. use to indicate data are archived\",\n      fr:\n        \"Les données ont été stockées dans une installation de stockage hors connexion. Utilisez pour indiquer que les données sont archivées\",\n    },\n  },\n\n  completed: {\n    title: { en: \"Completed\", fr: \"Terminé\" },\n    text: {\n      en:\n        \"Production of the data has been completed \te.g. raw data that is not ongoing, completed model\",\n      fr:\n        \"La production des données a été terminée, p. ex. données brutes qui ne sont pas en cours, modèle terminé\",\n    },\n  },\n};\n\nexport const depthDirections = [\"depthPositive\", \"heightPositive\"];\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport CheckBoxList from \"./CheckBoxList\";\nimport RequiredMark from \"./RequiredMark\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport { roleCodes } from \"../../isoCodeLists\";\n\nimport ContactTitle from \"./ContactTitle\";\nimport { QuestionText, SupplementalText } from \"./QuestionStyles\";\n\nconst EditContact = ({\n  value,\n  showRolePicker,\n  disabled,\n  updateContact,\n  updateContactEvent,\n}) => {\n  const { language } = useParams();\n  const options = Object.keys(roleCodes);\n  const optionLabels = Object.values(roleCodes).map(\n    ({ title, includeInCitation }) =>\n      `${title[language]}${includeInCitation ? \"*\" : \"\"}`\n  );\n  const citationRoleText = {\n    en: \"This role is included in the citation.\",\n    fr: \"Ce rôle est inclus dans la citation.\",\n  };\n  const tooltips = Object.values(roleCodes).map(\n    ({ text, includeInCitation }) =>\n      `${text[language]}${\n        includeInCitation ? `.  ${citationRoleText[language]}` : \"\"\n      }`\n  );\n  const numSpecialRoles = 3;\n  const [expanded, setExpanded] = React.useState(false);\n\n  const selectOptionIsInExpandedList =\n    (value.role || []).filter(\n      (role) => options.indexOf(role) > numSpecialRoles - 1\n    ).length > 0;\n\n  // function updateContact() {}\n  // function updateContactEvent() {}\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item xs>\n        <Typography variant=\"h6\">\n          <ContactTitle contact={value} />\n        </Typography>\n      </Grid>\n      <Grid item xs>\n        {showRolePicker && (\n          <Grid item xs>\n            <QuestionText>\n              <I18n>\n                <En>\n                  What is the role of this contact?{\" \"}\n                  {selectOptionIsInExpandedList}\n                </En>\n                <Fr>Quel est son rôle?</Fr>\n              </I18n>\n              <RequiredMark passes={value.role && value.role.length} />\n              <SupplementalText>\n                {\" \"}\n                <I18n>\n                  <En>\n                    At least one Metadata Custodian and one Data Owner are\n                    required. Multiple roles can be selected for each contact.\n                    Expand the list below for additional role.\n                  </En>\n                  <Fr>\n                    Au moins un dépositaire de métadonnées et un propriétaire de\n                    données sont requis. Plusieurs rôles peuvent être\n                    sélectionnés par personne. Si vous avez besoin de rôles plus\n                    spécifiques, vous pouvez étendre la liste.\n                  </Fr>\n                </I18n>\n              </SupplementalText>\n            </QuestionText>\n\n            <CheckBoxList\n              value={value.role || []}\n              onChange={updateContact(\"role\")}\n              options={options.slice(0, numSpecialRoles)}\n              optionLabels={optionLabels.slice(0, numSpecialRoles)}\n              disabled={disabled}\n              optionTooltips={tooltips.slice(0, numSpecialRoles)}\n            />\n\n            <Accordion\n              onChange={() => setExpanded(!expanded)}\n              expanded={expanded || selectOptionIsInExpandedList}\n            >\n              <AccordionSummary\n                expandIcon={\n                  <Tooltip title=\"Show/Hide more options\">\n                    <ExpandMore />\n                  </Tooltip>\n                }\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <I18n>\n                  <En>Show/Hide more role options</En>\n                  <Fr>Afficher/masquer les rôles</Fr>\n                </I18n>\n              </AccordionSummary>\n              <AccordionDetails>\n                <CheckBoxList\n                  value={value.role || []}\n                  onChange={updateContact(\"role\")}\n                  options={options.slice(numSpecialRoles)}\n                  optionLabels={optionLabels.slice(numSpecialRoles)}\n                  disabled={disabled}\n                  optionTooltips={tooltips.slice(numSpecialRoles)}\n                />\n              </AccordionDetails>\n            </Accordion>\n          </Grid>\n        )}\n\n        <Grid\n          container\n          direction=\"column\"\n          spacing={1}\n          style={{ marginTop: \"10px\" }}\n        >\n          {/* Organization */}\n          <Grid item xs>\n            <QuestionText>\n              <I18n>\n                <En>Provide any information about the organization</En>\n                <Fr>Identification de l'organisation</Fr>\n              </I18n>\n            </QuestionText>\n          </Grid>\n          <Grid item xs style={{ marginleft: \"10px\" }}>\n            <TextField\n              label={<I18n en=\"Organization name\" fr=\"Nom de l'organisation\" />}\n              value={value.orgName}\n              onChange={updateContactEvent(\"orgName\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"URL\" fr=\"URL\" />}\n              value={value.orgURL}\n              onChange={updateContactEvent(\"orgURL\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Address\" fr=\"Adresse\" />}\n              value={value.orgAdress}\n              onChange={updateContactEvent(\"orgAdress\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"City\" fr=\"Ville\" />}\n              value={value.orgCity}\n              onChange={updateContactEvent(\"orgCity\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Country\" fr=\"Pays\" />}\n              value={value.orgCountry}\n              onChange={updateContactEvent(\"orgCountry\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Email\" fr=\"Courriel\" />}\n              value={value.orgEmail}\n              onChange={updateContactEvent(\"orgEmail\")}\n              fullWidth\n              disabled={disabled}\n            />{\" \"}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs>\n        {/* Individual */}\n        <Typography>\n          <I18n>\n            <En>Provide any information about the individual</En>\n            <Fr>Identification de l'individu</Fr>\n          </I18n>\n        </Typography>\n\n        <Grid\n          container\n          direction=\"column\"\n          spacing={1}\n          style={{ marginTop: \"10px\" }}\n        >\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Individual Name\" fr=\"Nom de l'individu\" />}\n              value={value.indName}\n              onChange={updateContactEvent(\"indName\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Position\" fr=\"Poste occupé\" />}\n              value={value.indPosition}\n              onChange={updateContactEvent(\"indPosition\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Email\" fr=\"Courriel\" />}\n              value={value.indEmail}\n              onChange={updateContactEvent(\"indEmail\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EditContact;\n","import React from \"react\";\nimport {\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Typography,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { I18n } from \"../I18n\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    minWidth: 200,\n  },\n  selectEmpty: {},\n}));\n\nconst SelectInput = ({\n  value = \"\",\n  name,\n  options,\n  optionLabels,\n  optionTooltips = [],\n  onChange,\n  disabled,\n  label,\n  fullWidth = true,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      fullWidth={fullWidth}\n      className={classes.formControl}\n      disabled={disabled}\n    >\n      <Select\n        className={classes.selectEmpty}\n        name={name}\n        fullWidth={fullWidth}\n        value={value}\n        disabled={disabled}\n        displayEmpty\n        onChange={onChange}\n      >\n        <MenuItem value=\"\">\n          <InputLabel id=\"demo-simple-select-label\">\n            <Typography>\n              {label || <I18n en=\"Choose\" fr=\"Choisir\" />}\n            </Typography>\n          </InputLabel>\n        </MenuItem>\n        {options.map((v, i) => (\n          <MenuItem key={v} value={v}>\n            <Tooltip\n              enterDelay={1}\n              title={optionTooltips[i] ? optionTooltips[i] : \"\"}\n            >\n              <div style={{ width: \"100%\" }}>{optionLabels[i]}</div>\n            </Tooltip>\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\nexport default SelectInput;\n","import React, { useState } from \"react\";\n\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport arrayMove from \"array-move\";\nimport { Delete, DragHandle, FileCopy } from \"@material-ui/icons\";\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  IconButton,\n  Typography,\n  Tooltip,\n  Grid,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport { deepCopy, deepEquals } from \"../../utils/misc\";\nimport { paperClass } from \"./QuestionStyles\";\nimport SelectInput from \"./SelectInput\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nimport ContactTitle from \"./ContactTitle\";\n\nconst initial = {\n  role: [],\n  orgName: \"\",\n  orgEmail: \"\",\n  orgURL: \"\",\n  orgAdress: \"\",\n  orgCity: \"\",\n  orgCountry: \"\",\n  indName: \"\",\n  indPosition: \"\",\n  indEmail: \"\",\n};\n\nconst ContactListLeft = ({\n  contacts,\n  updateContacts,\n  activeContact,\n  setActiveContact,\n  disabled,\n  userContacts,\n}) => {\n  const [currentContacts, setItems] = useState(contacts);\n\n  if (!deepEquals(currentContacts, contacts)) {\n    setItems(contacts);\n  }\n  //  removedIndex is dragStart\n  //  addedIndex is dragEnd\n  function onDrop({ removedIndex, addedIndex }) {\n    if (removedIndex === activeContact) setActiveContact(addedIndex);\n    else if (addedIndex <= activeContact && removedIndex > activeContact)\n      setActiveContact(activeContact + 1);\n\n    const reorderedContacts = arrayMove(\n      currentContacts,\n      removedIndex,\n      addedIndex\n    );\n\n    updateContacts(reorderedContacts);\n  }\n\n  function removeItem(itemIndex) {\n    updateContacts(contacts.filter((e, index) => index !== itemIndex));\n    if (contacts.length) setActiveContact(contacts.length - 2);\n  }\n  function duplicateContact(contactIndex) {\n    const duplicatedContact = deepCopy(contacts[contactIndex]);\n\n    if (duplicatedContact.indName) duplicatedContact.indName += \" (Copy)\";\n    else duplicatedContact.orgName += \" (Copy)\";\n\n    updateContacts(contacts.concat(duplicatedContact));\n  }\n\n  const contactList = Object.values(userContacts || {});\n\n  function handleAddFromSavedContacts(e) {\n    const index = e.target.value;\n    updateContacts(contacts.concat(deepCopy(contactList[index])));\n    setActiveContact(contacts.length);\n  }\n\n  function handleAddNewContact() {\n    updateContacts(contacts.concat(deepCopy(initial)));\n    setActiveContact(contacts.length);\n  }\n\n  return (\n    <Paper style={paperClass}>\n      <Grid container direction=\"column\" justify=\"flex-start\">\n        <Grid item xs style={{ margin: \"10px\" }}>\n          <Typography>\n            {contacts.length ? (\n              <I18n>\n                <En>Contacts in this record:</En>\n                <Fr>Contacts dans cet enregistrement:</Fr>\n              </I18n>\n            ) : (\n              <I18n>\n                <En>There are no contacts in this record.</En>\n                <Fr>Il n'y a aucun contact dans cet enregistrement.</Fr>\n              </I18n>\n            )}\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <List>\n            <Container\n              dragHandleSelector=\".drag-handle\"\n              lockAxis=\"y\"\n              onDrop={onDrop}\n            >\n              {contacts.map((contactItem, i) => {\n                return (\n                  <Draggable key={i}>\n                    <ListItem\n                      key={i}\n                      button\n                      onClick={() => setActiveContact(i)}\n                    >\n                      <ListItemText\n                        primary={\n                          <Typography\n                            style={{\n                              fontWeight: activeContact === i ? \"bold\" : \"\",\n                              width: \"80%\",\n                            }}\n                          >\n                            <ContactTitle contact={contactItem} />\n                          </Typography>\n                        }\n                      />\n                      <ListItemSecondaryAction>\n                        <Tooltip\n                          title={\n                            <I18n\n                              en=\"Duplicate contact\"\n                              fr=\"Duplicate contact\"\n                            />\n                          }\n                        >\n                          <span>\n                            <IconButton\n                              onClick={() => duplicateContact(i)}\n                              edge=\"end\"\n                              aria-label=\"clone\"\n                            >\n                              <FileCopy />\n                            </IconButton>\n                          </span>\n                        </Tooltip>\n                        <Tooltip\n                          title={\n                            <I18n\n                              en=\"Remove from this record\"\n                              fr=\"Supprimer de cet enregistrement\"\n                            />\n                          }\n                        >\n                          <span>\n                            <IconButton\n                              onClick={() => removeItem(i)}\n                              edge=\"end\"\n                              aria-label=\"clone\"\n                            >\n                              <Delete />\n                            </IconButton>\n                          </span>\n                        </Tooltip>\n                        <Tooltip\n                          title={\n                            <I18n en=\"Drag to reorder\" fr=\"Duplicate contact\" />\n                          }\n                        >\n                          <span>\n                            <IconButton\n                              className=\"drag-handle\"\n                              edge=\"end\"\n                              aria-label=\"clone\"\n                            >\n                              <DragHandle />\n                            </IconButton>\n                          </span>\n                        </Tooltip>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  </Draggable>\n                );\n              })}\n            </Container>\n          </List>\n        </Grid>\n        <Grid item xs style={{ margin: \"10px\" }}>\n          <Button\n            disabled={disabled}\n            onClick={handleAddNewContact}\n            fullWidth\n            style={{ height: \"56px\", justifyContent: \"initial\" }}\n          >\n            <Typography>\n              <I18n>\n                <En>Add new contact</En>\n                <Fr>Ajouter un contact</Fr>\n              </I18n>\n            </Typography>\n          </Button>\n        </Grid>\n        <Grid item xs style={{ margin: \"10px\" }}>\n          <SelectInput\n            value=\"\"\n            labelId=\"add-existing\"\n            onChange={handleAddFromSavedContacts}\n            optionLabels={contactList.map((contactItem) => (\n              <ContactTitle contact={contactItem} />\n            ))}\n            options={contactList.map((v, i) => i)}\n            disabled={!contactList.length || disabled}\n            label={<I18n en=\"ADD SAVED CONTACT\" fr=\"AJOUTER UN CONTACT\" />}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\nexport default ContactListLeft;\n","import React from \"react\";\n\nimport Cite from \"citation-js\";\nconst intersection = (arrA, arrB) => arrA.filter((x) => arrB.includes(x));\nfunction APAPreview({ record, language }) {\n  const {\n    title,\n    datasetIdentifier = \"\",\n    created,\n    contacts = [],\n    datePublished,\n  } = record;\n\n  const apaData = [\n    {\n      title: title[language],\n\n      author: contacts\n        .filter(\n          (contact) =>\n            contact.role &&\n            intersection(contact.role, [\n              \"author\",\n              \"owner\",\n              \"originator\",\n              \"principalInvestigator\",\n            ]).length\n        )\n        .map((contact) => {\n          if (contact.indName) return { name: contact.indName };\n          return { family: contact.orgName };\n          // seems that only individuals gets cited\n        }),\n      date: { published: datePublished || created },\n\n      identifier: [\n        {\n          type: \"doi\",\n          id: datasetIdentifier.replace(/https?:\\/\\/doi\\.org\\//, \"\"),\n        },\n      ],\n      license: [\n        {\n          raw: record.license,\n        },\n      ],\n    },\n  ];\n  const data = Cite(apaData);\n\n  const html = data.format(\"bibliography\", {\n    format: \"html\",\n    template: \"apa\",\n    lang: \"en-US\",\n  });\n\n  return (\n    <div>\n      <div\n        dangerouslySetInnerHTML={{ __html: html }}\n        style={{ padding: \"5px\" }}\n      />\n    </div>\n  );\n}\n\nexport default APAPreview;\n","import React, { useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { Paper, Grid } from \"@material-ui/core\";\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\n\nimport EditContact from \"../FormComponents/ContactEditor\";\nimport ContactLeftList from \"../FormComponents/ContactLeftList\";\n\nimport {\n  QuestionText,\n  SupplementalText,\n  paperClass,\n} from \"../FormComponents/QuestionStyles\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport { validateField } from \"../../utils/validate\";\n\nimport ApaPreview from \"../FormComponents/ApaPreview\";\n\nimport regions from \"../../regions\";\n\nconst ContactTab = ({ disabled, record, userContacts, updateRecord }) => {\n  const { language, region } = useParams();\n  const { contacts = [] } = record;\n\n  const updateContacts = updateRecord(\"contacts\");\n\n  const [activeContact, setActiveContact] = useState(0);\n\n  // Instead of updating record.<item> we are\n  // updating record.contacts[activeContact].<item>\n  function updateContactEvent(key) {\n    return (e) => {\n      const newContacts = [...contacts];\n      newContacts[activeContact][key] = e.target.value;\n      updateContacts(newContacts);\n    };\n  }\n  function updateContact(key) {\n    return (value) => {\n      const newContacts = [...contacts];\n      newContacts[activeContact][key] = value;\n\n      updateContacts(newContacts);\n    };\n  }\n\n  const showApaBox =\n    record.title[language] && contacts.length && record.created;\n\n  const contact = contacts[activeContact];\n  return (\n    <Grid container spacing={3}>\n      <Paper style={paperClass}>\n        <Grid item xs>\n          <QuestionText>\n            <I18n>\n              <En>\n                Please enter at least one Metadata Custodian <b>and</b> one Data\n                Owner for this dataset that can work with{\" \"}\n                {regions[region].title[language]} Staff to finalize this\n                Metadata Record.\n              </En>\n              <Fr>\n                Veuillez saisir au moins un Dépositaire des métadonnées ET un\n                propriétaire des données de ce jeu. Ces personnes pourraient\n                être appelées à collaborer avec le personnel de la{\" \"}\n                {regions[region].title[language]} pour finaliser la saisie des\n                informations.\n              </Fr>\n            </I18n>\n            <RequiredMark passes={validateField(record, \"contacts\")} />\n            <SupplementalText>\n              <I18n>\n                <En>\n                  It is important to include all individuals from the chain of\n                  attribution to ensure all involved parties are credited\n                  appropriately for their role in creating this dataset Saved\n                  contacts can be selected from the list below If you have any\n                  saved contacts you can select them from the list.\n                </En>\n                <Fr>\n                  Il est important d'inclure toutes les personnes ayant\n                  travaillé sur le jeu de données afin de s'assurer que toutes\n                  les parties concernées soient créditées de façon appropriée\n                  pour leur rôle dans la création de ce jeu de données. Les\n                  contacts sauvegardés peuvent être sélectionnés dans la liste\n                  ci-dessous. Si vous avez déjà des contacts enregistrés, vous\n                  pouvez les sélectionner dans la liste.\n                </Fr>\n              </I18n>\n            </SupplementalText>\n          </QuestionText>\n        </Grid>\n      </Paper>\n      {showApaBox && (\n        <Paper style={paperClass}>\n          <QuestionText>\n            <div>\n              <I18n>\n                <En>\n                  This is how your record citation will look in the catalogue.\n                  Only with starred roles will appear in the citation. To change\n                  the order, drag the{\" \"}\n                  <DragHandleIcon style={{ verticalAlign: \"middle\" }} /> symbol.\n                </En>\n                <Fr>\n                  Voici à quoi ressemblera votre citation dans le catalogue.\n                  Seuls les contacts dont la case «Auteur cité» est cochée\n                  apparaissent. Seuls les rôles étoilés apparaîtront dans la\n                  citation. Changer la commande, faites glisser le{\" \"}\n                  <DragHandleIcon style={{ verticalAlign: \"middle\" }} />.\n                </Fr>\n              </I18n>\n            </div>\n          </QuestionText>\n          <SupplementalText>\n            <ApaPreview language={language} record={record} />\n          </SupplementalText>\n        </Paper>\n      )}\n\n      <Grid container direction=\"row\" style={{ marginLeft: \"5px\" }}>\n        <Grid item xs={5}>\n          <ContactLeftList\n            contacts={contacts}\n            updateContacts={updateContacts}\n            setActiveContact={setActiveContact}\n            activeContact={activeContact}\n            disabled={disabled}\n            userContacts={userContacts}\n          />\n        </Grid>\n        {contact && (\n          <Grid item xs>\n            <Grid container direction=\"column\">\n              <Paper style={paperClass}>\n                <Grid container direction=\"column\" spacing={3}>\n                  <Grid item xs>\n                    <EditContact\n                      showRolePicker\n                      value={contact}\n                      updateContactEvent={updateContactEvent}\n                      updateContact={updateContact}\n                      disabled={disabled}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactTab;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  CircularProgress,\n  Tooltip,\n} from \"@material-ui/core\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useParams } from \"react-router-dom\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport { UserContext } from \"../../providers/UserProvider\";\nconst MAX_AWS_TRANSLATE_SIZE = 5000;\n\nconst BilingualTextInput = ({\n  onChange,\n  value,\n  name,\n  multiline,\n  disabled,\n  error,\n  translationButonDisabled = false,\n}) => {\n  const { translate } = useContext(UserContext);\n  const [awaitingTranslation, setAwaitingTranslation] = useState(false);\n\n  function handleEvent(e) {\n    const newData = { ...value, [e.target.name]: e.target.value };\n    const newDataEvent = { target: { name, value: newData } };\n    onChange(newDataEvent);\n  }\n  const { language } = useParams();\n  let languages;\n\n  const textSizeByes = new Blob([value && value[language]]).size;\n  const textTooBig = textSizeByes >= MAX_AWS_TRANSLATE_SIZE;\n\n  if (language === \"en\") languages = [\"en\", \"fr\"];\n  else languages = [\"fr\", \"en\"];\n  return (\n    <div>\n      {languages.map((lang, i) => (\n        <div key={lang}>\n          <TextField\n            name={lang}\n            fullWidth\n            value={(value && value[lang]) || \"\"}\n            onChange={handleEvent}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {lang.toUpperCase()}\n                </InputAdornment>\n              ),\n            }}\n            multiline={multiline}\n            disabled={disabled}\n            error={error}\n          />\n          {i === 0 && !translationButonDisabled && (\n            <Tooltip\n              title={\n                <I18n\n                  en=\"Translate english to french\"\n                  fr=\"Traduire du français en anglais\"\n                />\n              }\n            >\n              <span>\n                <Button\n                  style={{ margin: \"10px\" }}\n                  startIcon={\n                    awaitingTranslation ? (\n                      <CircularProgress size={20} />\n                    ) : (\n                      <TranslateIcon />\n                    )\n                  }\n                  endIcon={awaitingTranslation ? null : <ArrowDownwardIcon />}\n                  disabled={\n                    disabled ||\n                    awaitingTranslation ||\n                    !(value && value[lang]) ||\n                    textTooBig\n                  }\n                  onClick={() => {\n                    const alternateLanguage = languages[1];\n                    setAwaitingTranslation(true);\n\n                    translate({ text: value[lang], fromLang: lang }).then(\n                      (translatedText) => {\n                        setAwaitingTranslation(false);\n                        const translation = translatedText.data;\n                        handleEvent({\n                          target: {\n                            name: alternateLanguage,\n                            value: translation,\n                          },\n                        });\n                      }\n                    );\n                  }}\n                >\n                  <I18n>\n                    <En>Translate</En>\n                    <Fr>Traduire</Fr>\n                  </I18n>\n                </Button>\n                {textTooBig && (\n                  <I18n>\n                    <En>\n                      Translation is disabled because text is larger than{\" \"}\n                      {MAX_AWS_TRANSLATE_SIZE} characters.\n                    </En>\n                    <Fr>\n                      La traduction est désactivée car le texte est plus grand\n                      que {MAX_AWS_TRANSLATE_SIZE} caractères.\n                    </Fr>\n                  </I18n>\n                )}\n              </span>\n            </Tooltip>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BilingualTextInput;\n","import React from \"react\";\nimport { Add, Delete } from \"@material-ui/icons\";\nimport { Button, Grid, Paper, TextField } from \"@material-ui/core\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nimport BilingualTextInput from \"./BilingualTextInput\";\nimport RequiredMark from \"./RequiredMark\";\nimport { deepCopy } from \"../../utils/misc\";\nimport { QuestionText, paperClass } from \"./QuestionStyles\";\n\nconst Resources = ({ updateResources, resources, disabled }) => {\n  const emptyResource = { url: \"\", name: \"\", description: { en: \"\", fr: \"\" } };\n\n  function addResource() {\n    updateResources(resources.concat(deepCopy(emptyResource)));\n  }\n\n  // removes the resource section from the list at index i\n  function removeResource(i) {\n    updateResources(resources.filter((e, index) => index !== i));\n  }\n  const nameLabel = <I18n en=\"Name\" fr=\"Titre\" />;\n  const descriptionLabel = <I18n en=\"Description\" fr=\"Description\" />;\n\n  return (\n    <div>\n      {resources.map((dist = deepCopy(emptyResource), i) => {\n        function handleResourceChange(key) {\n          return (e) => {\n            const newValue = [...resources];\n            newValue[i][key] = e.target.value;\n            updateResources(newValue);\n          };\n        }\n        return (\n          <Paper key={i} style={paperClass}>\n            <Grid container direction=\"column\" spacing={3}>\n              <Grid item xs>\n                <QuestionText>\n                  <I18n>\n                    <En>Enter a name for the resource</En>\n                    <Fr>Entrez un titre pour la ressource</Fr>\n                  </I18n>\n                  <RequiredMark passes={dist.name} />\n                </QuestionText>\n                <TextField\n                  label={nameLabel}\n                  value={dist.name}\n                  onChange={handleResourceChange(\"name\")}\n                  fullWidth\n                  disabled={disabled}\n                />\n              </Grid>\n              <Grid item xs>\n                <QuestionText>\n                  <I18n>\n                    <En>Enter the URL for the resource</En>\n                    <Fr>Entrez l'URL de la ressource</Fr>\n                  </I18n>\n                  <RequiredMark passes={dist.url} />\n                </QuestionText>\n\n                <TextField\n                  label=\"URL\"\n                  value={dist.url}\n                  onChange={handleResourceChange(\"url\")}\n                  fullWidth\n                  disabled={disabled}\n                />\n              </Grid>\n              <Grid item xs>\n                <QuestionText>\n                  <I18n>\n                    <En>Enter a description of the resource</En>\n                    <Fr>Entrez une description de la ressource</Fr>\n                  </I18n>\n                </QuestionText>{\" \"}\n                <BilingualTextInput\n                  name=\"description\"\n                  label={descriptionLabel}\n                  value={dist.description}\n                  onChange={handleResourceChange(\"description\")}\n                  disabled={disabled}\n                />\n              </Grid>\n              <Grid item xs>\n                <Button\n                  startIcon={<Delete />}\n                  disabled={disabled}\n                  onClick={() => removeResource(i)}\n                >\n                  <I18n>\n                    <En>Remove item</En>\n                    <Fr>Supprimer la ressource</Fr>\n                  </I18n>\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        );\n      })}\n\n      <Paper style={paperClass}>\n        <Button startIcon={<Add />} disabled={disabled} onClick={addResource}>\n          <I18n>\n            <En>Add item</En>\n            <Fr>Ajouter une ressource</Fr>\n          </I18n>\n        </Button>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Resources;\n","import React from \"react\";\n\nimport { Paper } from \"@material-ui/core\";\n\nimport Resources from \"../FormComponents/Resources\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport {\n  paperClass,\n  QuestionText,\n  SupplementalText,\n} from \"../FormComponents/QuestionStyles\";\nimport { validateField } from \"../../utils/validate\";\n\nconst ResourcesTab = ({ disabled, record, updateRecord }) => {\n  const updateResources = updateRecord(\"distribution\");\n  return (\n    <div>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <En>Enter any links to information associated with this dataset.</En>\n          <Fr>\n            Entrez les liens vers les informations associées à ce jeu de\n            données.\n          </Fr>\n          <RequiredMark passes={validateField(record, \"distribution\")} />\n          <SupplementalText>\n            <I18n>\n              <En>\n                Some examples of resources are:\n                <ul>\n                  <li>supporting documentation (eg text or pdf files)</li>\n                  <li>CSV files</li>\n                  <li>ERDDAP datasets</li>\n                  <li>images</li>\n                </ul>\n                At least one item is required.\n              </En>\n              <Fr>\n                Voici quelques exemples de ressources :\n                <ul>\n                  <li>\n                    Documentation à l'appui (par exemple, fichiers texte ou pdf)\n                  </li>\n                  <li>Fichiers CSV</li>\n                  <li>Jeux de données ERDDAP</li>\n                  <li>Images</li>\n                </ul>\n                Au moins une ressource est requise.\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n      </Paper>\n      <Resources\n        paperClass={paperClass}\n        resources={record.distribution || []}\n        updateResources={updateResources}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport default ResourcesTab;\n","import {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport React from \"react\";\n\nimport { I18n } from \"../I18n\";\n\nfunction formatDate(date) {\n  try {\n    const d = date.getDate();\n    const m = date.getMonth();\n    const y = date.getFullYear();\n    return new Date(y, m, d, 12, 0, 0, 0);\n  } catch (e) {\n    return null;\n  }\n}\nconst DateInput = ({ onChange, value, name, disabled, dateStart, dateEnd }) => {\n    return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        disabled={disabled}\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label={<I18n en=\"Select date\" fr=\"Sélectionner une date\" />}\n        format=\"yyyy-MM-dd\"\n        value={value}\n        minDate={dateStart}\n        maxDate={dateEnd}\n        onChange={(dateSelected) => {\n          return onChange({\n            target: { name, value: formatDate(dateSelected) },\n          });\n        }}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default DateInput;\n","const keywordList = [\n  \"abundance and biomass\",\n  \"sea access\",\n  \"decision making\",\n  \"protected areas\",\n  \"maritime resources\",\n  \"knowledge improvement\",\n  \"land-use planning\",\n  \"water purification\",\n  \"striped bass\",\n  \"watershed\",\n  \"habitat characterization\",\n  \"coastal characterization\",\n  \"climate change\",\n  \"chlorophyll a\",\n  \"resource conservation\",\n  \"water consumption\",\n  \"sea currents\",\n  \"crustacean\",\n  \"fresh water flow\",\n  \"water density\",\n  \"sustainable development\",\n  \"ocean-atmosphere exchange\",\n  \"sampling\",\n  \"crayfish\",\n  \"mariculture\",\n  \"coastal erosion\",\n  \"endangered species\",\n  \"invasive species\",\n  \"coastal flora\",\n  \"fluorescence\",\n  \"spawning\",\n  \"community management\",\n  \"resource management\",\n  \"integrated management\",\n  \"sea ice\",\n  \"sensitive habitat\",\n  \"important habitat\",\n  \"hydrocarbon\",\n  \"incidents\",\n  \"general information\",\n  \"wildlife inventory\",\n  \"fish inventory\",\n  \"macroalgae\",\n  \"benthic macrofauna\",\n  \"marine mammal\",\n  \"marsh\",\n  \"meteorology\",\n  \"wetlands\",\n  \"natural environments of interest\",\n  \"enhancement\",\n  \"oceanographic missions\",\n  \"mollusc\",\n  \"sea level\",\n  \"seabirds\",\n  \"migrator birds\",\n  \"commercial fisheries\",\n  \"experimental fisheries\",\n  \"physical-chemical\",\n  \"phytoplankton\",\n  \"sea grass\",\n  \"fish\",\n  \"coastal pollution\",\n  \"atmospheric pressure\",\n  \"coast protection\",\n  \"habitat protection\",\n  \"water quality\",\n  \"radiation\",\n  \"maritime resources\",\n  \"ecological rehabilitation\",\n  \"shore restoration\",\n  \"experimental restoration\",\n  \"habitat restoration\",\n  \"coastal risks\",\n  \"citizen data\",\n  \"salinity\",\n  \"sediment\",\n  \"fishing sites\",\n  \"annual follow-up\",\n  \"species tracking\",\n  \"habitat tracking\",\n  \"taxonomy\",\n  \"remote sensing\",\n  \"water temperature\",\n  \"sea turtles\",\n  \"land-use\",\n  \"sustainabilty\",\n  \"waves\",\n  \"wind\",\n  \"coastal zone\",\n];\n\nexport default keywordList;\n","const dictionary = {\n  oxygen: \"Oxygène\",\n  nutrients: \"Nutriments\",\n  nitrate: \"Nitrate\",\n  phosphate: \"Phosphate\",\n  silicate: \"Silicate\",\n  inorganicCarbon: \"Carbone inoganique\",\n  dissolvedOrganicCarbon: \"carbone inorganique dissous\",\n  seaSurfaceHeight: \"Hauteur de la surface de la mer\",\n  seawaterDensity: \"Densité d'eau de mer\",\n  potentialTemperature: \"Température potentielle\",\n  potentialDensity: \"Densité potentielle\",\n  speedOfSound: \"Vitesse du son\",\n  seaIce: \"Glace de mer\",\n  seaState: \"État de la mer\",\n  seaSurfaceSalinity: \"Salinité de surface\",\n  seaSurfaceTemperature: \"Température de surface\",\n  subSurfaceCurrents: \"Courants sous-marins\",\n  subSurfaceSalinity: \"Salinité sous la surface\",\n  subSurfaceTemperature: \"Température sous la surface\",\n  surfaceCurrents: \"Courants de surface\",\n  pressure: \"Pression\",\n  other: \"Autre\",\n  resourceProvider: \"Fournisseur de données\",\n  custodian: \"Dépositaire\",\n  owner: \"Propriétaire\",\n  user: \"Utilisateur\",\n  distributor: \"Distributeur\",\n  originator: \"Initiateur\",\n  pointOfContact: \"Point de contact\",\n  principalInvestigator: \"Responsable de recherche\",\n  processor: \"Transformateur\",\n  publisher: \"Editeur\",\n  author: \"Auteur\",\n  sponsor: \"Sponsor\",\n  coAuthor: \"Co-auteur\",\n  collaborator: \"Collaborateur\",\n  editor: \"Réviseur\",\n  mediator: \"Médiateur\",\n  rightsHolder: \"Ayant droit\",\n  contributor: \"Contributeur\",\n  funder: \"Fondateur\",\n  stakeholder: \"Actionnaire\",\n  deprecated: \"Obsolète\",\n  proposed: \"Proposé\",\n  withdrawn: \"Retiré\",\n  notAccepted: \"Non accepté\",\n  accepted: \"Accepté\",\n  valid: \"Valide\",\n  tentative: \"Tentative\",\n  superseded: \"Remplacé\",\n  retired: \"retiré\",\n  pending: \"En attente\",\n  final: \"final\",\n  underDevelopment: \"En développement\",\n  required: \"Requis\",\n  planned: \"Planifié\",\n  onGoing: \"En cours\",\n  obsolete: \"Obsolète\",\n  historicalArchive: \"Archive historique\",\n  completed: \"Terminé\",\n  farming: \"Agriculture\",\n  biota: \"Biote\",\n  boundaries: \"Délimitations\",\n  climatologyMeteorologyAtmosphere: \"Climatologie / Météorology / Atmosphère\",\n  economy: \"Économie\",\n  elevation: \"Élévation\",\n  environment: \"Environement\",\n  geoscientificInformation: \"Information Géoscientifique\",\n  health: \"Santé\",\n  imageryBaseMapsEarthCover: \"Imagerie Couverture terrestre\",\n  intelligenceMilitary: \"Renseignements / Militaire\",\n  inlandWaters: \"Eaux intérieures\",\n  location: \"Emplacement\",\n  oceans: \"Océans\",\n  planningCadastre: \"Aménagement du territoire\",\n  society: \"Société\",\n  structure: \"Structure\",\n  transportation: \"Transports\",\n  utilitiesCommunication: \"Services / Communication\",\n  extraTerrestrial: \"Extra terrestre\",\n  disaster: \"Désastre\",\n  \"abundance and biomass\": \"abondance et biomasse\",\n  \"sea access\": \"accès à la mer\",\n  \"decision making\": \"aide à la décision\",\n  \"protected areas\": \"aires protégées\",\n  \"knowledge improvement\": \"amélioration des connaissances\",\n  \"land-use planning\": \"aménagement du territoire\",\n  \"water purification\": \"assainissement des eaux\",\n  \"striped bass\": \"bar rayé\",\n  watershed: \"bassin versant\",\n  \"habitat characterization\": \"caractérisation des habitats\",\n  \"coastal characterization\": \"caractérisation des rives\",\n  \"climate change\": \"changement climatique\",\n  \"chlorophyll a\": \"chlorophylle a\",\n  \"resource conservation\": \"conservation des ressources\",\n  \"water consumption\": \"consommation d'eau\",\n  \"sea currents\": \"courant marin\",\n  crustacean: \"crustacé\",\n  \"fresh water flow\": \"débits eau douce\",\n  \"water density\": \"densité eau\",\n  \"sustainable development\": \"développement durable\",\n  \"ocean-atmosphere exchange\": \"échange océan-atmosphère\",\n  sampling: \"échantillonnage\",\n  crayfish: \"écrevisses\",\n  mariculture: \"entreprises de maricultures\",\n  \"coastal erosion\": \"érosion des côtes\",\n  \"endangered species\": \"espèces en péril\",\n  \"invasive species\": \"espèces envahissante\",\n  \"coastal flora\": \"flore côtière\",\n  fluorescence: \"fluorescence\",\n  spawning: \"fraie\",\n  \"community management\": \"gestion communautaire\",\n  \"resource management\": \"gestion des ressources\",\n  \"integrated management\": \"gestion intégrée\",\n  \"sea ice\": \"glace de mer\",\n  \"sensitive habitat\": \"habitat sensible\",\n  \"important habitat\": \"habitats important\",\n  hydrocarbon: \"hydrocarbure\",\n  incidents: \"incidents\",\n  \"general information\": \"informations générales\",\n  \"wildlife inventory\": \"inventaire faunique\",\n  \"fish inventory\": \"inventaire poisson\",\n  macroalgae: \"macroalgue\",\n  \"benthic macrofauna\": \"macrofaune benthique\",\n  \"marine mammal\": \"mammifères marins\",\n  marsh: \"marais\",\n  meteorology: \"météorologie\",\n  wetlands: \"milieux humides\",\n  \"natural environments of interest\": \"milieux naturels d'intérêt\",\n  enhancement: \"mise en valeur\",\n  \"oceanographic missions\": \"missions océanographique\",\n  mollusc: \"mollusque\",\n  \"sea level\": \"niveau eau\",\n  seabirds: \"oiseaux marins\",\n  \"migrator birds\": \"oiseaux migrateurs\",\n  \"commercial fisheries\": \"pêches commerciales\",\n  \"experimental fisheries\": \"pêches expérimentales\",\n  \"physical-chemical\": \"physico-chimie\",\n  phytoplankton: \"phytoplancton\",\n  \"sea grass\": \"plantes aquatique\",\n  fish: \"poisson\",\n  \"coastal pollution\": \"pollution côtière\",\n  \"atmospheric pressure\": \"pression atmosphérique\",\n  \"coast protection\": \"protection des côtes\",\n  \"habitat protection\": \"protection des habitats\",\n  \"water quality\": \"qualité eau\",\n  radiation: \"radiation\",\n  \"maritime resources\": \"ressources maritimes\",\n  \"ecological rehabilitation\": \"réhabilitation écologique\",\n  \"shore restoration\": \"restauration des rives\",\n  \"experimental restoration\": \"restauration expérimentale\",\n  \"habitat restoration\": \"restauration habitat\",\n  \"coastal risks\": \"risques côtiers\",\n  \"citizen data\": \"saisie citoyenne\",\n  salinity: \"salinité\",\n  sediment: \"sédiment\",\n  \"fishing sites\": \"sites de pêches\",\n  \"annual follow-up\": \"suivi annuel\",\n  \"species tracking\": \"suivi des espèces\",\n  \"habitat tracking\": \"suivi habitat\",\n  taxonomy: \"taxonomie\",\n  \"remote sensing\": \"télédétection\",\n  \"water temperature\": \"température de l'eau\",\n  \"sea turtles\": \"tortue de mer\",\n  \"land-use\": \"utilisation du territoire\",\n  sustainabilty: \"utilisation durable\",\n  waves: \"vagues\",\n  wind: \"vents\",\n  \"coastal zone\": \"zone côtière\",\n  depthPositive: \"Profondeur positive\",\n  heightPositive: \"Hauteur positive\",\n  // Submit section\n  \"data identification\": \"Identification des données\",\n  resources: \"Ressources\",\n  spatial: \"Spatial\",\n  platform: \"Plateforme\",\n  \"platform - instruments\": \"Plateforme - instruments\",\n  contacts: \"Contacts\",\n};\n\nexport default dictionary;\n","import enToFr from \"./i18nDictionaryFr\";\n\nconst translate = (key, toLang = \"en\") => {\n  if (toLang === \"en\") return key;\n\n  return enToFr[key] || null;\n};\n\nexport default translate;\n","import React, { useState } from \"react\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  TextField,\n  Button,\n  Grid,\n  Chip,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { ArrowDownward } from \"@material-ui/icons\";\nimport keywordList from \"../../keywordList\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport translate from \"../../utils/i18n\";\n\nconst KeywordsInput = ({\n  onChange,\n  value = { en: [], fr: [] },\n  name,\n  disabled,\n}) => {\n  const { language } = useParams();\n  const [selectedKeyword, setKeyword] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selectedKeywordAltLang, setSelectedKeywordAltLang] = useState(\"\");\n\n  const languages = [\"en\", \"fr\"];\n\n  if (language === \"fr\") languages.reverse();\n  const altLanguage = languages[1];\n\n  function cleanList(list) {\n    return list\n      .map((item) => (item || \"\").trim())\n      .filter((item, i, arr) => item && arr.indexOf(item) === i);\n  }\n\n  function handleDelete(chipText, deletedChipLang) {\n    return () => {\n      const newValue = {\n        en: value.en,\n        fr: value.fr,\n        [deletedChipLang]: value[deletedChipLang].filter(\n          (keyword) => keyword !== chipText\n        ),\n      };\n\n      onChange({\n        target: {\n          name,\n          value: newValue,\n        },\n      });\n    };\n  }\n  function handleHelperChange() {\n    const keyword = selectedKeyword || inputValue;\n    if (keyword || selectedKeywordAltLang) {\n      const newValue = { en: value.en, fr: value.fr };\n\n      const userKeywordList = [...value[language], keyword];\n      const userKeywordListAlt = [\n        ...value[altLanguage],\n        selectedKeywordAltLang,\n      ];\n\n      if (keyword) newValue[language] = cleanList(userKeywordList);\n      if (selectedKeywordAltLang)\n        newValue[altLanguage] = cleanList(userKeywordListAlt);\n\n      onChange({\n        target: {\n          name,\n          value: newValue,\n        },\n      });\n    }\n    setKeyword(\"\");\n    setSelectedKeywordAltLang(\"\");\n    setInputValue(\"\");\n  }\n\n  return (\n    <Grid container spacing={3} direction=\"column\">\n      <Grid item xs>\n        <Autocomplete\n          inputValue={inputValue}\n          onInputChange={(event, newInputValue) => {\n            setInputValue(newInputValue);\n          }}\n          disabled={disabled}\n          onChange={(e, keyword) =>\n            setSelectedKeywordAltLang(translate(keyword, altLanguage))\n          }\n          value={selectedKeyword || \"\"}\n          freeSolo\n          renderOption={(option) => translate(option, language) || option}\n          options={keywordList}\n          getOptionLabel={(option) => translate(option, language) || option}\n          fullWidth\n          renderInput={(params) => (\n            <TextField\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              {...params}\n              label={language.toUpperCase()}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs>\n        <TextField\n          value={selectedKeywordAltLang || \"\"}\n          onChange={(e) => setSelectedKeywordAltLang(e.target.value)}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                {altLanguage.toUpperCase()}\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={3}>\n        <Button\n          disabled={\n            disabled ||\n            (!selectedKeyword && !selectedKeywordAltLang && !inputValue)\n          }\n          startIcon={<ArrowDownward />}\n          onClick={handleHelperChange}\n        >\n          <I18n>\n            <En>Add</En>\n            <Fr>Ajouter</Fr>\n          </I18n>\n        </Button>\n      </Grid>\n\n      <Grid item xs>\n        {languages\n          .filter((lang) => value[lang] && value[lang].length)\n          .map((lang) => (\n            <div style={{ margin: \"15px\" }} key={lang}>\n              {true && (\n                <InputAdornment style={{ margin: \"10px\" }}>\n                  {lang.toUpperCase()}\n                </InputAdornment>\n              )}\n              <Grid container direction=\"row\">\n                <Grid item xs>\n                  {(value[lang] || []).map((keyword, i) => (\n                    <Chip\n                      key={i}\n                      disabled={disabled}\n                      label={keyword}\n                      onDelete={handleDelete(keyword, lang)}\n                      color=\"primary\"\n                      style={{ margin: \"5px\" }}\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n            </div>\n          ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default KeywordsInput;\n","const licenses = {\n  \"CC-BY-4.0\": \"Creative Commons Attribution 4.0\",\n  CC0: \"Creative Commons 0\",\n  \"government-open-license-canada\": \"Open Government Licence - Canada\",\n  \"government-open-license-nova-scotia\":\n    \"Open Government Licence - Nova Scotia\",\n  \"government-open-license-newfoundland\":\n    \"Open Government Licence - Newfoundland and Labrador\",\n  \"Apache-2.0\": \"Apache License, Version 2.0\",\n};\n\nexport default licenses;\n","import React from \"react\";\nimport { Paper, TextField, Grid } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport { eovList, progressCodes } from \"../../isoCodeLists\";\n\nimport BilingualTextInput from \"../FormComponents/BilingualTextInput\";\nimport CheckBoxList from \"../FormComponents/CheckBoxList\";\nimport DateInput from \"../FormComponents/DateInput\";\nimport KeywordsInput from \"../FormComponents/KeywordsInput\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport SelectInput from \"../FormComponents/SelectInput\";\nimport { camelToSentenceCase } from \"../../utils/misc\";\nimport translate from \"../../utils/i18n\";\nimport licenses from \"../../utils/licenses\";\nimport { validateField } from \"../../utils/validate\";\n\nimport {\n  QuestionText,\n  SupplementalText,\n  paperClass,\n} from \"../FormComponents/QuestionStyles\";\n\nimport regions from \"../../regions\";\n\nconst IdentificationTab = ({\n  disabled,\n  record,\n  handleUpdateRecord,\n  updateRecord,\n}) => {\n  const { language, region } = useParams();\n  const regionInfo = regions[region];\n\n  const CatalogueLink = (lang) => (\n    <a\n      href={regionInfo.catalogueURL[lang]}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {regionInfo.catalogueURL[lang]}\n    </a>\n  );\n\n  return (\n    <div>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the dataset title? Required in English and French.</En>\n            <Fr>\n              Quel est le titre du jeu de données? Obligatoire dans les deux\n              langues.\n            </Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"title\")} />\n          <SupplementalText>\n            <I18n>\n              <En>\n                Please refrain from using special characters in the dataset\n                title. This will appear as the title that is shown for this\n                dataset in the {regionInfo.catalogueTitle.en}.\n              </En>\n              <Fr>\n                Veuillez ne pas utiliser de caractères spéciaux dans le titre du\n                jeu de données. Ceci apparaîtra comme titre de votre jeu de\n                données dans le {regionInfo.catalogueTitle.fr}.\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n\n        <BilingualTextInput\n          value={record.title}\n          onChange={handleUpdateRecord(\"title\")}\n          disabled={disabled}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the primary language of the dataset?</En>\n            <Fr>Quelle est la langue principale du jeu de données?</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"language\")} />\n        </QuestionText>\n        <SelectInput\n          value={record.language}\n          onChange={handleUpdateRecord(\"language\")}\n          options={[\"en\", \"fr\"]}\n          optionLabels={[\"English\", \"Français\"]}\n          disabled={disabled}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>\n              Enter an abstract or summary for the dataset. Required in both\n              languages.\n            </En>\n            <Fr>Décrivez votre jeu de données.</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"abstract\")} />\n          <SupplementalText>\n            <I18n>\n              <En>\n                This information will appear as the summary text that is shown\n                for this dataset in the {regionInfo.catalogueTitle.en}. Browsing\n                datasets at <CatalogueLink lang=\"en\" /> can help provide a sense\n                of the type of descriptions that are typically used for this\n                section of the profile. As a general rule, this section should\n                be worded with as little jargon as possible to give potential\n                users an understanding of your dataset.\n                <br />\n                <br />\n                Suggested abstract points -\n                <div>\n                  <ul>\n                    <li>\n                      <b>What</b>- variables that were measured\n                    </li>\n                    <li>\n                      <b>When</b>- temporal coverage of the data, frequency of\n                      the measurements/observations\n                    </li>\n                    <li>\n                      <b>Where</b>- spatial coverage of the data, sampling\n                      sites, sensor tracks, laboratory spaces\n                    </li>\n                    <li>\n                      <b>How</b>- equipment, procedures, protocols,\n                      calibrations, QA/QC\n                    </li>\n                    <li>\n                      <b>Who</b>- participants, staff\n                    </li>\n                    <li>\n                      <b>Why</b>- a high level statement on the outcome this\n                      data is meant to inform\n                    </li>\n                  </ul>\n                </div>\n              </En>\n              <Fr>\n                {\" \"}\n                Cette description sera le résumé de votre jeu de données\n                lorsqu’il sera publié dans le {regionInfo.catalogueTitle.fr}.\n                Veuillez consulter d’autres jeux de données déjà publiés :{\" \"}\n                <CatalogueLink lang=\"fr\" />. Si possible, veuillez remplir ce\n                champ en utilisant un langage accessible pouvant être bien\n                compris par d’autres utilisateurs.\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n\n        <BilingualTextInput\n          value={record.abstract}\n          onChange={handleUpdateRecord(\"abstract\")}\n          disabled={disabled}\n          multiline\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>\n              Please select all the essential ocean variables that are contained\n              in this dataset.\n            </En>\n            <Fr>\n              Veuillez sélectionner toutes les variables océaniques essentielles\n              contenues dans ce jeu de données.\n            </Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"eov\")} />\n          <SupplementalText>\n            <I18n>\n              <En>If none of these apply you can select Other.</En>\n              <Fr>\n                Si aucun de ces éléments ne s'applique, vous pouvez sélectionner\n                « Autre ».\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <CheckBoxList\n          value={record.eov || []}\n          onChange={updateRecord(\"eov\")}\n          options={eovList}\n          optionLabels={eovList.map((e) => {\n            return camelToSentenceCase(translate(e, language));\n          })}\n          disabled={disabled}\n        />\n      </Paper>\n      <Paper style={paperClass}>\n        <Grid container spacing={3} direction=\"column\">\n          <Grid item xs>\n            <QuestionText>\n              <I18n>\n                <En>\n                  Keywords are an important way to categorize your data that\n                  allow people and other systems to search for datasets that\n                  share some important characteristics. Choose the most specific\n                  keywords that apply to your data, or create your own.\n                </En>\n                <Fr>\n                  Les mots-clés permettent de catégoriser vos données et\n                  facilitent leur découverte par d’autres utilisateurs.\n                  Choisissez des mots-clés spécifiques qui s’appliquent à vos\n                  données ou créez-en des nouveaux.\n                </Fr>\n              </I18n>\n              <RequiredMark passes={validateField(record, \"keywords\")} />\n              <SupplementalText>\n                <I18n>\n                  <En> Enter one at a time, clicking 'Add' after each.</En>\n                  <Fr>\n                    Entrez un mot-clé à la fois. Cliquez sur « Ajouter » chaque\n                    mot saisi.{\" \"}\n                  </Fr>\n                </I18n>\n              </SupplementalText>\n            </QuestionText>\n          </Grid>\n          <Grid item xs>\n            <KeywordsInput\n              value={record.keywords}\n              onChange={handleUpdateRecord(\"keywords\")}\n              disabled={disabled}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the status of this dataset?</En>\n            <Fr>Quel est l'état de ce jeu de données?</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"progress\")} />\n        </QuestionText>\n        <SelectInput\n          value={record.progress || \"\"}\n          onChange={handleUpdateRecord(\"progress\")}\n          options={Object.keys(progressCodes)}\n          optionLabels={Object.values(progressCodes).map(\n            ({ title }) => title[language]\n          )}\n          optionTooltips={Object.values(progressCodes).map(\n            ({ text }) => text[language]\n          )}\n          disabled={disabled}\n          fullWidth={false}\n          style={{ width: \"200px\" }}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the start date when data was first collected?</En>\n            <Fr>Inscrivez la date de début de votre collecte de données.</Fr>\n          </I18n>\n        </QuestionText>\n        <DateInput\n          value={record.dateStart || null}\n          onChange={handleUpdateRecord(\"dateStart\")}\n          disabled={disabled}\n          dateEnd={record.dateEnd || undefined}\n        />\n        <QuestionText>\n          <I18n>\n            <En>\n              What is the end date when data was last collected? Leave blank if\n              data collection is ongoing.\n            </En>\n            <Fr>\n              Inscrivez la date de fin de votre collecte de données. Laissez le\n              champs vide si la collecte des données toujours est en cours.\n            </Fr>\n          </I18n>\n        </QuestionText>\n        <DateInput\n          value={record.dateEnd || null}\n          onChange={handleUpdateRecord(\"dateEnd\")}\n          disabled={disabled}\n          dateStart={record.dateStart || undefined}\n        />\n      </Paper>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>\n              What is the date when the data was published? Leave blank if\n              dataset hasn't been published.\n            </En>\n            <Fr>\n              Quelle est la date de début à laquelle les données ont été\n              publiées ? Laissez le champs vide si les données n'ont pas été\n              publiées.\n            </Fr>\n          </I18n>\n        </QuestionText>\n        <DateInput\n          name=\"datePublished\"\n          value={record.datePublished || null}\n          onChange={handleUpdateRecord(\"datePublished\")}\n          disabled={disabled}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>\n              What is the date when data was revised? Leave blank if dataset\n              hasn't been revised.\n            </En>\n            <Fr>\n              Quelle est la date à laquelle les données ont été révisées ?\n              Laissez le champs vide si le jeu de données n'a pas a été révisé.\n            </Fr>\n          </I18n>\n        </QuestionText>\n        <DateInput\n          name=\"dateRevised\"\n          value={record.dateRevised || null}\n          onChange={handleUpdateRecord(\"dateRevised\")}\n          disabled={disabled}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the DOI for this dataset? Eg,</En>\n            <Fr>Quel est le DOI de ce jeu de données ? Par exemple,</Fr>\n          </I18n>{\" \"}\n          10.0000/0000\n        </QuestionText>\n\n        <TextField\n          style={{ marginTop: \"10px\" }}\n          name=\"datasetIdentifier\"\n          value={record.datasetIdentifier}\n          onChange={handleUpdateRecord(\"datasetIdentifier\")}\n          fullWidth\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>How is the dataset licensed?</En>\n            <Fr>Quelle est la licence de ce jeu de données?</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"license\")} />\n          <SupplementalText>\n            <I18n>\n              <En>\n                <ul>\n                  <li>\n                    <b>\n                      Creative Commons Attribution 4.0 International licence\n                      (CC-BY 4.0)\n                    </b>{\" \"}\n                    - CIOOS recommended. Allows for open sharing and adaptation\n                    of the data provided that the original creator is\n                    attributed.\n                  </li>\n                  <li>\n                    <b>Creative Commons 0</b> - imposes no restrictions of any\n                    kind.\n                  </li>\n                  <li>\n                    <b>Open Government Licence - Canada</b> - For datasets made\n                    available by Government of Canada departments and agencies,\n                    it is very similar to CC-BY as it allows for open sharing\n                    and adaptation of the data, provided that the original\n                    creator of the data is properly attributed.\n                  </li>\n                </ul>\n              </En>\n              <Fr>\n                <ul>\n                  <li>\n                    <b>\n                      Licence internationale Creative Commons Attribution 4.0\n                      (CC-BY 4.0){\" \"}\n                    </b>\n                    - Licence recommandée par le SIOOC. Les données sont\n                    ouvertes, mais la licence exige que le jeu de données soit\n                    cité lorsqu’il est utilisé par un autre utilisateur.\n                  </li>\n                  <li>\n                    <b>Creative Commons 0</b> - N’impose aucune restriction\n                    particulière : le jeu de données peut être utilisé sans être\n                    cité.\n                  </li>\n                  <li>\n                    <b>Licence du gouvernement ouvert - Canada</b> - Pour les\n                    jeux de données rendus disponibles par les organisations et\n                    ministères fédéraux. Cette licence est similaire à CC-BY 4.0\n                    : les données sont ouvertes mais le jeu de données doit être\n                    cité lorsqu'il est utilisé par un autre utilisateur.\n                  </li>\n                </ul>\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <SelectInput\n          value={record.license}\n          onChange={handleUpdateRecord(\"license\")}\n          optionLabels={Object.values(licenses)}\n          options={Object.keys(licenses)}\n          disabled={disabled}\n        />\n      </Paper>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What are the limitations affecting the dataset?</En>\n            <Fr>Quelles sont les limitations affectant le jeu de données?</Fr>\n          </I18n>\n          <SupplementalText>\n            <I18n>\n              <En>\n                For example:\n                <i>\n                  <ul>\n                    <li>Not to be used for navigational purposes.</li>\n                    <li>Instrument was not calibrated on day.</li>\n                    <li>Haven’t applied appropriate QC on the data yet.</li>\n                  </ul>\n                </i>\n              </En>\n              <Fr>\n                Par exemple :\n                <i>\n                  <ul>\n                    <li>Ne pas utiliser à des fins de navigation.</li>\n                    <li>L' instrument n'a pas été étalonné.</li>\n                    <li>\n                      Un contrôle de qualité n’a pas été effectué sur les\n                      données.\n                    </li>\n                  </ul>\n                </i>\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <BilingualTextInput\n          value={record.limitations}\n          onChange={handleUpdateRecord(\"limitations\")}\n          multiline\n          disabled={disabled}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default IdentificationTab;\n","import React, { useState } from \"react\";\nimport { Add, Delete } from \"@material-ui/icons\";\nimport {\n  TextField,\n  Grid,\n  Typography,\n  Button,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport BilingualTextInput from \"./BilingualTextInput\";\nimport { deepCopy } from \"../../utils/misc\";\n\nconst emptyInstrument = {\n  id: \"\",\n  manufacturer: \"\",\n  version: \"\",\n  type: { en: \"\", fr: \"\" },\n  description: { en: \"\", fr: \"\" },\n};\n\nconst Instruments = ({\n  updateInstruments,\n  instruments = [],\n  disabled,\n  paperClass,\n}) => {\n  const [activeInstrument, setActiveInstrument] = useState(0);\n\n  function addInstrument() {\n    updateInstruments(instruments.concat(deepCopy(emptyInstrument)));\n    setActiveInstrument(instruments.length);\n  }\n  function updateInstrumentField(key) {\n    return (e) => {\n      const instrumentsCopy = [...instruments];\n      instrumentsCopy[activeInstrument][key] = e.target.value;\n      updateInstruments(instrumentsCopy);\n    };\n  }\n  function removeInstrument() {\n    updateInstruments(\n      instruments.filter((e, index) => index !== activeInstrument)\n    );\n    if (instruments.length) setActiveInstrument(instruments.length - 2);\n  }\n\n  const manufacturerLabel = <I18n en=\"Manufacturer\" fr=\"Fabricant\" />;\n  const versionLabel = <I18n en=\"Version\" fr=\"Version\" />;\n  const typeLabel = <I18n en=\"Type\" fr=\"Type\" />;\n  const descriptionLabel = <I18n en=\"Description\" fr=\"Description\" />;\n\n  const instrument = instruments.length > 0 && instruments[activeInstrument];\n\n  return (\n    <Grid container direction=\"row\" spacing={3}>\n      <Grid item xs={3}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item xs>\n            Instruments:\n            <List>\n              {instruments.map((instrumentItem, i) => {\n                return (\n                  <ListItem\n                    key={i}\n                    button\n                    onClick={() => setActiveInstrument(i)}\n                  >\n                    <ListItemText\n                      primary={\n                        <Typography\n                          style={{\n                            fontWeight: activeInstrument === i ? \"bold\" : \"\",\n                          }}\n                        >\n                          {i + 1}. {instrumentItem.id}\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Grid>\n\n          <Grid item xs>\n            <Button\n              disabled={disabled}\n              startIcon={<Add />}\n              onClick={addInstrument}\n              style={{ height: \"56px\", marginLeft: \"10px\" }}\n            >\n              <I18n>\n                <En>Add instrument</En>\n                <Fr>Ajouter un instrument</Fr>\n              </I18n>\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs>\n        <Grid container direction=\"column\">\n          {instrument && (\n            <Paper style={paperClass}>\n              <Grid container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <I18n>\n                    <En>Instrument ID is required</En>\n                    <Fr>L'ID de l'instrument est requis</Fr>\n                  </I18n>\n                  <TextField\n                    label=\"ID\"\n                    value={instrument.id}\n                    onChange={updateInstrumentField(\"id\")}\n                    fullWidth\n                    disabled={disabled}\n                  />\n                </Grid>\n                <Grid item xs>\n                  <TextField\n                    label={manufacturerLabel}\n                    name=\"manufacturer\"\n                    value={instrument.manufacturer}\n                    onChange={updateInstrumentField(\"manufacturer\")}\n                    fullWidth\n                    disabled={disabled}\n                  />{\" \"}\n                </Grid>\n                <Grid item xs>\n                  <TextField\n                    label={versionLabel}\n                    value={instrument.version}\n                    onChange={updateInstrumentField(\"version\")}\n                    fullWidth\n                    disabled={disabled}\n                  />\n                </Grid>\n                <Grid item xs>\n                  <Typography>\n                    <I18n>\n                      <En>Instrument Type</En>\n                      <Fr>Type d'instrument</Fr>\n                    </I18n>\n                  </Typography>\n                  <BilingualTextInput\n                    label={typeLabel}\n                    value={instrument.type}\n                    onChange={updateInstrumentField(\"type\")}\n                    disabled={disabled}\n                  />\n                </Grid>{\" \"}\n                <Grid item xs>\n                  <Typography>Description</Typography>\n                  <BilingualTextInput\n                    label={descriptionLabel}\n                    value={instrument.description}\n                    onChange={updateInstrumentField(\"description\")}\n                    disabled={disabled}\n                  />\n                </Grid>\n                <Grid item xs>\n                  <Button\n                    startIcon={<Delete />}\n                    disabled={disabled}\n                    onClick={removeInstrument}\n                  >\n                    <I18n>\n                      <En>Remove item</En>\n                      <Fr>Supprimer l'instrument</Fr>\n                    </I18n>\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          )}\n          {/* <Paper style={paperClass}>\n            <Button startIcon={<Add />} disabled={disabled} onClick={addInstrument}>\n              <En>Add Instrument</En>\n              <Fr>Ajouter un article</Fr>\n            </Button>\n          </Paper> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nexport default Instruments;\n","import React from \"react\";\n\nimport { TextField, Grid } from \"@material-ui/core\";\n\nimport BilingualTextInput from \"./BilingualTextInput\";\nimport { QuestionText, SupplementalText, paperClass } from \"./QuestionStyles\";\nimport RequiredMark from \"./RequiredMark\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport { validateField } from \"../../utils/validate\";\n\nconst Platform = ({ record, handleUpdateRecord, disabled }) => (\n  <>\n    {/* TODO remove tacky negative margin */}\n    <Grid item xs style={{ ...paperClass, marginTop: \"-40px\" }}>\n      <QuestionText>\n        <I18n>\n          <En>Describe the platform</En>\n          <Fr>Décrire la plateforme</Fr>\n        </I18n>\n        <SupplementalText>\n          <I18n>\n            <En>Eg, the name or type of platform</En>\n            <Fr>Par exemple, le nom ou le type de plateforme.</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"platformDescription\")} />\n        </SupplementalText>\n      </QuestionText>\n      <BilingualTextInput\n        value={record.platformDescription}\n        onChange={handleUpdateRecord(\"platformDescription\")}\n        multiline\n        disabled={disabled}\n      />\n    </Grid>\n\n    <Grid item xs style={paperClass}>\n      <QuestionText>\n        <I18n>\n          <En>What is the platform ID or code?</En>\n          <Fr>Quel est l'ID de la plateforme ?</Fr>\n        </I18n>\n        <SupplementalText>\n          <I18n>\n            <En>\n              This is a unique identification of the platform. If the platform\n              is registered with ICES, use that identifier\n            </En>\n            <Fr>\n              Il s'agit d'une identification unique de la plateforme. Si la\n              plateforme est enregistrée auprès du{\" \"}\n              <a\n                href=\"https://www.ices.dk/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                CIEM\n              </a>\n              , utilisez cet identificateur\n            </Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"platformID\")} />\n        </SupplementalText>\n      </QuestionText>\n\n      <TextField\n        label={<I18n en=\"Platform ID\" fr=\"ID de plateforme\" />}\n        value={record.platformID}\n        onChange={handleUpdateRecord(\"platformID\")}\n        fullWidth\n        disabled={disabled}\n      />\n    </Grid>\n  </>\n);\n\nexport default Platform;\n","import React from \"react\";\n\nimport { Paper, Grid, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport Instruments from \"../FormComponents/Instruments\";\n\nimport { QuestionText, paperClass } from \"../FormComponents/QuestionStyles\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport Platform from \"../FormComponents/Platform\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport { validateField } from \"../../utils/validate\";\n\nconst PlatformTab = ({\n  disabled,\n  record,\n  handleUpdateRecord,\n  updateRecord,\n}) => {\n  const noPlatform = record.noPlatform && record.noPlatform !== \"false\";\n\n  return (\n    <div>\n      <Paper style={paperClass}>\n        <Grid container direction=\"column\" spacing={0}>\n          <Grid item xs style={paperClass}>\n            <QuestionText>\n              <I18n>\n                <En>\n                  A platform is anything used in data collection that has\n                  instrument(s) attached to it. Eg:\n                  <ul>\n                    <li>Glider</li>\n                    <li>Ship</li>\n                    <li>Buoy</li>\n                    <li>Satellite</li>\n                    <li>Rossette</li>\n                    <li>ROV</li>\n                    <li>Mooring</li>\n                  </ul>\n                  It is strongly encouraged to fill out platform information. If\n                  there is no platform, you can enter instruments at the bottom\n                  of the page.\n                </En>\n                <Fr>\n                  Une plateforme est tout ce qui est utilisé dans la collecte de\n                  données auquel un ou plusieurs instruments sont attachés. Par\n                  exemple :\n                  <ul>\n                    <li>\n                      <i>Glider</i>\n                    </li>\n                    <li>Navire</li>\n                    <li>Bouée</li>\n                    <li>Satellite</li>\n                    <li>Rosette</li>\n                    <li>ROV</li>\n                    <li>Amarrage</li>\n                  </ul>\n                  Il est fortement encouragé d'ajouter des informations sur une\n                  plateforme. S'il n'y a pas de plateformes, vous pouvez entrer\n                  des informations sur les instruments au bas de la page.\n                </Fr>\n              </I18n>\n            </QuestionText>\n\n            <FormControlLabel\n              disabled={disabled}\n              control={\n                <Checkbox\n                  name=\"noPlatform\"\n                  checked={noPlatform}\n                  onChange={(e) => {\n                    const { checked } = e.target;\n\n                    updateRecord(\"noPlatform\")(checked);\n                  }}\n                />\n              }\n              label={\n                <I18n>\n                  <En>This dataset doesn't have a platform</En>\n                  <Fr>Ce jeu de données n'a pas de plateforme</Fr>\n                </I18n>\n              }\n            />\n          </Grid>\n\n          <Grid item xs style={paperClass}>\n            {!noPlatform ? (\n              <>\n                <Platform\n                  record={record}\n                  handleUpdateRecord={handleUpdateRecord}\n                  disabled={disabled}\n                />\n\n                <QuestionText>\n                  <I18n>\n                    <En>\n                      At least one instrument is required if there is a\n                      platform.\n                    </En>\n                    <Fr>\n                      Au moins un instrument est requis s'il y a une plateforme.\n                    </Fr>\n                  </I18n>\n\n                  <RequiredMark passes={validateField(record, \"instruments\")} />\n                </QuestionText>\n              </>\n            ) : (\n              <QuestionText>\n                <I18n>\n                  <En>You can still enter an instrument without a platform</En>\n                  <Fr>\n                    Vous pouvez toujours entrer dans un instrument sans\n                    plateforme\n                  </Fr>\n                </I18n>\n              </QuestionText>\n            )}\n\n            <Instruments\n              instruments={record.instruments}\n              updateInstruments={updateRecord(\"instruments\")}\n              disabled={disabled}\n              paperClass={paperClass}\n              noPlatform={noPlatform}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\nexport default PlatformTab;\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-underscore-dangle */\nimport React, { useState } from \"react\";\n\nimport { TextField, Grid, Typography } from \"@material-ui/core\";\nimport L from \"leaflet\";\nimport {\n  Map,\n  TileLayer,\n  FeatureGroup,\n  withLeaflet,\n  Polygon as LeafletPolygon,\n  Rectangle as LeafletRectangle,\n} from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport { I18n, En, Fr } from \"../I18n\";\n\nimport { QuestionText, SupplementalText } from \"./QuestionStyles\";\nimport { validateField } from \"../../utils/validate\";\nimport RequiredMark from \"./RequiredMark\";\n\nconst MapSelect = ({\n  handleUpdateMap,\n  updateMap,\n  mapData = {},\n  disabled,\n  record,\n}) => {\n  // On map clear?\n  function onMapClear() {\n    const emptySpatial = {\n      north: \"\",\n      south: \"\",\n      east: \"\",\n      west: \"\",\n      polygon: \"\",\n    };\n\n    handleUpdateMap(emptySpatial);\n  }\n\n  const [editableFG, setEditableFG] = useState(null);\n  const [, setLayerError] = useState(null);\n\n  const coordTest = /-?\\d+\\.?\\d+/;\n  const polyTest = /-?\\d+\\.?\\d+,\\s*-?\\d+\\.?\\d+\\s*?/g;\n\n  function clearExtraLayers(drawnItems) {\n    // From https://stackoverflow.com/questions/61073568/delete-layer-before-creating-a-new-one-with-react-leaflet-draw-in-leaflet\n    // Only allow one box on the map at a time\n    // if the number of layers is bigger than 1 then delete the first\n    if (Object.keys(drawnItems).length > 1) {\n      Object.keys(drawnItems).forEach((layerid) => {\n        const existingLayers = Object.keys(editableFG.leafletElement._layers)\n          .length;\n\n        if (existingLayers === 1) return;\n\n        const layer = drawnItems[layerid];\n\n        editableFG.leafletElement.removeLayer(layer);\n      });\n    }\n  }\n  // update a mapData property using an event\n  function handleChange(key) {\n    return (e) => {\n      const drawnItems = editableFG.leafletElement._layers;\n      clearExtraLayers(drawnItems);\n\n      const newData = { ...mapData, [key]: e.target.value };\n\n      updateMap(newData);\n    };\n  }\n  // update the polygon property using an event\n  function handleChangePoly(e) {\n    const drawnItems = editableFG.leafletElement._layers;\n    clearExtraLayers(drawnItems);\n\n    const newData = { ...mapData, polygon: e.target.value };\n    updateMap(newData);\n  }\n\n  function limitDecimals(x) {\n    return Number.parseFloat(x).toPrecision(4);\n  }\n\n  function parsePolyString(polygonList) {\n    let coordList = [...polygonList.matchAll(polyTest)].map((match) => {\n      return match[0];\n    });\n\n    try {\n      coordList = coordList.map((point) => {\n        return point.split(\",\").map(Number);\n      });\n    } catch (error) {\n      setLayerError({ error });\n    }\n\n    return coordList;\n  }\n\n  const hasBoundingBox = (\n    test_n = mapData.north,\n    test_s = mapData.south,\n    test_e = mapData.east,\n    test_w = mapData.west\n  ) => {\n    const test =\n      coordTest.test(test_n) &&\n      coordTest.test(test_s) &&\n      coordTest.test(test_e) &&\n      coordTest.test(test_w);\n\n    return test;\n  };\n\n  const hasPolygon = (test_string = mapData.polygon) => {\n    return polyTest.test(test_string);\n  };\n\n  const onCreated = (e) => {\n    const { layer, layerType } = e;\n\n    // remove any existing shapes\n    const drawnItems = editableFG.leafletElement._layers;\n    clearExtraLayers(drawnItems);\n\n    switch (layerType) {\n      case \"polygon\":\n        const points = layer.getLatLngs()[0];\n        const polygonStrings = points.map(\n          ({ lat, lng }) => `${limitDecimals(lat)},${limitDecimals(lng)}`\n        );\n        const polygon = polygonStrings.concat(polygonStrings[0]).join(\" \");\n\n        updateMap({ polygon });\n        break;\n\n      default: // Assume rectangle\n      case \"rectangle\":\n        const bounds = layer.getBounds();\n\n        let { lat: north, lng: east } = bounds.getNorthEast().wrap();\n        let { lat: south, lng: west } = bounds.getSouthWest().wrap();\n\n        north = limitDecimals(north);\n        south = limitDecimals(south);\n        east = limitDecimals(east);\n        west = limitDecimals(west);\n\n        const newValue = { north, south, east, west };\n        updateMap(newValue);\n    }\n  };\n\n  const onFeatureGroupReady = (reactFGref) => {\n    // store the featureGroup ref for future access to content\n    setEditableFG(reactFGref);\n  };\n  L.EditToolbar.Delete.include({\n    enable() {\n      // eslint-disable-next-line react/no-this-in-sfc\n      this.options.featureGroup.clearLayers();\n      onMapClear();\n    },\n  });\n\n  const bboxIsDrawn = Boolean(\n    mapData.north || mapData.south || mapData.east || mapData.west\n  );\n\n  const fieldsAreEmpty = !bboxIsDrawn && !mapData.polygon;\n\n  return (\n    <div>\n      <Map\n        style={{ width: \"100%\", height: \"55vh\" }}\n        center={[50, -100]}\n        zoom={3}\n\n        // whenReady={loadExistingExtent}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <FeatureGroup\n          ref={(featureGroupRef) => {\n            onFeatureGroupReady(featureGroupRef);\n          }}\n        >\n          {disabled === false && (\n            <EditControl\n              position=\"topleft\"\n              // onEdited={onEditPath}\n              onCreated={onCreated}\n              onMapClear={onMapClear}\n              draw={{\n                marker: false,\n                circle: false,\n                polyline: false,\n                circlemarker: false,\n                polygon: true,\n              }}\n              edit={{\n                edit: false,\n              }}\n            />\n          )}\n\n          {hasPolygon() && (\n            <LeafletPolygon positions={parsePolyString(mapData.polygon)} />\n          )}\n\n          {hasBoundingBox() && (\n            <LeafletRectangle\n              bounds={[\n                [mapData.north, mapData.east],\n                [mapData.south, mapData.west],\n              ]}\n            />\n          )}\n        </FeatureGroup>\n      </Map>\n      <br />\n      <QuestionText>\n        <I18n>\n          <En>Bounding Box Coordinates</En>\n          <Fr>Coordonnées de délimitation - Est, Ouest, Nord, Sud</Fr>\n        </I18n>\n        {(bboxIsDrawn || fieldsAreEmpty) && (\n          <RequiredMark passes={validateField(record, \"map\")} />\n        )}\n\n        <SupplementalText>\n          <I18n>\n            <En>\n              If you are providing a bounding box, please provide the\n              coordinates in decimal degrees (eg 58.66) and not in decimal\n              minutes seconds.\n            </En>\n            <Fr>\n              Si vous fournissez des coordonnées de délimitation, veuillez les fournir en <b>degrés décimaux</b>.\n            </Fr>\n          </I18n>\n        </SupplementalText>\n      </QuestionText>\n      <Grid container direction=\"row\" spacing={3}>\n        <Grid item xs={2}>\n          <TextField\n            label={<I18n en=\"North\" fr=\"Nord\" />}\n            value={mapData.north || \"\"}\n            inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n            onChange={handleChange(\"north\")}\n            type=\"number\"\n            disabled={disabled || Boolean(mapData.polygon)}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField\n            label={<I18n en=\"South\" fr=\"Sud\" />}\n            value={mapData.south || \"\"}\n            onChange={handleChange(\"south\")}\n            type=\"number\"\n            disabled={disabled || Boolean(mapData.polygon)}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField\n            label={<I18n en=\"East\" fr=\"Est\" />}\n            value={mapData.east || \"\"}\n            onChange={handleChange(\"east\")}\n            type=\"number\"\n            disabled={disabled || Boolean(mapData.polygon)}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField\n            value={mapData.west || \"\"}\n            label={<I18n en=\"West\" fr=\"Ouest\" />}\n            onChange={handleChange(\"west\")}\n            type=\"number\"\n            disabled={disabled || Boolean(mapData.polygon)}\n          />\n        </Grid>\n      </Grid>\n\n      <Typography variant=\"h6\" style={{ margin: \"20px\", marginLeft: \"20%\" }}>\n        <I18n>\n          <En>OR</En>\n          <Fr>Ou</Fr>\n        </I18n>\n      </Typography>\n\n      <QuestionText>\n        <I18n>\n          <En>Polygon coordinates</En>\n          <Fr>Coordonnées du/des polygone(s)</Fr>\n        </I18n>\n        {(!bboxIsDrawn || fieldsAreEmpty) && (\n          <RequiredMark passes={validateField(record, \"map\")} />\n        )}\n        <SupplementalText>\n          <I18n>\n            <En>\n              If you are providing polygon coordinates, they must start and end\n              with the same point. Eg,\n            </En>\n            <Fr>\n              Doivent commencer et se terminer par le même point. Par exemple,\n            </Fr>\n          </I18n>{\" \"}\n          48,-128 56,-133 56,-147 48,-128\n        </SupplementalText>\n      </QuestionText>\n      <TextField\n        value={mapData.polygon || \"\"}\n        onChange={handleChangePoly}\n        type=\"text\"\n        fullWidth\n        disabled={disabled || bboxIsDrawn}\n      />\n    </div>\n  );\n};\n\nexport default withLeaflet(MapSelect);\n","import { Paper, TextField, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\n\nimport MapSelect from \"../FormComponents/MapSelect\";\nimport { camelToSentenceCase } from \"../../utils/misc\";\nimport SelectInput from \"../FormComponents/SelectInput\";\nimport { depthDirections } from \"../../isoCodeLists\";\nimport translate from \"../../utils/i18n\";\n\nimport {\n  QuestionText,\n  SupplementalText,\n  paperClass,\n} from \"../FormComponents/QuestionStyles\";\nimport { validateField } from \"../../utils/validate\";\n\nconst SpatialTab = ({ disabled, record, handleUpdateRecord, updateRecord }) => {\n  const { language } = useParams();\n\n  return (\n    <Grid>\n      <Paper style={paperClass}>\n        <QuestionText style={{ paddingBottom: \"15px\" }}>\n          <I18n>\n            <En>What is the spatial extent of the dataset?</En>\n            <Fr>Quelle est l'étendue géographique du jeu de données?</Fr>\n          </I18n>{\" \"}\n          <SupplementalText>\n            <I18n>\n              <En>\n                You can draw a bounding box or polygon for the dataset using the\n                Polygon or Box buttons at the left side of them form.\n                Alternatively you can enter them using the fields below. Either\n                a bounding box or a Polygon is required.\n              </En>\n              <Fr>\n                Vous pouvez tracer un cadre ou un polygone pour situer\n                géographiquement votre jeu de données. Vous pouvez aussi\n                localiser l’aire géographique couverte par votre jeu de données\n                en inscrivant les coordonnées géographiques (degrés décimaux)\n                dans les champs apparaissant sous la carte. Cette section doit\n                obligatoirement être complétée.\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <MapSelect\n          mapData={record.map}\n          updateMap={updateRecord(\"map\")}\n          handleUpdateMap={handleUpdateRecord(\"map\")}\n          disabled={disabled}\n          record={record}\n        />\n      </Paper>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the vertical extent of the dataset in meters?</En>\n            <Fr>Quelle est l'étendue verticale du jeu de données en mètres?</Fr>\n          </I18n>\n          <RequiredMark\n            passes={\n              validateField(record, \"verticalExtentDirection\") &&\n              validateField(record, \"verticalExtentMin\") &&\n              validateField(record, \"verticalExtentMax\")\n            }\n          />\n\n          <SupplementalText>\n            <I18n>\n              <En>\n                <p>\n                  This captures the minimum and maximum depths (or height from\n                  sea floor) where the instrument recorded data.\n                </p>\n                <p>\n                  Depth positive: Depth is recorded with positive values (i.e. a\n                  maximum value of 150m implies 150m below the surface).\n                  <br />\n                  Heigth positive: Depth is the elevation from the sea floor\n                  (i.e. a maximum value of 150m implies 150m above the sea\n                  floor).\n                </p>\n              </En>\n              <Fr>\n                <p>\n                  Profondeur positive: La profondeur est enregistrée avec des\n                  valeurs positives (c'est-à-dire une valeur maximale de 150 m\n                  implique 150 m au-dessous de la surface).\n                </p>\n                <p>\n                  Hauteur positive: La profondeur est l'élévation depuis le fond\n                  marin (c'est-à-dire une valeur maximale de 150 m implique 150\n                  m au-dessus du fond marin)\n                </p>\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n          spacing={4}\n        >\n          <Grid item xs={5}>\n            <SelectInput\n              value={record.verticalExtentDirection || \"\"}\n              onChange={handleUpdateRecord(\"verticalExtentDirection\")}\n              options={depthDirections}\n              optionLabels={depthDirections.map((e) =>\n                camelToSentenceCase(translate(e, language))\n              )}\n              disabled={disabled}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <TextField\n              value={record.verticalExtentMin}\n              onChange={handleUpdateRecord(\"verticalExtentMin\")}\n              label=\"Min\"\n              fullWidth\n              type=\"number\"\n              disabled={disabled}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <TextField\n              value={record.verticalExtentMax}\n              onChange={handleUpdateRecord(\"verticalExtentMax\")}\n              label=\"Max\"\n              fullWidth\n              type=\"number\"\n              disabled={disabled}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default SpatialTab;\n","import { useParams } from \"react-router-dom\";\n\nimport regions from \"../../regions\";\n\nfunction GetRegionInfo() {\n  const { region } = useParams();\n  return regions[region];\n}\n\nexport default GetRegionInfo;\n","import React, { useState } from \"react\";\n\nimport {\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport { useParams } from \"react-router-dom\";\nimport { camelToSentenceCase } from \"../../utils/misc\";\nimport translate from \"../../utils/i18n\";\n\nimport { paperClass } from \"../FormComponents/QuestionStyles\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport { getErrorsByTab, percentValid } from \"../../utils/validate\";\n\nimport GetRegionInfo from \"../FormComponents/Regions\";\n\nconst SubmitTab = ({ record, submitRecord }) => {\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const { language } = useParams();\n\n  const recordIsComplete = Math.round(percentValid(record) * 100) === 100;\n\n  const validationErrors = getErrorsByTab(record);\n  const submitted = record.status === \"submitted\";\n  const regionInfo = GetRegionInfo();\n\n  return (\n    <Paper style={paperClass}>\n      <Grid container direction=\"column\" spacing={3}>\n        <Grid item xs>\n          <Typography>\n            <I18n>\n              <En>\n                Thank-you for completing this form. The information will be\n                reviewed and a {regionInfo.title.en} staff member will contact\n                you to request more information or provide an update on when\n                your dataset will be available through the{\" \"}\n                {regionInfo.catalogueTitle.en}. Your information will not be\n                published before you are contacted. If you have any questions or\n                would like to follow up on the status of your record, please\n                contact\n              </En>\n              <Fr>\n                Merci d'avoir rempli ce formulaire. L'information sera validée\n                par un membre du personnel du {regionInfo.title.fr}. Cette\n                personne pourrait vous contacter pour obtenir plus\n                d'informations ou pour vous indiquer quand votre jeu de données\n                sera disponible dans notre {regionInfo.catalogueTitle.fr}. Vos\n                informations ne seront pas publiées avant d'obtenir votre\n                approbation. Si vous avez des questions ou si vous désirez\n                effectuer un suivi concernant l'état de votre soumission,\n                veuillez contacter\n              </Fr>\n            </I18n>{\" \"}\n            <a href={`mailto:${regionInfo.email}`}>{regionInfo.email}</a>.\n          </Typography>\n        </Grid>\n        {submitted ? (\n          <Grid item xs>\n            <Typography>\n              <I18n>\n                <En>\n                  Thank you for your submission. A reviewer has been notified.\n                  You will receive an email when the record is published. You\n                  are still able to edit this record by saving it, until it is\n                  published.\n                </En>\n                <Fr>\n                  Merci pour votre soumission. Un examinateur a été avisé. Vous\n                  recevrez un e-mail lors de la publication de l'enregistrement.\n                  Vous pouvez toujours modifier cet enregistrement en\n                  l'enregistrant, jusqu'à ce qu'il soit publié.\n                </Fr>\n              </I18n>\n            </Typography>\n          </Grid>\n        ) : (\n          <>\n            {recordIsComplete ? (\n              <>\n                <Grid item xs>\n                  <Typography>\n                    <I18n>\n                      <En>\n                        You have completed all of the required fields, your\n                        record can be submitted now.\n                      </En>\n                      <Fr>\n                        Vous avez rempli tous les champs obligatoires, vous\n                        pouvez maintenant soumettre votre formulaire.\n                      </Fr>\n                    </I18n>\n                  </Typography>\n                </Grid>\n                <Grid item xs>\n                  {isSubmitting ? (\n                    <CircularProgress />\n                  ) : (\n                    <Button\n                      onClick={() => {\n                        setSubmitting(true);\n                        submitRecord().then(() => {\n                          setSubmitting(false);\n                        });\n                      }}\n                      disabled={submitted}\n                    >\n                      <I18n>\n                        <En>Submit</En>\n                        <Fr>Soumettre</Fr>\n                      </I18n>\n                    </Button>\n                  )}\n                </Grid>\n              </>\n            ) : (\n              <>\n                <Grid item xs>\n                  <Typography>\n                    <I18n>\n                      <En>\n                        You haven't completed all of the required fields. You\n                        will need to address the list below before submitting.\n                      </En>\n                      <Fr>\n                        Vous n'avez pas rempli tous les champs obligatoires.\n                        Veuillez compléter les champs identifiés ci-dessous\n                        avant de soumettre votre demande.\n                      </Fr>\n                    </I18n>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs>\n                  {Object.keys(validationErrors).map((tab) => (\n                    <div key={tab}>\n                      <Typography variant=\"h6\">\n                        {camelToSentenceCase(translate(tab, language))}\n                      </Typography>\n                      <List>\n                        {validationErrors[tab].map(\n                          ({ [language]: error }, i) => (\n                            <ListItem key={i}>\n                              <ListItemText primary={error} />\n                            </ListItem>\n                          )\n                        )}\n                      </List>\n                    </div>\n                  ))}\n                </Grid>\n              </>\n            )}\n          </>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\nexport default SubmitTab;\n","import { v4 as uuidv4 } from \"uuid\";\n\nconst blankRecord = {\n  title: { en: \"\", fr: \"\" },\n  abstract: { en: \"\", fr: \"\" },\n  identifier: uuidv4(),\n  keywords: { en: [], fr: [] },\n  eov: [],\n  progress: \"\",\n  distribution: [],\n  dateStart: null,\n  dateEnd: null,\n  map: { north: \"\", south: \"\", east: \"\", west: \"\", polygon: \"\" },\n  verticalExtentMin: \"\",\n  verticalExtentMax: \"\",\n  datePublished: null,\n  dateRevised: null,\n  recordID: \"\",\n  instruments: [],\n  platformID: \"\",\n  platformDescription: \"\",\n  language: \"\",\n  license: \"\",\n  contacts: [],\n  status: \"\",\n  comment: \"\",\n  limitations: \"\",\n  created: new Date().toISOString(),\n  lastEditedBy: {},\n  category: \"\",\n  verticalExtentDirection: \"\",\n  datasetIdentifier: \"\",\n  noPlatform: false,\n  filename: \"\",\n  organization: \"\",\n  timeFirstPublished: \"\",\n};\n\nexport default blankRecord;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Component } from \"react\";\nimport {\n  Box,\n  CircularProgress,\n  Grid,\n  Tab,\n  Tabs,\n  Fab,\n  Tooltip,\n  Typography,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Save } from \"@material-ui/icons\";\nimport { withRouter } from \"react-router-dom\";\nimport { I18n, En, Fr } from \"../I18n\";\nimport StatusChip from \"../FormComponents/StatusChip\";\nimport LastEdited from \"../FormComponents/LastEdited\";\nimport NotFound from \"./NotFound\";\n\nimport StartTab from \"../Tabs/StartTab\";\nimport ContactTab from \"../Tabs/ContactTab\";\nimport ResourcesTab from \"../Tabs/ResourcesTab\";\nimport IdentificationTab from \"../Tabs/IdentificationTab\";\nimport PlatformTab from \"../Tabs/PlatformTab\";\nimport SpatialTab from \"../Tabs/SpatialTab\";\nimport SubmitTab from \"../Tabs/SubmitTab\";\n\nimport { auth } from \"../../auth\";\nimport firebase from \"../../firebase\";\nimport { firebaseToJSObject, deepCopy } from \"../../utils/misc\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { percentValid } from \"../../utils/validate\";\n\nimport blankRecord from \"../../utils/blankRecord\";\n\nconst LinearProgressWithLabel = ({ value }) => (\n  <Tooltip\n    title={\n      <I18n\n        en=\"Percentage of required fields filled in\"\n        fr=\"Pourcentage de champs obligatoires remplis\"\n      />\n    }\n  >\n    <Box display=\"flex\" width=\"90%\" style={{ margin: \"auto\" }}>\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress\n          variant=\"determinate\"\n          value={value}\n          style={{ marginLeft: \"-30px\" }}\n        />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  </Tooltip>\n);\n\nfunction TabPanel({ children, value, index, ...other }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nconst styles = (theme) => ({\n  tabRoot: {\n    minWidth: \"115px\",\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n});\nclass MetadataForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      record: deepCopy(blankRecord),\n\n      // contacts saved by user (not the ones saved in the record)\n      // kept in firebase object format instead of array\n      userContacts: {},\n\n      // UI state:\n      loading: false,\n      tabIndex: \"start\",\n\n      // whether the 'save' icon button is greyed out or not\n      saveDisabled: true,\n\n      highlightMissingRequireFields: false,\n\n      editorInfo: { email: \"\", displayName: \"\" },\n      loggedInUserCanEditRecord: false,\n    };\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    this.setState({ loading: true });\n\n    this.unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const { region, recordID } = match.params;\n        const isNewRecord = match.url.endsWith(\"new\");\n        // could be viewer or reviewer\n        const loggedInUserID = user.uid;\n        const recordUserID = isNewRecord ? loggedInUserID : match.params.userID;\n        const loggedInUserOwnsRecord = loggedInUserID === recordUserID;\n        const { isReviewer } = this.context;\n        let editorInfo;\n        // get info of the person openeing the record\n        const editorDataRef = firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(loggedInUserID);\n\n        editorDataRef.child(\"userinfo\").on(\"value\", (userinfo) => {\n          editorInfo = userinfo.toJSON();\n\n          this.setState({ editorInfo });\n        });\n\n        // get info of the original author of record\n        const userDataRef = firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(recordUserID);\n\n        // get contacts\n        editorDataRef.child(\"contacts\").on(\"value\", (contacts) => {\n          this.setState({ userContacts: contacts.toJSON() });\n        });\n\n        // if recordID is set then the user is editing an existing record\n        if (isNewRecord) {\n          this.setState({ loading: false, loggedInUserCanEditRecord: true });\n        } else {\n          userDataRef\n            .child(\"records\")\n            .child(recordID)\n            .on(\"value\", (recordFireBase) => {\n              // Record not found, eg a bad link\n              const recordFireBaseObj = recordFireBase.toJSON();\n              if (!recordFireBaseObj) {\n                this.setState({ loading: false, record: null });\n\n                return;\n              }\n              const record = firebaseToJSObject(recordFireBaseObj);\n\n              const loggedInUserCanEditRecord =\n                (isReviewer || loggedInUserOwnsRecord) &&\n                record.status !== \"published\";\n\n              this.setState({\n                record: { ...blankRecord, ...record, recordID },\n                loggedInUserCanEditRecord,\n              });\n              this.setState({ loading: false });\n            });\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    // fixes error Can't perform a React state update on an unmounted component\n    if (this.unsubscribe) this.unsubscribe();\n  }\n\n  // genereric handler for updating state, used by most form components\n  // generic event handler\n  handleUpdateRecord = (key) => (event) => {\n    const { value } = event.target;\n    const changes = { [key]: value };\n\n    this.setState(({ record }) => ({\n      record: { ...record, ...changes },\n      saveDisabled: false,\n    }));\n  };\n\n  // a second genereric handler components that dont use onChange\n  // generic state updater creator\n  updateRecord = (key) => (value) => {\n    const changes = { [key]: value };\n\n    this.setState(({ record }) => ({\n      record: { ...record, ...changes },\n      saveDisabled: false,\n    }));\n  };\n\n  async submitRecord() {\n    const { match } = this.props;\n    const { region, userID } = match.params;\n    const isNewRecord = match.url.endsWith(\"new\");\n\n    // Bit of logic here to decide if this is a user submitting their own form\n    // or a reviewer submitting it\n    const loggedInUserID = auth.currentUser.uid;\n    const recordUserID = isNewRecord ? loggedInUserID : userID;\n\n    this.handleSaveClick().then(async (recordID) => {\n      if (userID && recordID) {\n        firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(recordUserID)\n          .child(\"records\")\n          .child(recordID)\n          .child(\"status\")\n          .set(\"submitted\");\n      }\n    });\n  }\n\n  async handleSaveClick() {\n    const { match, history } = this.props;\n    const { language, region } = match.params;\n\n    const userID = match.params.userID || auth.currentUser.uid;\n\n    const recordsRef = firebase\n      .database()\n      .ref(region)\n      .child(\"users\")\n      .child(userID)\n      .child(\"records\");\n\n    // remove userContacts since they get saved elsewhere\n    const { record, editorInfo } = this.state;\n    record.created = new Date().toISOString();\n\n    record.lastEditedBy = editorInfo;\n    let recordID;\n    if (record.recordID) {\n      recordID = record.recordID;\n      await recordsRef\n        .child(record.recordID)\n        // using blankRecord here in case there are new fields that the old record didnt have\n        .update({ ...blankRecord, ...record });\n    } else {\n      // new record\n      const newNode = await recordsRef.push(record);\n\n      // cheesy workaround to the issue of push() not saving dates\n      await newNode.update(record);\n      recordID = newNode.key;\n      this.setState({\n        record: { ...record, recordID },\n      });\n      history.push(`/${language}/${region}/${userID}/${recordID}`);\n    }\n\n    this.setState({ saveDisabled: true });\n    // if (match.url.endsWith(\"new\")) {\n    // set the URL so its shareable\n    // }\n    return recordID;\n  }\n\n  render() {\n    const { match } = this.props;\n    const { language } = match.params;\n    const { isReviewer } = this.context;\n\n    const {\n      userContacts,\n      tabIndex,\n      record,\n      saveDisabled,\n      loading,\n      highlightMissingRequireFields,\n      loggedInUserCanEditRecord,\n    } = this.state;\n\n    if (!record) {\n      return <NotFound />;\n    }\n    const { classes } = this.props;\n\n    const disabled = !loggedInUserCanEditRecord;\n\n    const tabProps = {\n      highlightMissingRequireFields,\n      disabled,\n      record,\n      handleUpdateRecord: this.handleUpdateRecord,\n      updateRecord: this.updateRecord,\n    };\n    const percentValidInt = Math.round(percentValid(record) * 100);\n\n    return loading ? (\n      <CircularProgress />\n    ) : (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          className={classes.fab}\n          disabled={\n            saveDisabled || !(record.title.en || record.title.fr) || disabled\n          }\n          onClick={() => this.handleSaveClick()}\n        >\n          <Tooltip\n            placement=\"right-start\"\n            title={\n              saveDisabled\n                ? \"Dataset needs a title before it can be saved\"\n                : \"Save record.\"\n            }\n          >\n            <span>\n              <Save />\n            </span>\n          </Tooltip>\n        </Fab>\n        <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n          <Grid item xs>\n            <Tabs\n              scrollButtons=\"auto\"\n              variant=\"fullWidth\"\n              value={tabIndex}\n              onChange={(e, newValue) => this.setState({ tabIndex: newValue })}\n              aria-label=\"simple tabs example\"\n            >\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={<I18n en=\"Start\" fr=\"Accueil\" />}\n                value=\"start\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={\n                  <I18n\n                    en=\"Data Identification\"\n                    fr=\"Identification des données\"\n                  />\n                }\n                value=\"identification\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label=\"Spatial\"\n                value=\"spatial\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label=\"Contact\"\n                value=\"contact\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={<I18n en=\"Resources\" fr=\"Ressources\" />}\n                value=\"distribution\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={<I18n en=\"Platform\" fr=\"Plateforme\" />}\n                value=\"platform\"\n              />\n              {loggedInUserCanEditRecord && (\n                <Tab\n                  fullWidth\n                  classes={{ root: classes.tabRoot }}\n                  label={<I18n en=\"Submit\" fr=\"Soumettre\" />}\n                  value=\"submit\"\n                  disabled={\n                    record.status === \"submitted\" ||\n                    record.status === \"published\"\n                  }\n                />\n              )}\n            </Tabs>\n            <div style={{ marginTop: \"10px\", textAlign: \"center\" }}>\n              <Typography variant=\"h5\">\n                {(language && record.title && record.title[language]) || (\n                  <I18n en=\"New Record\" fr=\"Nouvel enregistrement\" />\n                )}{\" \"}\n                <StatusChip status={record.status} />\n              </Typography>\n              <Typography component=\"div\">\n                <i>\n                  <LastEdited dateStr={record.created} />\n                  {record.lastEditedBy && record.lastEditedBy.displayName && (\n                    <>\n                      <I18n>\n                        <En>by </En>\n                        <Fr>Par </Fr>\n                      </I18n>\n                      {record.lastEditedBy.displayName}{\" \"}\n                      {isReviewer && record.lastEditedBy.email}\n                    </>\n                  )}\n                </i>\n                <LinearProgressWithLabel value={percentValidInt} />\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n        <TabPanel value={tabIndex} index=\"start\">\n          <StartTab {...tabProps} />\n        </TabPanel>\n        <TabPanel value={tabIndex} index=\"identification\">\n          <IdentificationTab {...tabProps} />\n        </TabPanel>\n        <TabPanel value={tabIndex} index=\"spatial\">\n          <SpatialTab {...tabProps} />\n        </TabPanel>\n        <TabPanel value={tabIndex} index=\"platform\">\n          <PlatformTab {...tabProps} />\n        </TabPanel>\n        <TabPanel value={tabIndex} index=\"distribution\">\n          <ResourcesTab {...tabProps} />\n        </TabPanel>\n\n        <TabPanel value={tabIndex} index=\"submit\">\n          <SubmitTab {...tabProps} submitRecord={() => this.submitRecord()} />\n        </TabPanel>\n\n        <TabPanel value={tabIndex} index=\"contact\">\n          {/* userContacts are the ones the user has saved, not necessarily part of the record */}\n          <ContactTab userContacts={userContacts} {...tabProps} />\n        </TabPanel>\n      </Grid>\n    );\n  }\n}\nMetadataForm.contextType = UserContext;\nexport default withStyles(styles)(withRouter(MetadataForm));\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Save } from \"@material-ui/icons\";\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\n\nimport { En, Fr, I18n } from \"../I18n\";\n\nimport ContactEditor from \"./ContactEditor\";\n\nclass EditContact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orgName: \"\",\n      orgEmail: \"\",\n      orgURL: \"\",\n      orgAdress: \"\",\n      orgCity: \"\",\n      orgCountry: \"\",\n      indName: \"\",\n      indPosition: \"\",\n      indEmail: \"\",\n    };\n    const { match } = this.props;\n\n    const { region } = match.params;\n\n    this.contactsRef = firebase\n      .database()\n      .ref(region)\n      .child(\"users\")\n      .child(auth.currentUser.uid)\n      .child(\"contacts\");\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const { contactID } = match.params;\n\n    if (auth.currentUser && contactID) {\n      this.setState({ contactID });\n\n      this.contactsRef\n        .child(contactID)\n        .on(\"value\", (contact) => this.setState(contact.toJSON()));\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.contactsRef) this.contactsRef.off(\"value\");\n  }\n\n  handleChange(key) {\n    return (event) => {\n      this.setState({ [key]: event.target.value });\n    };\n  }\n\n  handleCancelClick() {\n    const { match, history } = this.props;\n    const { language, region } = match.params;\n\n    history.push(`/${language}/${region}/contacts`);\n  }\n\n  // Create or update contact\n  async handleSubmitClick() {\n    const { history, match } = this.props;\n\n    const { region, language, contactID } = match.params;\n\n    // update\n    if (contactID) this.contactsRef.child(contactID).update(this.state);\n    // create\n    else this.contactsRef.push(this.state);\n\n    history.push(`/${language}/${region}/contacts`);\n  }\n\n  render() {\n    const { orgName, indName } = this.state;\n    const isFilledEnoughToSave = orgName || indName;\n    return (\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item xs>\n          <ContactEditor\n            value={this.state}\n            updateContactEvent={(key) => this.handleChange(key)}\n            // updateContact\n          />\n        </Grid>\n\n        <Grid item xs>\n          <Button\n            startIcon={<Save />}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.handleSubmitClick()}\n            disabled={!isFilledEnoughToSave}\n          >\n            <I18n>\n              <En>Save</En>\n              <Fr>Enregistrer</Fr>\n            </I18n>\n          </Button>\n\n          <Button\n            style={{ marginLeft: \"10px\" }}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => this.handleCancelClick()}\n          >\n            <I18n>\n              <En>Cancel</En>\n              <Fr>Annuler</Fr>\n            </I18n>\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(EditContact);\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n  Tooltip,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Delete, Publish, Edit, Eject, Visibility } from \"@material-ui/icons\";\nimport { I18n } from \"../I18n\";\nimport LastEdited from \"./LastEdited\";\nimport RecordStatusIcon from \"./RecordStatusIcon\";\n\nconst MetadataRecordListItem = ({\n  record,\n  language,\n  onViewClick,\n  onDeleteClick,\n  onSubmitClick,\n  showPublishAction,\n  showUnPublishAction,\n  showUnSubmitAction,\n  onUnSubmitClick,\n  onUnPublishClick,\n}) => {\n  if (!record.title) {\n    console.log(record);\n    return <></>;\n  }\n  return (\n    <ListItem key={record.key}>\n      <ListItemAvatar>\n        <Avatar>\n          <RecordStatusIcon status={record.status} />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        onClick={onViewClick}\n        primary={\n          <div style={{ width: \"80%\" }}>\n            {record.title && record.title[language]}\n          </div>\n        }\n        secondary={\n          <span>\n            Author: {record.userinfo.displayName} {record.userinfo.email} <br />\n            <LastEdited dateStr={record.created} />\n            <br />\n            UUID: {record.identifier}\n            <br />\n          </span>\n        }\n      />\n      <ListItemSecondaryAction>\n        <Tooltip title={<I18n en=\"View\" fr=\"Vue\" />}>\n          <span>\n            <IconButton\n              onClick={onViewClick}\n              edge=\"end\"\n              aria-label=\"view record\"\n            >\n              {showUnPublishAction ? <Visibility /> : <Edit />}\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title={<I18n en=\"Delete\" fr=\"Supprimer\" />}>\n          <span>\n            <IconButton onClick={onDeleteClick} edge=\"end\" aria-label=\"delete\">\n              <Delete />\n            </IconButton>\n          </span>\n        </Tooltip>\n        {showPublishAction && (\n          <Tooltip title={<I18n en=\"Publish\" fr=\"Publier\" />}>\n            <span>\n              <IconButton\n                onClick={onSubmitClick}\n                edge=\"end\"\n                aria-label=\"delete\"\n              >\n                <Publish />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n        {showUnPublishAction && (\n          <Tooltip title={<I18n en=\"Un-publish\" fr=\"De-Publier\" />}>\n            <span>\n              <IconButton\n                onClick={onUnPublishClick}\n                edge=\"end\"\n                aria-label=\"delete\"\n              >\n                <Eject />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n        {showUnSubmitAction && (\n          <Tooltip\n            title={<I18n en=\"Return to draft\" fr=\"Revenir au brouillon\" />}\n          >\n            <span>\n              <IconButton\n                onClick={onUnSubmitClick}\n                edge=\"end\"\n                aria-label=\"delete\"\n              >\n                <Eject />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default MetadataRecordListItem;\n","import React from \"react\";\nimport {\n  Typography,\n  List,\n  Grid,\n  CircularProgress,\n  Checkbox,\n  TextField,\n  Paper,\n} from \"@material-ui/core\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { QuestionText } from \"../FormComponents/QuestionStyles\";\n\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\nimport { Fr, En, I18n } from \"../I18n\";\n\nimport CheckBoxList from \"../FormComponents/CheckBoxList\";\n\nimport SimpleModal from \"../FormComponents/SimpleModal\";\nimport MetadataRecordListItem from \"../FormComponents/MetadataRecordListItem\";\n\nimport blankRecord from \"../../utils/blankRecord\";\n\nconst unique = (arr) => [...new Set(arr)];\n\nclass Reviewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      deleteModalOpen: false,\n      publishModalOpen: false,\n      unPublishModalOpen: false,\n      unSubmitModalOpen: false,\n      submitModalOpen: false,\n      modalKey: \"\",\n      modalUserID: \"\",\n      loading: false,\n      showRecordTypes: [\"\", \"submitted\", \"published\"],\n      showUsers: [],\n      records: [],\n      recordsFilter: \"\",\n      recordCountsByStatus: {},\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .on(\"value\", (regionUsersRaw) => {\n            const regionUsers = regionUsersRaw.toJSON();\n            const records = [];\n\n            Object.entries(regionUsers).forEach(([userID, user]) => {\n              if (user.records) {\n                Object.entries(user.records).forEach(([key, record]) => {\n                  records.push({\n                    ...{ ...blankRecord, ...record },\n                    userinfo: { ...user.userinfo, userID },\n                    key,\n                  });\n                });\n              }\n            });\n\n            const users = unique(\n              records.map((record) => record.userinfo.email)\n            );\n\n            this.setState({\n              records,\n              loading: false,\n              users,\n              showUsers: users,\n            });\n          });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) this.unsubscribe();\n  }\n\n  editRecord(key, userID) {\n    const { match, history } = this.props;\n    const { language, region } = match.params;\n    history.push(`/${language}/${region}/${userID}/${key}`);\n  }\n\n  async submitRecord(key, userID, status) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (key && userID) {\n      this.setState({ loading: true });\n\n      const recordRef = firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        .child(userID)\n        .child(\"records\")\n        .child(key);\n\n      await recordRef.child(\"status\").set(status);\n      await recordRef.child(\"timeFirstPublished\").set(new Date().toISOString());\n\n      this.setState({ loading: false });\n    }\n  }\n\n  async deleteRecord(key, userID) {\n    const { match } = this.props;\n    const { region } = match.params;\n    if (key && userID) {\n      this.setState({ loading: true });\n\n      await firebase\n        .database()\n        .ref(region)\n        .child(\"users\")\n        // this can be any user id\n        .child(userID)\n        .child(\"records\")\n        .child(key)\n        .remove();\n\n      this.setState({ loading: false });\n    }\n  }\n\n  toggleModal(modalName, state, key = \"\", userID) {\n    this.setState({ modalKey: key, [modalName]: state, modalUserID: userID });\n  }\n\n  render() {\n    const {\n      records,\n      recordsFilter,\n      showRecordTypes,\n      showUsers,\n      deleteModalOpen,\n      modalKey,\n      modalUserID,\n      unPublishModalOpen,\n      publishModalOpen,\n      unSubmitModalOpen,\n      loading,\n      users,\n    } = this.state;\n\n    const { match } = this.props;\n    const { language } = match.params;\n\n    const recordTypeOptions = [\"\", \"submitted\", \"published\"];\n\n    // sort records - drafts then submitted then published\n    let recordsToShow = records.filter((record) =>\n      showUsers.includes(record.userinfo.email)\n    );\n\n    // the text search\n    if (recordsFilter) {\n      recordsToShow = recordsToShow.filter((record) => {\n        const recordText = JSON.stringify([\n          record.title || {},\n          record.abstract || {},\n        ]).toUpperCase();\n        return recordText.includes(recordsFilter.toUpperCase());\n      });\n    }\n\n    const recordCountsByStatus = {\n      draft: (recordsToShow.filter((record) => record.status === \"\") || [])\n        .length,\n      submitted: (\n        recordsToShow.filter((record) => record.status === \"submitted\") || []\n      ).length,\n      published: (\n        recordsToShow.filter((record) => record.status === \"published\") || []\n      ).length,\n    };\n\n    recordsToShow = recordsToShow.filter((record) =>\n      showRecordTypes.includes(record.status)\n    );\n\n    recordsToShow = recordsToShow.sort((a, b) => {\n      return (\n        showRecordTypes.indexOf(a.status) > showRecordTypes.indexOf(b.status)\n      );\n    });\n\n    const DraftRecordItem = ({ record }) => {\n      return (\n        <MetadataRecordListItem\n          record={record}\n          key={record.key}\n          language={language}\n          onViewClick={() =>\n            this.editRecord(record.key, record.userinfo.userID)\n          }\n          onDeleteClick={() =>\n            this.toggleModal(\n              \"deleteModalOpen\",\n              true,\n              record.key,\n              record.userinfo.userID\n            )\n          }\n          onSubmitClick={() =>\n            this.toggleModal(\n              \"submitModalOpen\",\n              true,\n              record.key,\n              record.userinfo.userID\n            )\n          }\n          showUnSubmitAction\n        />\n      );\n    };\n    const SubmittedRecordItem = ({ record }) => (\n      <MetadataRecordListItem\n        record={record}\n        key={record.key}\n        language={language}\n        onViewClick={() => this.editRecord(record.key, record.userinfo.userID)}\n        onDeleteClick={() =>\n          this.toggleModal(\n            \"deleteModalOpen\",\n            true,\n            record.key,\n            record.userinfo.userID\n          )\n        }\n        onSubmitClick={() =>\n          this.toggleModal(\n            \"publishModalOpen\",\n            true,\n            record.key,\n            record.userinfo.userID\n          )\n        }\n        onUnSubmitClick={() =>\n          this.toggleModal(\n            \"unSubmitModalOpen\",\n            true,\n            record.key,\n            record.userinfo.userID\n          )\n        }\n        showPublishAction\n        showUnSubmitAction\n      />\n    );\n    const PublishedRecordItem = ({ record }) => {\n      return (\n        <MetadataRecordListItem\n          record={record}\n          key={record.key}\n          language={language}\n          onViewClick={() =>\n            this.editRecord(record.key, record.userinfo.userID)\n          }\n          onDeleteClick={() =>\n            this.toggleModal(\n              \"deleteModalOpen\",\n              true,\n              record.key,\n              record.userinfo.userID\n            )\n          }\n          onUnPublishClick={() =>\n            this.toggleModal(\n              \"unPublishModalOpen\",\n              true,\n              record.key,\n              record.userinfo.userID\n            )\n          }\n          showUnPublishAction\n        />\n      );\n    };\n\n    const RecordItem = (props) => {\n      const { record } = props;\n\n      if (record.status === \"\") return <DraftRecordItem {...props} />;\n      if (record.status === \"submitted\")\n        return <SubmittedRecordItem {...props} />;\n      if (record.status === \"published\")\n        return <PublishedRecordItem {...props} />;\n    };\n\n    const recordStatusTranslate = {\n      draft: { en: \"Draft\", fr: \"Brouillon\" },\n      submitted: { en: \"Submitted\", fr: \"Soumis\" },\n      published: { en: \"Published\", fr: \"Publié\" },\n    };\n    const selectedText = language === \"fr\" ? \"sélectionnés\" : \"selected\";\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        <SimpleModal\n          open={deleteModalOpen}\n          onClose={() => this.toggleModal(\"deleteModalOpen\", false)}\n          onAccept={() => this.deleteRecord(modalKey, modalUserID)}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={publishModalOpen}\n          onClose={() => this.toggleModal(\"publishModalOpen\", false)}\n          onAccept={() => this.submitRecord(modalKey, modalUserID, \"published\")}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={unPublishModalOpen}\n          onClose={() => this.toggleModal(\"unPublishModalOpen\", false)}\n          onAccept={() => this.submitRecord(modalKey, modalUserID, \"submitted\")}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={unSubmitModalOpen}\n          onClose={() => this.toggleModal(\"unSubmitModalOpen\", false)}\n          onAccept={() => this.submitRecord(modalKey, modalUserID, \"\")}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <Grid item xs>\n          <Typography variant=\"h5\">\n            <I18n>\n              <En>Review submissions</En>\n              <Fr>Examen des soumissions</Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <>\n            <Paper\n              style={{\n                padding: \"10px\",\n                margin: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <QuestionText>Filters</QuestionText>\n              <Grid container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <CheckBoxList\n                    value={showRecordTypes}\n                    onChange={(e) => {\n                      this.setState((s) => (s.showRecordTypes = e));\n                    }}\n                    options={recordTypeOptions}\n                    optionLabels={[\"draft\", \"submitted\", \"published\"].map(\n                      (status) =>\n                        `${recordStatusTranslate[status][language]} (${recordCountsByStatus[status]})`\n                    )}\n                  />\n                </Grid>\n                <Grid item xs>\n                  <Accordion>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel2a-content\"\n                      id=\"panel2a-header\"\n                    >\n                      <Typography>\n                        {showUsers.length === users.length ? (\n                          <I18n\n                            en=\"Users (All users selected)\"\n                            fr=\"Utilisateurs (Tous les utilisateurs)\"\n                          />\n                        ) : (\n                          <I18n\n                            en={`Users (${showUsers.length}  ${selectedText})`}\n                            fr={`Utilisateurs (${showUsers.length}  ${selectedText})`}\n                          />\n                        )}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Grid container direction=\"column\">\n                        <Grid item xs>\n                          Select All/None\n                          <Checkbox\n                            label=\"Show All/None\"\n                            onChange={(e) => {\n                              this.setState({\n                                showUsers: e.target.checked ? users : [],\n                              });\n                            }}\n                          />\n                        </Grid>\n                        <Grid item xs>\n                          <CheckBoxList\n                            value={showUsers}\n                            onChange={(e) => {\n                              this.setState({ showUsers: e });\n                            }}\n                            options={users}\n                            labelSize={null}\n                          />\n                        </Grid>\n                      </Grid>\n                    </AccordionDetails>\n                  </Accordion>\n                </Grid>\n                <Grid item xs>\n                  <TextField\n                    fullWidth\n                    onChange={(e) => {\n                      this.setState({ recordsFilter: e.target.value });\n                    }}\n                    label={\n                      <I18n\n                        en=\"Search title and abstract\"\n                        fr=\"Rechercher le titre et le résumé\"\n                      />\n                    }\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n            {recordsToShow.length ? (\n              <>\n                <Grid container direction=\"column\">\n                  <Grid item xs>\n                    <Typography>\n                      <I18n>\n                        <En>\n                          These are the submissions we have received from all\n                          users that have not yet been reviewed. To accept a\n                          record, click the 'Publish' button.\n                        </En>\n                        <Fr>\n                          Ce sont les soumissions que nous avons reçues de tous\n                          les utilisateurs qui n'ont pas encore été examinées.\n                          Pour accepter un enregistrement, cliquez sur le bouton\n                          « Publier ».\n                        </Fr>\n                      </I18n>\n                    </Typography>\n                  </Grid>\n                  <Grid item xs>\n                    <List>\n                      {recordsToShow.map((record) => (\n                        <RecordItem\n                          key={record.key}\n                          record={record}\n                          language={language}\n                        />\n                      ))}\n                    </List>\n                  </Grid>\n                </Grid>\n              </>\n            ) : (\n              <Grid container direction=\"column\">\n                <Grid item xs>\n                  <Typography>\n                    <I18n>\n                      <En>There are no records waiting to be reviewed.</En>\n                      <Fr>Aucun dossier n'attend d'être examiné.</Fr>\n                    </I18n>\n                  </Typography>\n                </Grid>\n              </Grid>\n            )}\n          </>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default Reviewer;\n","import React from \"react\";\nimport {\n  Typography,\n  Button,\n  CircularProgress,\n  TextField,\n  Grid,\n} from \"@material-ui/core\";\nimport { Save } from \"@material-ui/icons\";\n\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nconst unique = (arr) => [...new Set(arr)];\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // array of strings which are email addresses or reviewers, admins\n      admins: [],\n      reviewers: [],\n      loading: false,\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.setState({ loading: true });\n\n    this.unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        firebase\n          .database()\n          .ref(region)\n          .child(`permissions`)\n          .on(\"value\", (permissionsFirebase) => {\n            const permissions = permissionsFirebase.toJSON();\n\n            const admins = Object.values(permissions.admins || {});\n            const reviewers = Object.values(permissions.reviewers || {});\n\n            this.setState({\n              admins,\n              reviewers,\n              loading: false,\n            });\n          });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) this.unsubscribe();\n  }\n\n  updatePermissions() {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    const { reviewers, admins } = this.state;\n    if (auth.currentUser) {\n      const dbRef = firebase.database().ref(region).child(\"permissions\");\n\n      dbRef.child(\"admins\").set(unique(admins));\n      dbRef.child(\"reviewers\").set(unique(reviewers));\n    }\n  }\n\n  render() {\n    const { loading, reviewers, admins } = this.state;\n    return (\n      <Grid container direction=\"column\" spacing={3}>\n        <Grid item xs>\n          <Typography variant=\"h5\">\n            <I18n>\n              <En>Admin</En>\n              <Fr>Administrateurs</Fr>\n            </I18n>\n          </Typography>\n          <Typography>\n            <I18n>\n              <En>\n                Add each admin or reviewer's email address on it's own line\n              </En>\n              <Fr>\n                Ajouter l'adresse e-mail de chaque administrateur ou réviseur\n                sur sa propre ligne\n              </Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <>\n            <Grid item xs>\n              <Typography>\n                <I18n>\n                  <En>Admins</En>\n                  <Fr>Administrateurs</Fr>\n                </I18n>\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <TextField\n                multiline\n                fullWidth\n                value={admins.join(\"\\n\")}\n                onChange={(e) =>\n                  this.setState({ admins: e.target.value.split(\"\\n\") })\n                }\n              />\n            </Grid>\n            <Grid item xs>\n              <Typography>\n                <I18n>\n                  <En>Reviewers</En>\n                  <Fr>Réviseurs</Fr>\n                </I18n>\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <TextField\n                multiline\n                fullWidth\n                value={reviewers.join(\"\\n\")}\n                onChange={(e) =>\n                  this.setState({ reviewers: e.target.value.split(\"\\n\") })\n                }\n              />\n            </Grid>\n            <Grid item xs>\n              <Button\n                startIcon={<Save />}\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => this.updatePermissions()}\n              >\n                <I18n>\n                  <En>Save</En>\n                  <Fr>Enregistrer</Fr>\n                </I18n>\n              </Button>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default Admin;\n","import React from \"react\";\nimport * as Sentry from \"@sentry/react\";\n\nconst SentryTest = () => {\n  Sentry.captureException(new Error(\"Testing sentry\"));\n  return <h1>Error notification sent</h1>;\n};\n\nexport default SentryTest;\n","import React, { useContext } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\n\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Submissions from \"./Pages/Submissions\";\nimport Contacts from \"./Pages/ContactsSaved\";\nimport Login from \"./Pages/Login\";\nimport NavDrawer from \"./NavDrawer\";\nimport MetadataForm from \"./Pages/MetadataForm\";\nimport EditContact from \"./FormComponents/EditSavedContact\";\nimport Reviewer from \"./Pages/Reviewer\";\nimport Admin from \"./Pages/Admin\";\nimport NotFound from \"./Pages/NotFound\";\nimport SentryTest from \"./Pages/SentryTest\";\nimport UserProvider, { UserContext } from \"../providers/UserProvider\";\nimport regions from \"../regions\";\n\nconst RegionLogo = ({ children }) => {\n  const { language, region } = useParams();\n  const imgPath = `/cioos-${region}-${language}.png`;\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item xs>\n        <img src={process.env.PUBLIC_URL + imgPath} alt={region} />\n      </Grid>\n      <Grid item xs style={{ paddingLeft: \"50px\" }}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\nconst Pages = ({ match }) => {\n  const { loggedIn, authIsLoading } = useContext(UserContext);\n\n  return (\n    <>\n      {authIsLoading ? (\n        <CircularProgress />\n      ) : (\n        <RegionLogo>\n          {loggedIn ? (\n            <Switch>\n              <Route path={`${match.path}/`} exact component={Submissions} />\n              <Route path={`${match.path}/new`} component={MetadataForm} />\n              <Route\n                path={`${match.path}/contacts/:contactID`}\n                component={EditContact}\n              />\n              <Route\n                path={`${match.path}/contacts/new`}\n                component={EditContact}\n              />\n              <Route path={`${match.path}/contacts`} component={Contacts} />\n              <Route\n                path={`${match.path}/:userID/:recordID`}\n                component={MetadataForm}\n              />\n              <Route\n                path={`${match.path}/submissions`}\n                component={Submissions}\n              />\n              <Route path={`${match.path}/reviewer`} component={Reviewer} />\n              <Route path={`${match.path}/admin`} component={Admin} />\n              <Route\n                path={`${match.path}/sentry-test`}\n                component={SentryTest}\n              />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          ) : (\n            <Login />\n          )}\n        </RegionLogo>\n      )}\n    </>\n  );\n};\nconst BaseLayout = ({ match }) => {\n  const { region } = useParams();\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: regions[region].colors.primary,\n      },\n      secondary: {\n        main: regions[region].colors.secondary,\n      },\n    },\n    props: {\n      MuiTextField: {\n        variant: \"outlined\",\n      },\n      MuiSelect: {\n        variant: \"outlined\",\n      },\n      MuiButton: {\n        variant: \"outlined\",\n      },\n    },\n  });\n\n  return (\n    <UserProvider>\n      <ThemeProvider theme={theme}>\n        <NavDrawer>\n          <Pages match={match} />\n        </NavDrawer>\n      </ThemeProvider>\n    </UserProvider>\n  );\n};\n\nexport default BaseLayout;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport regions from \"../../regions\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 400,\n    \"&:hover\": {\n      filter:\n        \"brightness( 100% ) contrast( 100% ) saturate( 200% ) blur( 0px ) hue-rotate( 197deg )\",\n      /* … */\n    },\n  },\n});\n\nexport default function MediaCard({ region, regionSummary }) {\n  const history = useHistory();\n  const { language } = useParams();\n  const classes = useStyles();\n\n  const regionInfo = regions[region];\n  const imgPath = `/cioos-${region}-${language}.png`;\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={() => history.push(`/${language}/${region}`)}\n      style={{ minHeight: \"500px\", minWidth: \"400px\" }}\n    >\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={`${process.env.PUBLIC_URL}/map-${region}.jpg`}\n          title={regionInfo.title[language]}\n        />\n        <CardContent>\n          <div>\n            <img\n              src={process.env.PUBLIC_URL + imgPath}\n              alt={region}\n              style={{ margin: \"10px\", maxWidth: \"300px\", maxHeight: \"80px\" }}\n            />\n          </div>\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {regionSummary}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport RegionCard from \"../FormComponents/RegionCard\";\n\nimport regions from \"../../regions\";\n\nexport default function RegionSelect() {\n  const { language } = useParams();\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item xs>\n        <Typography variant=\"h6\">\n          <I18n>\n            <En>\n              Welcome to the CIOOS Metadata Entry Tool. To get started, please\n              select the region where your data was collected.\n            </En>\n            <Fr>\n              Bienvenue dans l'outil de saisie de métadonnées du SIOOC. Pour\n              commencer, veuillez sélectionner la région dans laquelle vos\n              données ont été collectées.\n            </Fr>\n          </I18n>\n        </Typography>\n      </Grid>\n      <Grid item xs>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"stretch\"\n        >\n          {Object.entries(regions).map(([regionCode, regionInfo]) => {\n            if (regionInfo.showInRegionSelector)\n              return (\n                <Grid item xs key={regionCode}>\n                  <RegionCard\n                    region={regionCode}\n                    regionSummary={regionInfo.introPageText[language]}\n                  />\n                </Grid>\n              );\n            return null;\n          })}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport {\n  Route,\n  HashRouter as Router,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport regions from \"../regions\";\nimport NavDrawer from \"./NavDrawer\";\n\nimport BaseLayout from \"./BaseLayout\";\nimport RegionSelect from \"./Pages/RegionSelect\";\n\nconst languagePath = \":language(en|fr)\";\n// eg :region(pacific|atlantic..)\nconst regionPath = `:region(${Object.keys(regions).join(\"|\")})`;\n\nconst App = () => (\n  <Router basename=\"/\">\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/en/region-select\" />\n      </Route>\n      <Route\n        path={`/${languagePath}/region-select`}\n        exact\n        component={() => (\n          <NavDrawer>\n            <RegionSelect />\n          </NavDrawer>\n        )}\n      />\n      <Route path={`/${languagePath}/${regionPath}`} component={BaseLayout} />\n      <Route path=\"*\">\n        <Redirect to=\"/en/region-select\" />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nif (process.env.NODE_ENV === \"production\")\n  Sentry.init({\n    dsn:\n      \"https://8fd4b6885cc447c0b11aa0cb3009b0e3@o56764.ingest.sentry.io/5493983\",\n    integrations: [new Integrations.BrowserTracing()],\n\n    // We recommend adjusting this value in production, or using tracesSampler\n    // for finer control\n    tracesSampleRate: 1.0,\n  });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
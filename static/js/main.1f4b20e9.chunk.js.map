{"version":3,"sources":["utils/emlTemplate.j2","regions.js","firebase.js","auth.js","components/I18n.jsx","components/Pages/FormClassTemplate.jsx","providers/UserProvider.jsx","components/NavDrawer.jsx","utils/misc.js","utils/blankRecord.js","utils/firebaseRecordFunctions.js","components/FormComponents/SimpleModal.jsx","components/FormComponents/ApaPreview.jsx","utils/recordToEML.js","utils/licenses.js","utils/recordToERDDAP.js","utils/recordToDataCite.js","utils/validate.js","components/FormComponents/LastEdited.jsx","components/FormComponents/RecordStatusIcon.jsx","components/FormComponents/MetadataRecordListItem.jsx","components/Pages/Submissions.jsx","components/Pages/Published.jsx","utils/firebaseContactFunctions.js","components/FormComponents/ContactTitle.jsx","components/Pages/ContactsSaved.jsx","components/Pages/Login.jsx","components/FormComponents/StatusChip.jsx","components/Pages/NotFound.jsx","components/FormComponents/RequiredMark.jsx","components/FormComponents/QuestionStyles.jsx","components/Tabs/StartTab.jsx","components/FormComponents/CheckBoxList.jsx","isoCodeLists.js","components/FormComponents/RolePicker.jsx","components/FormComponents/ContactEditor.jsx","components/FormComponents/SelectInput.jsx","components/FormComponents/ContactLeftList.jsx","components/Tabs/ContactTab.jsx","components/FormComponents/BilingualTextInput.jsx","components/FormComponents/Resources.jsx","components/Tabs/ResourcesTab.jsx","components/FormComponents/DateInput.jsx","utils/keywords.js","components/FormComponents/KeywordsInput.jsx","components/Tabs/IdentificationTab.jsx","components/FormComponents/Instruments.jsx","components/FormComponents/Platform.jsx","components/Tabs/PlatformTab.jsx","components/FormComponents/MapSelect.jsx","components/Tabs/SpatialTab.jsx","utils/tabs.js","components/FormComponents/Regions.jsx","components/Tabs/SubmitTab.jsx","components/Pages/MetadataForm.jsx","components/Pages/ErrorBoundary.jsx","components/FormComponents/EditSavedContact.jsx","components/FormComponents/TransferModal.jsx","components/Pages/Reviewer.jsx","components/Pages/Admin.jsx","components/Pages/SentryTest.jsx","components/BaseLayout.jsx","components/FormComponents/RegionCard.jsx","components/Pages/RegionSelect.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","regions","pacific","title","en","fr","titleFrPossessive","catalogueTitle","colors","primary","secondary","email","catalogueURL","introPageText","showInRegionSelector","stlaurent","atlantic","iys","datacitePrefix","hakai","test","config","apiKey","authDomain","databaseURL","process","REACT_APP_DEV_DEPLOYMENT","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","provider","auth","GoogleAuthProvider","setCustomParameters","promt","spanInLanguage","lang","children","useParams","language","En","Fr","I18n","props","console","error","Array","isArray","length","FormClassTemplate","listenerRefs","prevProps","this","match","params","region","unsubscribeAndCloseListeners","componentDidMount","unsubscribe","forEach","ref","off","Component","UserContext","createContext","user","authIsLoading","UserProvider","setState","onAuthStateChanged","userAuth","displayName","uid","Sentry","scope","setUser","username","database","child","update","permissionsRef","on","permissionsFB","permissions","toJSON","admins","reviewers","isAdmin","includes","isReviewer","loggedIn","push","state","translate","functions","httpsCallable","regenerateXMLforRecord","downloadRecord","createDraftDoi","updateDraftDoi","deleteDraftDoi","Provider","value","withRouter","useStyles","makeStyles","theme","root","display","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","languageSelector","borderColor","color","spacing","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","MiniDrawer","history","useHistory","classes","useTheme","useContext","userIsReviewer","userIsAdmin","Object","keys","pathname","useLocation","pathWithoutLang","split","map","e","slice","join","baseURL","React","useState","Boolean","open","setOpen","translations","home","new","contacts","saved","published","review","admin","signIn","logout","topBarBackgroundColor","usingDevDatabase","className","CssBaseline","AppBar","position","clsx","Toolbar","style","backgroundColor","IconButton","aria-label","onClick","edge","Menu","Typography","variant","noWrap","marginBottom","flex","src","alt","verticalAlign","paddingRight","Select","onChange","target","MenuItem","Drawer","paper","direction","ChevronRight","ChevronLeft","ListItem","key","ListItemIcon","Avatar","photoURL","ListItemText","Divider","List","Tooltip","placement","disabled","button","a","signInWithPopup","AccountCircle","ListAlt","AssignmentTurnedIn","RateReview","SupervisorAccount","signOut","then","ExitToApp","deepCopy","obj","JSON","parse","stringify","firebaseToJSObject","input","out","entries","keywords","values","contact","role","replacer","trim","trimStringsInObject","getRecordFilename","record","identifier","toLowerCase","replace","unique","arr","Set","blankRecord","abstract","eov","progress","distribution","dateStart","dateEnd","north","south","east","west","polygon","verticalExtentMin","verticalExtentMax","datePublished","dateRevised","edition","recordID","instruments","platform","platformID","platformDescription","license","status","comment","limitations","lastEditedBy","category","verticalExtentDirection","datasetIdentifier","doiCreationStatus","noPlatform","filename","organization","timeFirstPublished","getBlankRecord","uuidv4","created","Date","toISOString","blankContact","orgName","orgEmail","orgURL","orgAdress","orgCity","orgCountry","orgRor","indPosition","indEmail","indOrcid","givenNames","lastName","inCitation","getBlankContact","cloneRecord","sourceUserID","destinationUserID","sourceUserRecordsRef","once","val","standardizeContact","standardizeRecord","userID","updatedRecord","userinfo","loadRegionRecords","regionRecords","statusFilter","regionUsers","records","submitRecord","recordRef","set","deleteRecord","remove","transferRecord","transferEmail","regionUsersRef","userIDToEmailMapping","userData","userMatch","find","matchingUserID","newRecordRef","newRecordID","getRegionProjects","projects","rand","Math","round","random","getModalStyle","top","left","transform","palette","background","border","boxShadow","shadows","SimpleModal","onClose","onAccept","modalQuestion","modalStyle","Modal","aria-labelledby","aria-describedby","onKeyPress","id","type","generateCitation","format","publishers","filter","cslJSON","author","given","family","issued","publisher","DOI","version","Cite","template","ApaPreview","citation","dangerouslySetInnerHTML","__html","nunjucks","require","arrayOverlap","b","some","translateRole","isoRoles","log","roleMapping","creator","metadataProvider","associatedParty","configure","autoescape","web","fetch","templatePath","t","text","templateXML","renderString","roleMappingKeys","recordToEML","licenses","recordToERDDAP","isoStr","c","attributes","creator_email","creator_name","indName","creator_url","creator_institution","publisher_email","publisher_institution","publisher_url","publisher_name","date_created","geospatial_lat_max","geospatial_lat_min","geospatial_lon_max","geospatial_lon_min","geospatial_vertical_min","geospatial_vertical_max","institution","project","product_version","url","instrument","i","manufacturer","naming_authority","references","platform_vocabulary","summary","attributesStr","k","v","xmlescape","String","recordToDataCite","metadata","publicationYear","creators","reduce","creatorList","name","nameType","givenName","familyName","affiliation","schemeUri","affiliationIdentifier","affiliationIdentifierScheme","nameIdentifiers","nameIdentifier","nameIdentifierScheme","year","parseInt","Number","isNaN","undefined","subjects","flatMap","keyword","subject","dates","date","dateType","dateInformation","licenseInfo","rightsList","rights","rightsUri","rightsIdentifier","code","rightsIdentifierScheme","geoLocations","geoLocationBox","eastBoundLongitude","parseFloat","northBoundLatitude","southBoundLatitude","westBoundLongitude","mappedDataCiteObject","data","prefix","titles","descriptions","description","descriptionType","types","resourceTypeGeneral","validateEmail","validator","isEmail","validateURL","isURL","doiRegexp","validateDOI","string","URL","_","protocol","isValidHttpUrl","validateLatitude","num","validateLongitude","polygonIsValid","obj1","obj2","coordinates","lat","lon","contactIsFilled","validators","validation","tab","optional","every","dist","validateField","fieldName","valueToValidate","validationFunction","percentValid","fields","numTotalRequired","field","recordIsValid","optionalFieldsAreValid","LastEdited","timeAgo","dateStr","TimeAgo","addLocale","RecordStatusIcon","Description","Drafts","MetadataRecordListItem","onViewEditClick","onDeleteClick","onCloneClick","onSubmitClick","showAuthor","showDeleteAction","showSubmitAction","showPublishAction","showUnPublishAction","showUnSubmitAction","showViewAction","showEditAction","showPercentComplete","showCloneAction","onUnSubmitClick","onUnPublishClick","showDownloadButton","showTransferButton","onTransferClick","showCatalogueURL","downloadXML","isLoading","setIsLoading","anchorEl","setAnchorEl","handleClose","isValidRecord","percentValidInt","handleDownloadRecord","fileType","extensions","erddap","xml","yaml","eml","json","emlStr","res","message","blob","Blob","FileSaver","saveAs","ListItemAvatar","secondaryTypographyProps","ListItemSecondaryAction","Visibility","Edit","Delete","Publish","Eject","FileCopy","aria-controls","aria-expanded","aria-haspopup","event","currentTarget","CircularProgress","CloudDownload","MenuListProps","PaperProps","TransferWithinAStation","window","focus","OpenInNew","Submissions","deleteModalOpen","submitModalOpen","withdrawModalOpen","modalKey","modalRecord","loading","recordsRef","multiple","allUsersRecords","acc","loadRecords","currentUser","returnRecordToDraft","modalName","toggleModal","handleSubmitRecord","withdrawRecord","marginTop","Button","startIcon","Add","sort","editRecord","Published","usersRef","regionRecordsFB","handleCloneRecord","contactID","contactsRef","newNode","ContactTitle","getContactTitleFromNames","Contacts","modalOpen","deleteContact","cloneContact","newContact","Grid","container","item","xs","handleDeleteContact","addContact","editContact","PermContactCalendar","handleCloneContact","Login","StatusChip","chipText","Chip","label","NotFound","RequiredMark","passes","fontSize","bottom","SupplementalText","component","QuestionText","paperClass","margin","StartTab","regionInfo","Paper","href","Save","CheckBoxList","options","optionLabels","optionTooltips","labelSize","FormControlLabel","control","Checkbox","checked","ele","newCheckedValuesArray","concat","roleCodes","custodian","required","showProminently","owner","distributor","coAuthor","collaborator","contributor","editor","funder","mediator","originator","pointOfContact","principalInvestigator","processor","resourceProvider","rightsHolder","sponsor","stakeholder","progressCodes","onGoing","historicalArchive","completed","depthDirections","heightPositive","depthPositive","RolePicker","updateContact","expanded","setExpanded","roles","prominentRoles","nonProminentRoles","nonProminentRoleKeys","r","selectOptionIsInExpandedList","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","ContactEditor","lastname","showRolePicker","handleClear","updateContactEvent","updateContactRor","updateContactOrcid","orgEmailValid","indEmailValid","orgURLValid","givenNamesValid","lastNameValid","rorInputValue","setRorInputValue","orcidInputValue","setOrcidInputValue","useDebounce","debouncedRorInputValue","rorOptions","setRorOptions","rorSearchActive","setRorSearchActive","useEffect","newInputValue","startsWith","response","items","marginleft","height","size","Autocomplete","inputValue","onInputChange","errors","freeSolo","filterOptions","x","getOptionLabel","fullWidth","renderInput","TextField","active","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","Clear","helperText","rel","orcid","headers","accept","setTimeout","toUpperCase","givenNamesFormat","formControl","minWidth","selectEmpty","SelectInput","FormControl","displayEmpty","InputLabel","enterDelay","ContactLeftList","updateContacts","activeContact","setActiveContact","userContacts","saveToContacts","currentContacts","setItems","contactList","dragHandleSelector","lockAxis","onDrop","removedIndex","addedIndex","reorderedContacts","arrayMove","contactItem","fontWeight","contactIndex","duplicatedContact","duplicateContact","itemIndex","index","labelId","ContactTab","updateRecord","newContacts","showApaBox","payload","links","addresses","city","country","country_name","person","emails","uri","BilingualTextInput","multiline","translationButonDisabled","awaitingTranslation","setAwaitingTranslation","handleEvent","newData","languages","textTooBig","startAdornment","endIcon","alternateLanguage","fromLang","translatedText","translation","Resources","updateResources","resources","emptyResource","removeResource","moveResource","newIndex","element","splice","nameLabel","descriptionLabel","urlIsValid","handleResourceChange","newValue","ArrowUpwardSharp","ArrowDownwardSharp","ResourcesTab","formatDate","d","getDate","m","getMonth","y","getFullYear","DateInput","utils","DateFnsUtils","minDate","maxDate","dateSelected","KeyboardButtonProps","KeywordsInput","selectedKeyword","setKeyword","setInputValue","selectedKeywordAltLang","setSelectedKeywordAltLang","reverse","altLanguage","cleanList","list","indexOf","word","toLang","foundWord","keywordList","localeCompare","userKeywordList","userKeywordListAlt","onDelete","deletedChipLang","IdentificationTab","handleUpdateRecord","doiIsValid","languageUpperCase","doiGenerated","setDoiGenerated","doiErrorFlag","setDoiErrorFlag","loadingDoi","setLoadingDoi","loadingDoiUpdate","setLoadingDoiUpdate","loadingDoiDelete","setLoadingDoiDelete","doiUpdateFlag","setDoiUpdateFlag","generateDoiDisabled","showGenerateDoi","showUpdateDoi","showDeleteDoi","CatalogueLink","licensesSorted","doi","finally","dataObject","statusCode","eovCategories","categoryKey","categoryText","eovsFiltered","eovs","emerging","Update","l","emptyInstrument","Instruments","updateInstruments","activeInstrument","setActiveInstrument","updateInstrumentField","instrumentsCopy","manufacturerLabel","versionLabel","typeLabel","instrumentItem","Platform","platformsSorted","platforms","label_en","PlatformTab","withLeaflet","updateMap","mapData","handleMapClear","editableFG","setEditableFG","setLayerError","coordTest","polyTest","clearExtraLayers","drawnItems","layerid","leafletElement","_layers","layer","removeLayer","handleChange","limitDecimals","toPrecision","parsePolyString","polygonList","coordList","matchAll","point","hasPolygon","test_string","L","EditToolbar","include","enable","featureGroup","clearLayers","bboxIsDrawn","polyIsDrawn","fieldsAreEmpty","Map","center","zoom","TileLayer","attribution","FeatureGroup","featureGroupRef","onCreated","layerType","polygonStrings","getLatLngs","lng","polybounds","getBounds","getNorthEast","getSouthWest","bounds","onMapClear","draw","marker","circle","polyline","circlemarker","edit","positions","test_n","test_s","test_e","test_w","hasBoundingBox","inputProps","inputMode","pattern","latLngBounds","ignore","OpenEPSGDefn","SpatialTab","paddingBottom","handleUpdateMap","paddingTop","tabs","start","dataID","spatial","platformInstruments","GetRegionInfo","SubmitTab","isSubmitting","setSubmitting","validationErrors","getErrorsByTab","submitted","LinearProgressWithLabel","Box","mr","LinearProgress","TabPanel","other","hidden","MetadataForm","changes","saveDisabled","tabIndex","highlightMissingRequireFields","editorInfo","loggedInUserCanEditRecord","saveIncompleteRecordModalOpen","isNewRecord","endsWith","loggedInUserID","recordUserID","loggedInUserOwnsRecord","context","editorDataRef","userinfoRef","userDataRef","editorContactsRef","contactsFB","recordFireBase","recordFireBaseObj","getKey","handleSaveClick","userOKedRecordDemotion","recordIsComplete","path","tabProps","Fab","fab","Tabs","scrollButtons","Tab","tabRoot","textAlign","saveUpdateContact","contextType","withStyles","right","ErrorBoundary","hasError","errorInfo","EditContact","contactRef","isFilledEnoughToSave","updateOrgFromRor","updateIndFromOrcid","handleSubmitClick","handleCancelClick","TransferModal","setEmail","transferResult","setTransferResult","isTransferring","setIsTransferring","emailIsValid","RecordItem","commonProps","DraftRecordItem","SubmittedRecordItem","PublishedRecordItem","Reviewer","users","publishModalOpen","unPublishModalOpen","unSubmitModalOpen","transferModalOpen","modalUserID","showRecordTypes","showUsers","recordsFilter","recordCountsByStatus","authUser","regionUsersRaw","transferUserNotFound","recordsToShow","draft","recordStatusTranslate","selectedText","handleTransferRecord","bind","cleanArr","Admin","regionRef","permissionsFirebase","projectsRef","save","SentryTest","Error","RegionLogo","imgPath","paddingLeft","Pages","exact","BaseLayout","createTheme","overrides","MuiTooltip","tooltip","main","MuiTextField","MuiSelect","MuiButton","Helmet","sizes","ThemeProvider","maxWidth","media","MediaCard","regionSummary","Card","minHeight","CardActionArea","CardMedia","image","CardContent","maxHeight","RegionSelect","regionCode","regionPath","App","basename","to","location","hostname","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1f4b20e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emlTemplate.998d6686.j2\";","// Copying how RA's use colors in their wordpress sites\nconst regions = {\n  pacific: {\n    title: { en: \"CIOOS Pacific\", fr: \"SIOOC Pacifique\" },\n    titleFrPossessive: \"du SIOOC Pacifique\",\n    catalogueTitle: {\n      fr: \"Catalogue de données du SIOOC du Pacifique\",\n      en: \"CIOOS Pacific Data Catalogue\",\n    },\n    colors: { primary: \"#006e90\", secondary: \"#ffc857\" },\n    email: \"info@cioospacific.ca\",\n    catalogueURL: {\n      fr: \"https://catalogue.cioospacific.ca/fr/\",\n      en: \"https://catalogue.cioospacific.ca/\",\n    },\n    introPageText: {\n      en:\n        \"CIOOS Pacific integrates data from Canada’s west coast, from Dixon Entrance to the Strait of Juan de Fuca.\",\n      fr:\n        \"Le CIOOS Pacifique intègre les données de la côte ouest du Canada, de l'entrée Dixon au détroit de Juan de Fuca.\",\n    },\n    showInRegionSelector: true,\n  },\n\n  stlaurent: {\n    title: {\n      en: \"St. Lawrence Global Observatory\",\n      fr: \"Observatoire Global du Saint-Laurent (OGSL)\",\n    },\n    titleFrPossessive: \"de l'Observatoire Global du Saint-Laurent (OGSL)\",\n    catalogueTitle: {\n      fr:\n        \"Catalogue de données de l'Observatoire global du Saint-Laurent (OGSL)\",\n      en: \"St. Lawrence Global Observatory Data Catalogue (SLGO)\",\n    },\n    colors: { primary: \"#00adef\", secondary: \"#00aeef\" },\n    email: \"info@ogsl.ca\",\n    catalogueURL: {\n      fr: \"https://catalogue.ogsl.ca/\",\n      en: \"https://catalogue.ogsl.ca/en/\",\n    },\n    introPageText: {\n      en:\n        \"SLGO integrates data from the St. Lawrence, from the Great Lakes to the Gulf.\",\n      fr:\n        \"L'Observatoire global du Saint-Laurent intègre les données du Saint-Laurent, des Grands Lacs jusqu'au Golfe\",\n    },\n    showInRegionSelector: true,\n  },\n  atlantic: {\n    title: { en: \"CIOOS Atlantic\", fr: \"SIOOC Atlantique\" },\n    titleFrPossessive: \"du SIOOC Atlantique\",\n    catalogueTitle: {\n      fr: \"Catalogue de données du SIOOC du Atlantic\",\n      en: \"CIOOS Atlantic Data Catalogue\",\n    },\n    colors: { primary: \"#19222b\", secondary: \"#e55162\" },\n    email: \"info@cioosatlantic.ca\",\n    catalogueURL: {\n      fr: \"https://cioosatlantic.ca/ckan/fr/\",\n      en: \"https://cioosatlantic.ca/ckan/\",\n    },\n    introPageText: {\n      en:\n        \"CIOOS Atlantic integrates data from Canada’s east coast, from Labrador to Bay of Fundy.\",\n      fr:\n        \"Le CIOOS Atlantique intègre les données de la côte est du Canada, du Labrador à la baie de Fundy.\",\n    },\n    showInRegionSelector: true,\n  },\n\n  iys: {\n    title: { en: \"IYS\", fr: \"IYS\" },\n    datacitePrefix: \"10.21966\",\n    catalogueTitle: {\n      fr: \"Catalogue de données du IYS\",\n      en: \"IYS Data Catalogue\",\n    },\n    colors: { primary: \"#006e90\", secondary: \"#ffc857\" },\n    email: \"iys.data@hakai.org\",\n    catalogueURL: {\n      fr: \"https://iys.hakai.org/dataset/\",\n      en: \"https://iys.hakai.org/dataset/\",\n    },\n    introPageText: { en: \"\", fr: \"\" },\n    showInRegionSelector: false,\n  },\n  hakai: {\n    title: { en: \"Hakai\", fr: \"Hakai\" },\n    datacitePrefix: \"10.21966\",\n    catalogueTitle: {\n      fr: \"Catalogue de données du Hakai\",\n      en: \"Hakai Data Catalogue\",\n    },\n    colors: { primary: \"#aa2025\", secondary: \"#459be2\" },\n    email: \"data@hakai.org\",\n    catalogueURL: {\n      fr: \"https://catalogue.hakai.org/\",\n      en: \"https://catalogue.hakai.org/\",\n    },\n    introPageText: { en: \"\", fr: \"\" },\n    showInRegionSelector: false,\n  },\n  test: {\n    title: { en: \"Test\", fr: \"Test\" },\n    catalogueTitle: {\n      fr: \"Catalogue de données du Test\",\n      en: \"Test Data Catalogue\",\n    },\n    colors: { primary: \"#fcba03\", secondary: \"#2518ad\" },\n    email: \"data@hakai.org\",\n    catalogueURL: {\n      fr: \"https://example.com/\",\n      en: \"https://example.com/\",\n    },\n    introPageText: { en: \"This is a test region\", fr: \"\" },\n    showInRegionSelector: false,\n  },\n};\n\nexport default regions;\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport \"firebase/functions\";\nimport \"firebase/firestore\";\n\nconst deployedOnTestSserver = process.env.REACT_APP_DEV_DEPLOYMENT;\n\nconst productionDB = \"https://cioos-metadata-form.firebaseio.com\";\nconst devDB = \"https://cioos-metadata-form-dev.firebaseio.com\";\n\nconst config = {\n  apiKey: \"AIzaSyAdlELZS5Lbea5NquotMT8amwO-Lc_7ogc\",\n  authDomain: \"cioos-metadata-form.firebaseapp.com\",\n  databaseURL:\n    process.env.NODE_ENV === \"production\" && !deployedOnTestSserver\n      ? productionDB\n      : devDB,\n  projectId: \"cioos-metadata-form\",\n  storageBucket: \"cioos-metadata-form.appspot.com\",\n  messagingSenderId: \"646114203434\",\n  appId: \"1:646114203434:web:bccceadc5144270f98f053\",\n};\n\nfirebase.initializeApp(config);\n// uncomment below to use firebase emulator for local development\n// if (window.location.hostname === \"localhost\") {\n//   firebase.functions().useFunctionsEmulator(\"http://localhost:5002\");\n//   // firebase.auth().useEmulator(\"http://localhost:9099\");\n// }\n\nexport default firebase;\n","import firebase from \"./firebase\";\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nprovider.setCustomParameters({ promt: \"select_account\" });\n\nexport const auth = firebase.auth();\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst spanInLanguage = (lang) => ({ children }) => {\n  const { language } = useParams();\n  return language === lang && <>{children}</>;\n};\n\nexport const En = spanInLanguage(\"en\");\nexport const Fr = spanInLanguage(\"fr\");\n\n/* \n  This component can be used with attributes only, eg\n  <I18n en=\"boat\" fr=\"bateau\"/>\n\n  Or as a container for the <En> and <Fr> tags\n\n  Eg:\n\n  <I18n>\n    <En>rabbit</En>\n    <Fr>lapin</Fr>\n  </I18n>\n*/\n\nexport const I18n = (props) => {\n  const { en, fr } = props;\n  const { language = \"en\" } = useParams();\n\n  // If this component used via attributes\n  if (en || fr) {\n    if (en && fr) return language === \"en\" ? en : fr;\n    // eslint-disable-next-line no-console\n    console.error(\"Tag missing french or english!\");\n    return null;\n  }\n\n  if (Array.isArray(props.children) && props.children.length !== 2) {\n    // eslint-disable-next-line no-console\n    console.error(props, \"Tag missing french or english!\");\n  }\n\n  return props.children;\n};\n","import { Component } from \"react\";\n\nclass FormClassTemplate extends Component {\n  constructor() {\n    super();\n    this.listenerRefs = [];\n  }\n\n  componentDidUpdate(prevProps) {\n    const { match } = this.props;\n    // Refresh data when region changes via the URL\n\n    if (match.params.region !== prevProps.match.params.region) {\n      this.unsubscribeAndCloseListeners();\n      this.componentDidMount();\n    }\n  }\n\n  componentWillUnmount() {\n    // fixes error Can't perform a React state update on an unmounted component\n    this.unsubscribeAndCloseListeners();\n  }\n\n  unsubscribeAndCloseListeners() {\n    if (this.unsubscribe) this.unsubscribe();\n    if (this.listenerRefs.length) {\n      this.listenerRefs.forEach((ref) => ref.off());\n    }\n  }\n}\nexport default FormClassTemplate;\n","import React, { createContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { auth } from \"../auth\";\nimport firebase from \"../firebase\";\nimport FormClassTemplate from \"../components/Pages/FormClassTemplate\";\n\nexport const UserContext = createContext({ user: null, authIsLoading: false });\n\nclass UserProvider extends FormClassTemplate {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      authIsLoading: false,\n      admins: [],\n      reviewers: [],\n      isReviewer: false,\n      loggedIn: false,\n    };\n  }\n\n  componentDidMount = () => {\n    const { match } = this.props;\n\n    const { region } = match.params;\n    this.setState({ authIsLoading: true });\n    this.unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        const { displayName, email, uid } = userAuth;\n\n        Sentry.configureScope((scope) => {\n          scope.setUser({\n            email,\n            username: email,\n          });\n        });\n\n        firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(uid)\n          .child(\"userinfo\")\n          .update({ displayName, email });\n\n        const permissionsRef = firebase\n          .database()\n          .ref(region)\n          .child(`permissions`);\n\n        permissionsRef.on(\"value\", (permissionsFB) => {\n          const permissions = permissionsFB.toJSON();\n\n          const admins = permissions?.admins || \"\";\n          const reviewers = permissions?.reviewers || \"\";\n\n          const isAdmin = admins.includes(email);\n          const isReviewer = reviewers.includes(email);\n\n          this.setState({\n            admins,\n            reviewers,\n            isAdmin,\n            isReviewer,\n            loggedIn: true,\n          });\n        });\n        this.listenerRefs.push(permissionsRef);\n      } else {\n        this.setState({\n          loggedIn: false,\n          authIsLoading: false,\n        });\n      }\n      this.setState({ user: userAuth, authIsLoading: false });\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    const translate = firebase.functions().httpsCallable(\"translate\");\n    const regenerateXMLforRecord = firebase\n      .functions()\n      .httpsCallable(\"regenerateXMLforRecord\");\n    const downloadRecord = firebase.functions().httpsCallable(\"downloadRecord\");\n    const createDraftDoi = firebase.functions().httpsCallable(\"createDraftDoi\");\n    const updateDraftDoi = firebase.functions().httpsCallable(\"updateDraftDoi\");\n    const deleteDraftDoi = firebase.functions().httpsCallable(\"deleteDraftDoi\");\n\n    return (\n      <UserContext.Provider\n        value={{\n          ...this.state,\n          translate,\n          regenerateXMLforRecord,\n          downloadRecord,\n          createDraftDoi,\n          updateDraftDoi,\n          deleteDraftDoi,\n        }}\n      >\n        {children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(UserProvider);\n","import React, { useContext } from \"react\";\n\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  ExitToApp,\n  Contacts,\n  ListAlt,\n  AccountCircle,\n  ChevronLeft,\n  ChevronRight,\n  RateReview,\n  SupervisorAccount,\n  Menu,\n  AssignmentTurnedIn,\n} from \"@material-ui/icons\";\n\nimport {\n  Drawer,\n  Avatar,\n  AppBar,\n  Toolbar,\n  CssBaseline,\n  Typography,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Select,\n  Tooltip,\n  MenuItem,\n} from \"@material-ui/core\";\nimport regions from \"../regions\";\nimport { auth, signInWithGoogle } from \"../auth\";\n\nimport { En, Fr, I18n } from \"./I18n\";\n\nimport { UserContext } from \"../providers/UserProvider\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  languageSelector: {\n    \"&:before\": {\n      borderColor: \"white\",\n    },\n    \"&:hover:not(.Mui-disabled):before\": {\n      borderColor: \"white\",\n    },\n    color: \"white\",\n    borderColor: \"white\",\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer({ children }) {\n  const history = useHistory();\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const {\n    user,\n    isReviewer: userIsReviewer,\n    isAdmin: userIsAdmin,\n    authIsLoading,\n  } = useContext(UserContext);\n\n  let { language = \"en\", region = \"region-select\" } = useParams();\n\n  if (![\"en\", \"fr\"].includes(language)) language = \"en\";\n\n  // This component may be displayed before the region is selected\n  if (!Object.keys(regions).includes(region)) region = \"\";\n\n  const { pathname } = useLocation();\n\n  const pathWithoutLang = pathname\n    .split(\"/\")\n    .map((e) => e)\n    .slice(2)\n    .join(\"/\");\n\n  const baseURL = `/${language}/${region}`;\n\n  // if region not set, keep drawer closed\n  const [open, setOpen] = React.useState(Boolean(region));\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const translations = {\n    home: <I18n en=\"Home\" fr=\"Accueil\" />,\n    new: <I18n en=\"Metadata Editor\" fr=\"Éditeur de méta-données\" />,\n    contacts: <I18n en=\"Contacts\" fr=\"Contacts\" />,\n    saved: <I18n en=\"My Records\" fr=\"Enregistrements\" />,\n    published: <I18n en=\"Published Records\" fr=\"Dossiers publiés\" />,\n    review: <I18n en=\"Review submissions\" fr=\"Examen des soumissions\" />,\n    admin: <I18n en=\"Admin\" fr=\"Admin\" />,\n    signIn: <I18n en=\"Sign in\" fr=\"Se Connecter\" />,\n    logout: <I18n en=\"Logout\" fr=\"Déconnexion\" />,\n  };\n  const topBarBackgroundColor = region\n    ? regions[region].colors.primary\n    : // CIOOS national \"dominant colour\" from branding doc\n      \"#52a79b\";\n\n  // add some text to indicate connected to dev d\n  const usingDevDatabase =\n    process.env.REACT_APP_DEV_DEPLOYMENT ||\n    process.env.NODE_ENV === \"development\";\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar\n          style={{\n            backgroundColor: topBarBackgroundColor,\n            alignItems: \"end\",\n          }}\n        >\n          {region && (\n            <IconButton\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <Menu />\n            </IconButton>\n          )}\n          <Typography\n            variant=\"h5\"\n            noWrap\n            style={{\n              marginLeft: \"10px\",\n              marginBottom: \"10px\",\n              flex: 1,\n              color: \"white\",\n            }}\n          >\n            <I18n>\n              <En>Metadata Entry Tool</En>\n              <Fr>Outil de saisie de métadonnées</Fr>\n            </I18n>\n          </Typography>\n          <div style={{ marginLeft: \"auto\" }}>\n            <img\n              src={`${process.env.PUBLIC_URL}/cioos_website_top_banner_${language}.png`}\n              alt=\"CIOOS/SIOOC\"\n              width={350}\n              style={{ verticalAlign: \"bottom\", paddingRight: \"15px\" }}\n            />\n\n            <Select\n              color=\"primary\"\n              className={classes.languageSelector}\n              value={language}\n              onChange={(e) =>\n                history.push(`/${e.target.value}/${pathWithoutLang}`)\n              }\n            >\n              <MenuItem value=\"en\">EN</MenuItem>\n              <MenuItem value=\"fr\">FR</MenuItem>\n            </Select>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {region && (\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? <ChevronRight /> : <ChevronLeft />}\n            </IconButton>\n          </div>\n\n          {user && (\n            <ListItem key=\"userInfo\">\n              <ListItemIcon>\n                <Avatar src={user.photoURL} />\n              </ListItemIcon>\n              <ListItemText primary={user.displayName} />\n            </ListItem>\n          )}\n          <Divider />\n          <List>\n            {!user && region && (\n              <Tooltip\n                placement=\"right-start\"\n                title={open ? \"\" : translations.signIn}\n              >\n                <ListItem\n                  disabled={authIsLoading}\n                  button\n                  key=\"Sign in\"\n                  onClick={async () => {\n                    await signInWithGoogle();\n                    history.push(pathname);\n                  }}\n                >\n                  <ListItemIcon>\n                    <AccountCircle />\n                  </ListItemIcon>\n                  <ListItemText primary={translations.signIn} />\n                </ListItem>\n              </Tooltip>\n            )}\n            {user && region && (\n              <>\n                <Tooltip\n                  placement=\"right-start\"\n                  title={open ? \"\" : translations.saved}\n                >\n                  <ListItem\n                    button\n                    key=\"My Records\"\n                    onClick={() => history.push(`${baseURL}/submissions`)}\n                  >\n                    <ListItemIcon>\n                      <ListAlt />\n                    </ListItemIcon>\n                    <ListItemText primary={translations.saved} />\n                  </ListItem>\n                </Tooltip>\n                <Tooltip\n                  placement=\"right-start\"\n                  title={open ? \"\" : translations.saved}\n                >\n                  <ListItem\n                    button\n                    key=\"Region's Published Records\"\n                    onClick={() => history.push(`${baseURL}/published`)}\n                  >\n                    <ListItemIcon>\n                      <AssignmentTurnedIn />\n                    </ListItemIcon>\n                    <ListItemText primary={translations.published} />\n                  </ListItem>\n                </Tooltip>\n\n                <Tooltip\n                  placement=\"right-start\"\n                  title={open ? \"\" : translations.contacts}\n                >\n                  <ListItem\n                    button\n                    key=\"Contacts\"\n                    onClick={() => history.push(`${baseURL}/contacts`)}\n                  >\n                    <ListItemIcon disabled>\n                      <Contacts />\n                    </ListItemIcon>\n                    <ListItemText primary={translations.contacts} />\n                  </ListItem>\n                </Tooltip>\n\n                {userIsReviewer && (\n                  <Tooltip\n                    placement=\"right-start\"\n                    title={open ? \"\" : translations.review}\n                  >\n                    <ListItem\n                      button\n                      key=\"Review\"\n                      onClick={() => history.push(`${baseURL}/reviewer`)}\n                    >\n                      <ListItemIcon>\n                        <RateReview />\n                      </ListItemIcon>\n                      <ListItemText primary={translations.review} />\n                    </ListItem>\n                  </Tooltip>\n                )}\n                {userIsAdmin && (\n                  <Tooltip\n                    placement=\"right-start\"\n                    title={open ? \"\" : translations.admin}\n                  >\n                    <ListItem\n                      button\n                      key=\"Admin\"\n                      onClick={() => history.push(`${baseURL}/admin`)}\n                    >\n                      <ListItemIcon>\n                        <SupervisorAccount />\n                      </ListItemIcon>\n                      <ListItemText primary={translations.admin} />\n                    </ListItem>\n                  </Tooltip>\n                )}\n              </>\n            )}\n\n            {user && (\n              <Tooltip\n                placement=\"right-start\"\n                title={open ? \"\" : translations.logout}\n              >\n                <ListItem\n                  button\n                  key=\"Logout\"\n                  onClick={() =>\n                    auth.signOut().then(() => history.push(baseURL))\n                  }\n                >\n                  <ListItemIcon>\n                    <ExitToApp />\n                  </ListItemIcon>\n                  <ListItemText primary={translations.logout} />\n                </ListItem>\n              </Tooltip>\n            )}\n          </List>\n          <Divider />\n          {usingDevDatabase && <h5>Connected to development database</h5>}\n        </Drawer>\n      )}\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n}\n","export function deepCopy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\nexport function deepEquals(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n/*\nConvert firebase to javascript, mostly just used to get real array elements\n*/\nexport function firebaseToJSObject(input) {\n  if (!input) return null;\n  const out = deepCopy(input);\n  Object.keys(out).forEach((key) => {\n    if (typeof out[key] === \"object\" && Object.keys(out[key])[0] === \"0\") {\n      out[key] = Object.entries(out[key]).map(([, v]) => v);\n    }\n\n    //  special case\n    if (input.keywords)\n      out.keywords = {\n        en: Object.values(input.keywords.en || {}),\n        fr: Object.values(input.keywords.fr || {}),\n      };\n  });\n  if (out.contacts) {\n    Object.values(out.contacts).forEach((contact) => {\n      if (contact.role) {\n        // eslint-disable-next-line no-param-reassign\n        contact.role = Object.values(contact.role);\n      }\n    });\n  }\n\n  return out;\n}\n\nconst replacer = (key, value) => {\n  if (typeof value === \"string\") {\n    return value.trim();\n  }\n  return value;\n};\n\n// used to trim all extra whitespace from strings in the record\nexport const trimStringsInObject = (obj) =>\n  JSON.parse(JSON.stringify(obj, replacer));\n\nexport function getRecordFilename(record) {\n  return `${record.title[record.language].slice(\n    0,\n    30\n  )}_${record.identifier.slice(0, 5)}`\n    .trim()\n    .toLowerCase()\n    .replace(/[^a-zA-Z0-9]/g, \"_\");\n}\nexport const unique = (arr) => [...new Set(arr)];\n","import { v4 as uuidv4 } from \"uuid\";\n\nimport { deepCopy } from \"./misc\";\n\nconst blankRecord = {\n  title: { en: \"\", fr: \"\" },\n  abstract: { en: \"\", fr: \"\" },\n  keywords: { en: [], fr: [] },\n  eov: [],\n  progress: \"\",\n  distribution: [],\n  dateStart: null,\n  dateEnd: null,\n  map: { north: \"\", south: \"\", east: \"\", west: \"\", polygon: \"\" },\n  verticalExtentMin: \"\",\n  verticalExtentMax: \"\",\n  datePublished: null,\n  dateRevised: null,\n  edition: \"\",\n  recordID: \"\",\n  instruments: [],\n  platform: \"\",\n  platformID: \"\",\n  platformDescription: \"\",\n  language: \"\",\n  license: \"\",\n  contacts: [],\n  status: \"\",\n  comment: \"\",\n  limitations: \"\",\n  lastEditedBy: {},\n  category: \"\",\n  verticalExtentDirection: \"\",\n  datasetIdentifier: \"\",\n  doiCreationStatus: \"\",\n  noPlatform: false,\n  filename: \"\",\n  organization: \"\",\n  timeFirstPublished: \"\",\n};\n\nfunction getBlankRecord() {\n  const record = deepCopy(blankRecord);\n  record.identifier = uuidv4();\n  record.created = new Date().toISOString();\n  return record;\n}\n\nconst blankContact = {\n  role: [],\n  orgName: \"\",\n  orgEmail: \"\",\n  orgURL: \"\",\n  orgAdress: \"\",\n  orgCity: \"\",\n  orgCountry: \"\",\n  orgRor: \"\",\n  indPosition: \"\",\n  indEmail: \"\",\n  indOrcid: \"\",\n  givenNames: \"\",\n  lastName: \"\",\n  inCitation: true,\n};\n\nfunction getBlankContact() {\n  const contact = deepCopy(blankContact);\n  return contact;\n}\n\nexport { getBlankRecord, getBlankContact };\n","import { v4 as uuidv4 } from \"uuid\";\nimport firebase from \"../firebase\";\n\nimport { getBlankRecord, getBlankContact } from \"./blankRecord\";\nimport { firebaseToJSObject, getRecordFilename, deepCopy } from \"./misc\";\n\nexport async function cloneRecord(\n  recordID,\n  sourceUserID,\n  destinationUserID,\n  region\n) {\n  const sourceUserRecordsRef = firebase\n    .database()\n    .ref(region)\n    .child(\"users\")\n    .child(sourceUserID)\n    .child(\"records\");\n\n  const record = (\n    await sourceUserRecordsRef.child(recordID).once(\"value\")\n  ).val();\n\n  // reset record details\n  record.recordID = \"\";\n  record.status = \"\";\n  record.lastEditedBy = {};\n  record.created = new Date().toISOString();\n  record.filename = \"\";\n  record.timeFirstPublished = \"\";\n\n  if (record.title.en) record.title.en = `${record.title.en} (Copy)`;\n  if (record.title.fr) record.title.fr = `${record.title.fr} (Copte)`;\n  record.identifier = uuidv4();\n  record.created = new Date().toISOString();\n\n  const destinationUserRecordsRef = firebase\n    .database()\n    .ref(region)\n    .child(\"users\")\n    .child(destinationUserID)\n    .child(\"records\");\n\n  destinationUserRecordsRef.push(record);\n}\nexport function standardizeContact(contact) {\n  return {\n    ...getBlankContact(),\n    ...contact,\n  };\n}\n\n// fills in missing fields on older records\nexport function standardizeRecord(record, user, userID, recordID) {\n  const updatedRecord = {\n    ...getBlankRecord(),\n    ...record,\n  };\n  if (recordID) updatedRecord.recordID = recordID;\n  if (user && userID) {\n    updatedRecord.userinfo = { ...user?.userinfo, userID };\n  }\n\n  updatedRecord.contacts = updatedRecord.contacts.map(standardizeContact);\n  return updatedRecord;\n}\n\nexport function loadRegionRecords(regionRecords, statusFilter) {\n  const regionUsers = regionRecords.toJSON();\n  const records = [];\n\n  Object.entries(regionUsers).forEach(([userID, user]) => {\n    if (user.records) {\n      Object.entries(user.records).forEach(([key, record]) => {\n        if (statusFilter.includes(record.status))\n          records.push(\n            standardizeRecord(firebaseToJSObject(record), user, userID, key)\n          );\n      });\n    }\n  });\n\n  return records;\n}\n\nexport async function submitRecord(region, userID, key, status, record) {\n  const recordRef = firebase\n    .database()\n    .ref(region)\n    .child(\"users\")\n    .child(userID)\n    .child(\"records\")\n    .child(key);\n\n  await recordRef.child(\"status\").set(status);\n  if (status === \"published\")\n    await recordRef.child(\"timeFirstPublished\").set(new Date().toISOString());\n\n  if (record && !record.filename) {\n    const filename = getRecordFilename(record);\n    await recordRef.child(\"filename\").set(filename);\n  }\n}\n\nexport function deleteRecord(region, userID, key) {\n  return (\n    firebase\n      .database()\n      .ref(region)\n      .child(\"users\")\n      // this can be any user id\n      .child(userID)\n      .child(\"records\")\n      .child(key)\n      .remove()\n  );\n}\n\nexport async function transferRecord(\n  transferEmail,\n  recordID,\n  sourceUserID,\n  region\n) {\n  const regionUsersRef = firebase.database().ref(region).child(\"users\");\n  const regionUsers = (await regionUsersRef.once(\"value\")).val();\n\n  // get mapping like [[\"sdfssf32fwwfe\",\"sdf@sdef.ca\"]]\n  const userIDToEmailMapping = Object.entries(\n    regionUsers\n  ).map(([userID, userData]) => [userID, userData?.userinfo?.email]);\n\n  const userMatch = userIDToEmailMapping.find(\n    ([, email]) =>\n      email.toLowerCase().trim() === transferEmail.toLowerCase().trim()\n  );\n  if (userMatch) {\n    const [matchingUserID] = userMatch;\n\n    const recordRef = regionUsersRef\n      .child(sourceUserID)\n      .child(\"records\")\n      .child(recordID);\n\n    const record = (await recordRef.once(\"value\")).val();\n\n    const newRecordRef = await regionUsersRef\n      .child(matchingUserID)\n      .child(\"records\")\n      .push(record);\n    const newRecordID = newRecordRef.key;\n\n    record.recordID = newRecordID;\n    newRecordRef.update(record);\n    if (newRecordID) {\n      await recordRef.remove();\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function returnRecordToDraft(region, userID, key) {\n  return firebase\n    .database()\n    .ref(region)\n    .child(\"users\")\n    .child(userID)\n    .child(\"records\")\n    .child(key)\n    .child(\"status\")\n    .set(\"\");\n}\nexport async function getRegionProjects(region) {\n  const projects = Object.values(\n    (\n      await firebase.database().ref(region).child(\"projects\").once(\"value\")\n    ).toJSON() || {}\n  );\n  return projects;\n}\n\n// runs firebaseToJSObject on each child object\nexport const multipleFirebaseToJSObject = (multiple) => {\n  return Object.entries(multiple || {}).reduce((acc, [key, record]) => {\n    acc[key] = standardizeRecord(firebaseToJSObject(deepCopy(record)));\n    return acc;\n  }, {});\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal({\n  open,\n  onClose,\n  onAccept,\n  modalQuestion,\n}) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        onKeyPress={(e) => {\n          if (e.key === \"y\") {\n            onClose();\n            onAccept();\n          }\n        }}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">\n            {modalQuestion || (\n              <I18n>\n                <En>Are you sure?</En>\n                <Fr>Vous êtes sûr ?</Fr>\n              </I18n>\n            )}\n          </h2>\n          <button\n            type=\"button\"\n            onClick={() => {\n              onClose();\n              onAccept();\n            }}\n          >\n            <I18n>\n              <En>Yes</En>\n              <Fr>Oui</Fr>\n            </I18n>\n          </button>\n          <button type=\"button\" onClick={onClose}>\n            <I18n>\n              <En>No</En>\n              <Fr>Non</Fr>\n            </I18n>\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Cite from \"citation-js\";\n\nexport function generateCitation(record, language, format) {\n  const {\n    title,\n    datasetIdentifier = \"\",\n    created,\n    contacts = [],\n    datePublished,\n  } = record;\n\n  const publishers = contacts\n    .filter(\n      (contact) =>\n        // citation-js crashes sometimes with single letter input for a name\n        contact.inCitation && contact.role.includes(\"publisher\")\n    )\n    .map((contact) => contact.orgName);\n\n  const cslJSON = [\n    {\n      title: title[language],\n\n      author: contacts\n        // if only publisher is checked, it just appears in publisher section\n        .filter(\n          (contact) =>\n            !(contact.role.includes(\"publisher\") && contact.role.length === 1)\n        )\n        .filter(\n          (contact) =>\n            // citation-js crashes sometimes with single letter input for a name\n            contact.inCitation &&\n            ((contact.givenNames?.length > 1 && contact.lastName?.length > 1) ||\n              contact.orgName?.length > 1)\n        )\n\n        .map((contact) => {\n          if (contact.givenNames?.length > 1 && contact.lastName?.length > 1)\n            return {\n              given: contact.givenNames,\n              family: contact.lastName,\n            };\n          // seems that only individuals gets cited? Wasnt sure how to get organization name in there\n          return { family: contact.orgName };\n        }),\n      issued: { \"date-parts\": [[datePublished || created]] },\n      publisher: publishers.join(\", \"),\n      DOI: datasetIdentifier.replace(/https?:\\/\\/doi\\.org\\//, \"\"),\n      version: `v${record.edition}`,\n    },\n  ];\n\n  try {\n    const data = Cite(cslJSON);\n\n    const res = data.format(\"bibliography\", {\n      format,\n      template: \"apa\",\n      lang: \"en-US\",\n    });\n    return res;\n  } catch (e) {\n    // This is needed because sometimes partly filled names, eg \"Ma\" cause it to crash\n    return \"\";\n  }\n}\nexport function ApaPreview({ record, language }) {\n  const citation = generateCitation(record, language, \"html\");\n\n  return (\n    <div>\n      <div\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: citation }}\n        style={{ padding: \"5px\" }}\n      />\n    </div>\n  );\n}\n","import templatePath from \"./emlTemplate.j2\";\nimport { generateCitation } from \"../components/FormComponents/ApaPreview\";\n\nconst nunjucks = require(\"nunjucks\");\n\n// get the full goos eov name here\n// function translateEOV() {}\nfunction arrayOverlap(a, b) {\n  return a.some((e) => b.includes(e));\n}\n\nfunction translateRole(isoRoles) {\n  console.log(isoRoles);\n  return isoRoles;\n}\nconst roleMapping = {\n  creator: [\"author\", \"originator\"],\n  metadataProvider: [\"distributor\", \"custodian\"],\n  associatedParty: [\"principalInvestigator\", \"editor\"],\n};\nasync function recordToEML(record) {\n  nunjucks.configure({ autoescape: true, web: true });\n\n  const templateXML = await fetch(templatePath).then((t) => t.text());\n\n  return nunjucks.renderString(templateXML, {\n    record,\n    translateRole,\n    arrayOverlap,\n    citation: generateCitation(record, record.language, \"text\"),\n    roleMapping,\n    roleMappingKeys: Object.keys(roleMapping),\n  });\n}\n\nexport default recordToEML;\n","const licenses = {\n    \"CC-BY-4.0\": {\n        \"title\": {\n            \"en\": \"Creative Commons Attribution 4.0 Attribution\"\n        },\n        \"url\": \"https://creativecommons.org/licenses/by/4.0\",\n        \"code\": \"CC-BY-4.0\"\n    },\n    \"CC-BY-SA-4.0\": {\n        \"title\": {\n            \"en\": \"Creative Commons Attribution 4.0 Attribution-ShareAlike\"\n        },\n        \"url\": \"https://creativecommons.org/licenses/by-sa/4.0/\",\n        \"code\": \"CC-BY-SA-4.0\"\n    },\n    \"CC-BY-ND-4.0\": {\n        \"title\": {\n            \"en\": \"Creative Commons Attribution 4.0 Attribution-NoDerivs \"\n        },\n        \"url\": \"https://creativecommons.org/licenses/by-nd/4.0/\",\n        \"code\": \"CC-BY-ND-4.0\"\n    },\n    \"CC-BY-NC-4.0\": {\n        \"title\": {\n            \"en\": \"Creative Commons Attribution 4.0 Attribution-NonCommercial  \"\n        },\n        \"url\": \"https://creativecommons.org/licenses/by-nc/4.0/\",\n        \"code\": \"CC-BY-NC-4.0\"\n    },\n    \"CC-BY-NC-SA-4.0\": {\n        \"title\": {\n            \"en\": \"Creative Commons Attribution 4.0 Attribution-NonCommercial-ShareAlike \"\n        },\n        \"url\": \"https://creativecommons.org/licenses/by-nc-sa/4.0/\",\n        \"code\": \"CC-BY-NC-SA-4.0\"\n    },\n    \"CC-BY-NC-ND-4.0\": {\n        \"title\": {\n            \"en\": \"Creative Commons Attribution 4.0 Attribution-NonCommercial-NoDerivs\"\n        },\n        \"url\": \"https://creativecommons.org/licenses/by-nc-nd/4.0/\",\n        \"code\": \"CC-BY-NC-ND-4.0\"\n    },\n    \"CC0\": {\n        \"title\": {\n            \"en\": \"Creative Commons 0\"\n        },\n        \"url\": \"https://creativecommons.org/share-your-work/public-domain/cc0\",\n        \"code\": \"CC0\"\n    },\n    \"government-open-license-canada\": {\n        \"title\": {\n            \"en\": \"Open Government Licence - Canada\",\n            \"fr\": \"Licence du gouvernement ouvert – Canada \"\n        },\n        \"url\": \"https://open.canada.ca/en/open-government-licence-canada\",\n        \"code\": \"government-open-license-canada\"\n    },\n    \"government-open-license-nova-scotia\": {\n        \"title\": {\n            \"en\": \"Open Government Licence - Nova Scotia\"\n        },\n        \"url\": \"https://novascotia.ca/opendata/licence.asp\",\n        \"code\": \"government-open-license-nova-scotia\"\n    },\n    \"OGL-NB\": {\n        \"title\": {\n            \"en\": \"Open Government Licence – New Brunswick\"\n        },\n        \"url\": \"http://www.snb.ca/e/2000/data-E.html\",\n        \"code\": \"OGL-NB\"\n    },\n    \"OGL-BC\": {\n        \"title\": {\n            \"en\": \"Open Government Licence - British Columbia\"\n        },\n        \"url\": \"https://www2.gov.bc.ca/gov/content/data/open-data/open-government-licence-bc\",\n        \"code\": \"OGL-BC\"\n    },\n    \"government-open-license-newfoundland\": {\n        \"title\": {\n            \"en\": \"Open Government Licence - Newfoundland and Labrador\"\n        },\n        \"url\": \"https://opendata.gov.nl.ca/public/opendata/page/?page-id=licence\",\n        \"code\": \"government-open-license-newfoundland\"\n    },\n    \"Apache-2.0\": {\n        \"title\": {\n            \"en\": \"Apache License, Version 2.0\"\n        },\n        \"url\": \"https://www.apache.org/licenses/LICENSE-2.0\",\n        \"code\": \"Apache-2.0\"\n    },\n    \"No License\": {\n        \"title\": {\n            \"en\": \"No License\",\n            \"fr\": \"Aucune licence\"\n        },\n        \"url\": \"https://choosealicense.com/no-permission/\",\n        \"code\": \"None\"\n    },\n    \"ca-eccc-odl\": {\n        \"title\": {\n            \"en\": \"Environment and Climate Change Canada Data Servers End-use Licence\",\n            \"fr\": \"Licence d’utilisation finale pour les serveurs de données d’Environnement et Changement climatique Canada\"\n        },\n        \"url\": \"https://eccc-msc.github.io/open-data/licence/readme_en/\",\n        \"code\": \"ca-eccc-odl\"\n    }\n};\n\nexport default licenses;\n","import xmlescape from \"xml-escape\";\nimport licenses from \"./licenses\";\nimport { getRecordFilename } from \"./misc\";\nimport { generateCitation } from \"../components/FormComponents/ApaPreview\";\n\nfunction isoStrToDate(isoStr) {\n  return isoStr.slice(0, 10);\n}\nfunction arrayOverlap(a, b) {\n  return a.some((e) => b.includes(e));\n}\n\nfunction recordToERDDAP(record) {\n  const { contacts, language: lang } = record;\n\n  // if there are multiple publishers or creators, this takes first one\n  const publisher = contacts.find((c) =>\n    arrayOverlap(c.role, [\"publisher\", \"custodian\"])\n  );\n  const creator = contacts.find((c) =>\n    arrayOverlap(c.role, [\"orginator\", \"owner\"])\n  );\n\n  const attributes = {\n    citation: generateCitation(record, record.language, \"text\"),\n    creator_email: creator?.indEmail,\n    creator_name: creator?.indName,\n    creator_url: creator?.orgURL,\n    creator_institution: creator?.orgName,\n    // creator_type:\n\n    publisher_email: publisher?.indEmail,\n    publisher_institution: publisher?.orgName,\n    publisher_url: publisher?.orgURL,\n    publisher_name: publisher?.indName,\n    // publisher_type:\n\n    date_created: isoStrToDate(record.created),\n    // date_issued:\n    // date_metadata_modified:\n\n    geospatial_lat_max: record.map?.north,\n    geospatial_lat_min: record.map?.south,\n    geospatial_lon_max: record.map?.east,\n    geospatial_lon_min: record.map?.west,\n    geospatial_vertical_min: record.verticalExtentMin,\n    geospatial_vertical_max: record.verticalExtentMax,\n    institution: contacts\n      .map((c) => c.orgName)\n      .filter((e) => e)\n      .join(),\n    project: record.projects?.join(),\n    product_version: record.edition,\n    license: licenses[record.license]?.url || record.license,\n    instrument: record.instruments\n      .map((i) => [i.manufacturer, i.id, i.version].join(\" - \"))\n      .filter((e) => e)\n      .join(),\n    id: record.identifier,\n    naming_authority: \"ca.cioos\",\n    references: `https://doi.org/${record.datasetIdentifier}`,\n    keywords: record.keywords[lang],\n    platform: record.platform,\n    platform_vocabulary:\n      record.platform && \"http://vocab.nerc.ac.uk/collection/L06/current/\",\n    summary: record.abstract[lang],\n    title: record.title[lang],\n  };\n  const attributesStr = Object.entries(attributes)\n    .filter(([, v]) => v)\n    .map(([k, v]) => `  <att name=\"${k}\">${xmlescape(String(v))}</att>`)\n    .join(\"\\n\");\n\n  return `\n<iso19115File>/your/waf/${\n    record.filename || getRecordFilename(record)\n  }.xml</iso19115File>\n<addAttributes>\n${attributesStr}\n</addAttributes>`;\n}\n\nexport default recordToERDDAP;\n","import licenses from \"./licenses\";\nimport regions from \"../regions\";\n\n\nfunction recordToDataCite(metadata, language, region) {\n\n    // Reduce contacts to a list of creators\n    const creators = metadata.contacts ? metadata.contacts.reduce((creatorList, contact) => {\n      let creator;\n  \n      if (contact.inCitation && !contact.role.includes(\"publisher\")) {\n        const {\n          givenNames,\n          lastName,\n          orgName,\n          indOrcid,\n          orgRor,\n        } = contact;\n        \n        // Create an individual creator object with names\n        if (givenNames) {\n          creator = {\n            name: `${lastName}, ${givenNames}`,\n            nameType: \"Personal\",\n            givenName: givenNames,\n            familyName: lastName,\n            // Add affiliation for individual if organization details are provided\n            affiliation: orgName ? [{\n              name: orgName,\n              schemeUri: \"https://ror.org\",\n              affiliationIdentifier: orgRor,\n              affiliationIdentifierScheme: \"ROR\",\n            }] : [],\n          };\n\n          // Add nameIdentifiers for individual with an ORCID\n          if (indOrcid) {\n            creator.nameIdentifiers = [\n                {\n                  schemeUri: \"https://orcid.org\",\n                  nameIdentifier: indOrcid,\n                  nameIdentifierScheme: \"ORCID\",\n                },\n              ];\n            }\n          }\n        }\n      \n      // Add the creator to the list if it exists\n      if (creator) {\n        creatorList.push(creator);\n      }\n  \n      return creatorList;\n    }, []) : [];\n  \n    // Find the publisher contact\n    const publisher = metadata.contacts.find((contact) =>\n      contact.role.includes(\"publisher\")\n    );\n  \n    // Get the publication year from the datePublished field\n    let publicationYear;\n    if (metadata.datePublished) {\n      const year = parseInt(metadata.datePublished.slice(0, 4), 10)\n      publicationYear = Number.isNaN(year) ? undefined : year;\n    } else {\n      publicationYear = undefined;\n    }\n  \n    // Create the DataCite subjects from the keywords field\n    const subjects = metadata.keywords\n      ? Object.entries(metadata.keywords).flatMap(([lang, keywords]) =>\n          keywords.map((keyword) => ({\n            lang,\n            subject: keyword,\n          }))\n        )\n      : undefined;\n  \n    // Create the DataCite dates from the date fields\n    const dates = [];\n  \n    if (metadata.dateStart) {\n      dates.push({\n        date: metadata.dateStart,\n        dateType: \"Collected\",\n        dateInformation: \"Start date when data was first collected\",\n      });\n    }\n  \n    if (metadata.dateEnd) {\n      dates.push({\n        date: metadata.dateEnd,\n        dateType: \"Collected\",\n        dateInformation: \"End date when data was last collected\",\n      });\n    }\n  \n    if (metadata.dateRevised) {\n      dates.push({\n        date: metadata.dateRevised,\n        dateType: \"Updated\",\n        dateInformation: \"Date when the data was last revised\",\n      });\n    }\n  \n    // Look up the license information\n    const licenseInfo = licenses[metadata.license];\n  \n    // Create the DataCite rightsList object\n    const rightsList = licenseInfo && licenseInfo.title ? [\n      {\n        rights: licenseInfo.title.en,\n        rightsUri: licenseInfo.url,\n        schemeUri: \"https://spdx.org/licenses/\",\n        rightsIdentifier: licenseInfo.code,\n        rightsIdentifierScheme: \"SPDX\",\n      },\n    ] : [];\n  \n    // Extract the values from the map field\n    let { east, north, south, west } = metadata.map ? metadata.map : {};\n\n    east = Number.isNaN(east) ? undefined : east;\n    north = Number.isNaN(north) ? undefined : north;\n    south = Number.isNaN(south) ? undefined : south;\n    west = Number.isNaN(west) ? undefined : west;   \n  \n    // Create the DataCite geoLocations object\n    const geoLocations = metadata.map && east && north && south && west ? [\n      {\n        geoLocationBox: {\n          eastBoundLongitude: parseFloat(east),\n          northBoundLatitude: parseFloat(north),\n          southBoundLatitude: parseFloat(south),\n          westBoundLongitude: parseFloat(west),\n        },\n      },\n    ] : [];\n  \n    // Create the mapped DataCite object with the extracted information\n    const mappedDataCiteObject = {\n      data: {\n        type: \"dois\",\n        attributes: {\n          prefix: regions[region].datacitePrefix,\n          creators,\n          // Initialize an empty array for titles\n          titles: [],\n        },\n      },\n    };\n\n    // Add English title if it exists\n    if (metadata.title.en) {\n      mappedDataCiteObject.data.attributes.titles.push({\n        lang: \"en\",\n        title: metadata.title.en,\n      });\n    }\n\n    // Add French title if it exists\n    if (metadata.title.fr) {\n      mappedDataCiteObject.data.attributes.titles.push({\n        lang: \"fr\",\n        title: metadata.title.fr,\n      });\n    }\n\n    // Add publisher if it exists\n    if (publisher) {\n      mappedDataCiteObject.data.attributes.publisher = \n        publisher.orgName || publisher.indName;\n    }\n\n    // Add publication year if it exists\n    if (metadata.datePublished) {\n      mappedDataCiteObject.data.attributes.publicationYear = publicationYear;\n    }\n\n    // Add subjects if they exist\n    if (metadata.keywords) {\n      mappedDataCiteObject.data.attributes.subjects = subjects;\n    }\n\n    // Add dates if they exist\n    if (dates.length > 0) {\n      mappedDataCiteObject.data.attributes.dates = dates;\n    }\n\n    // Add rightsList\n    mappedDataCiteObject.data.attributes.rightsList = rightsList;\n\n    // Add descriptions from the abstract field\n    mappedDataCiteObject.data.attributes.descriptions = Object.entries(\n      metadata.abstract\n    ).map(([lang, description]) => ({\n      lang,\n      description,\n      descriptionType: \"Abstract\",\n    }));\n\n    // Add geolocations if they exist\n    if (metadata.map) {\n      mappedDataCiteObject.data.attributes.geoLocations = geoLocations;\n    }\n\n    // Auto-populate Datacite Resource type general  as 'dataset'\n    mappedDataCiteObject.data.attributes.types = {\n      resourceTypeGeneral: \"Dataset\",\n    };\n\n    // Generate URL element\n    mappedDataCiteObject.data.attributes.url = `${regions[region].catalogueURL[language]}dataset/ca-cioos_${metadata.identifier}`;\n\n    return mappedDataCiteObject;\n  }\n\n  export default recordToDataCite;","import validator from \"validator\";\n\nexport const validateEmail = (email) => !email || validator.isEmail(email);\nexport const validateURL = (url) => !url || validator.isURL(url);\n\n// See https://stackoverflow.com/a/48524047/7416701\nexport const doiRegexp = /^(https:\\/\\/doi.org\\/)?10\\.\\d{4,9}\\/[-._;()/:A-Z0-9]+$/i;\nfunction isValidHttpUrl(string) {\n  let url;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\nexport const validateDOI = (val) => !val || (doiRegexp.test(val) && isValidHttpUrl(val));\nconst validateLatitude = (num) => num >= -90 && num <= 90;\n\nconst deepCompare = (obj1, obj2) =>\n  JSON.parse(JSON.stringify(obj1) === JSON.stringify(obj2));\n\nconst validateLongitude = (num) => num >= -360 && num <= 360;\n\nconst polygonIsValid = (polygon) => {\n  // eg 48,-128 56,-133 56,-147 48,-128\n  const coordinates = polygon.split(\" \").map((c) => c.split(\",\"));\n  if (coordinates.length < 2) return false;\n  if (!deepCompare(coordinates[0], coordinates[coordinates.length - 1]))\n    return false;\n\n  return (\n    coordinates.filter(\n      ([lat, lon]) =>\n        validateLongitude(parseFloat(lon)) && validateLatitude(parseFloat(lat))\n    ).length === coordinates.length\n  );\n};\n\nconst contactIsFilled = (contact) =>\n  Boolean(\n    contact.role &&\n      contact.role.length &&\n      (contact.orgName || contact.givenNames || contact.lastName)\n  );\n\n// required fields and  a function to validate each\nconst validators = {\n  title: {\n    validation: (val) => val && val.en && val.fr,\n    tab: \"dataID\",\n    error: {\n      en: \"Missing title in French or English\",\n      fr: \"Titre manquant en français ou en anglais\",\n    },\n  },\n  abstract: {\n    validation: (val) => val && val.en && val.fr,\n    tab: \"dataID\",\n    error: {\n      en: \"Missing abstract in French or English\",\n      fr: \"Abrégé manquant en français ou en anglais\",\n    },\n  },\n  keywords: {\n    validation: (val) => val && (val.en.length || val.fr.length),\n    tab: \"dataID\",\n    error: {\n      en: \"At least one keyword is required\",\n      fr: \"Au moins un mot clé est requis\",\n    },\n  },\n  eov: {\n    validation: (val) => val && val.length,\n    tab: \"dataID\",\n    error: {\n      en: \"At least one EOV is required\",\n      fr: \"Au moins un variable essentielle océanique est requise\",\n    },\n  },\n  datasetIdentifier: {\n    validation: validateDOI,\n    optional: true,\n    tab: \"dataID\",\n    error: {\n      en: \"Invalid DOI\",\n      fr: \"DOI non valide\",\n    },\n  },\n  progress: {\n    tab: \"dataID\",\n    validation: (val) => val,\n    error: {\n      en: \"Please select a dataset status\",\n      fr: \"L'information spatiale est manquante\",\n    },\n  },\n  language: {\n    tab: \"dataID\",\n    validation: (val) => val,\n    error: {\n      en: \"Language field is missing\",\n      fr: \"Le champ de langue est vide\",\n    },\n  },\n  license: {\n    tab: \"dataID\",\n    validation: (val) => val,\n    error: {\n      en: \"Please select a license for the dataset\",\n      fr: \"Veuillez sélectionner une licence pour le jeu de données\",\n    },\n  },\n  map: {\n    error: {\n      en: \"Spatial information is missing\",\n      fr: \"L'information géographique est manquante\",\n    },\n    tab: \"spatial\",\n    validation: (val) => {\n      if (!val) return false;\n      const north = parseFloat(val.north);\n      const south = parseFloat(val.south);\n      const east = parseFloat(val.east);\n      const west = parseFloat(val.west);\n      const { polygon } = val;\n\n      return (\n        (north &&\n          south &&\n          east &&\n          west &&\n          north >= south &&\n          east >= west &&\n          validateLatitude(north) &&\n          validateLatitude(south) &&\n          validateLongitude(east) &&\n          validateLongitude(west)) ||\n        (polygon && polygonIsValid(polygon))\n      );\n    },\n  },\n\n  verticalExtentMin: {\n    tab: \"spatial\",\n\n    validation: (val) => val,\n    error: {\n      en: \"Missing Vertical Extent Min\",\n      fr: \"Étendue verticale manquante Min\",\n    },\n  },\n  verticalExtentMax: {\n    tab: \"spatial\",\n    validation: (val) => val,\n    error: {\n      en: \"Missing Vertical Extent Max\",\n      fr: \"Étendue verticale manquante Max\",\n    },\n  },\n  verticalExtentDirection: {\n    tab: \"spatial\",\n    validation: (val) => val,\n    error: {\n      en: \"Missing Vertical Extent Direction\",\n      fr: \"Direction de l'étendue verticale manquante\",\n    },\n  },\n  // at least one contact has to have a role and a org or individual name\n  // at least one contact has to appear in citation\n  contacts: {\n    tab: \"contacts\",\n    validation: (val) =>\n      val &&\n      // every contact must have a role and name\n      val.every(contactIsFilled) &&\n      val.every(\n        (contact) =>\n          validateEmail(contact.indEmail) &&\n          validateEmail(contact.orgEmail) &&\n          validateURL(contact.orgURL)\n      ) &&\n      val\n        .filter(contactIsFilled)\n        .find((contact) => contact.role.includes(\"custodian\")) &&\n      val\n        .filter(contactIsFilled)\n        .find((contact) => contact.role.includes(\"owner\")) &&\n      val.filter(contactIsFilled).find((contact) => contact.inCitation),\n    error: {\n      en:\n        \"Every contact must have at least one role checked, and  'Data contact' or 'Metadata contact' must be added to at least one contact. Email addresses must be in the form of user@example.com and URLs must be valid.  At least one contact must be selected to appear in the citation.\",\n      fr:\n        \"Assurez-vous que chaque contact a un rôle qui lui est attribué. Assurez-vous également d'avoir une personne ressource pour les métadonnées et un personne ressource pour les données. Les adresses e-mail doivent être sous la forme de user@example.com et les URL doivent être valides. Au moins un contact doit être sélectionné pour apparaître dans la citation\",\n    },\n  },\n  distribution: {\n    tab: \"resources\",\n    validation: (val) =>\n      Array.isArray(val) &&\n      val.filter((dist) => dist.name && dist.url && validator.isURL(dist.url))\n        .length,\n\n    error: {\n      en:\n        \"Must have at least one resource. If a URL is included it must be valid.\",\n      fr:\n        \"Doit avoir au moins une ressource. Vérifiez si votre URL est valide.\",\n    },\n  },\n  platformID: {\n    tab: \"platform\",\n    validation: (val, record) => record.noPlatform || val,\n    error: {\n      en: \"Missing platform ID\",\n      fr: \"ID de la plateforme manquant\",\n    },\n  },\n  platform: {\n    tab: \"platform\",\n    validation: (val, record) => record.noPlatform || val,\n    error: {\n      en: \"Missing platform type\",\n      fr: \"Type de plateforme manquant\",\n    },\n  },\n  instruments: {\n    tab: \"platformInstruments\",\n    validation: (val) => val.every((instrument) => instrument.id),\n    error: {\n      en: \"Instrument ID is required\",\n      fr: \"L'identifiant de l'instrument est requis\",\n    },\n  },\n};\nexport const validateField = (record, fieldName) => {\n  const valueToValidate = record[fieldName];\n  // if no validator funciton exists, then it is not a required field\n  const validationFunction =\n    (validators[fieldName] && validators[fieldName].validation) || (() => true);\n\n  return validationFunction && validationFunction(valueToValidate, record);\n};\n\nexport const getErrorsByTab = (record) => {\n  const fields = Object.keys(validators);\n  const invalidFields = fields.filter((field) => !validateField(record, field));\n  const fieldErrorInfo = invalidFields.map((field) => {\n    const { error, tab } = validators[field];\n    return { error, tab };\n  });\n\n  return fieldErrorInfo.reduce((acc, { error, tab }) => {\n    if (!acc[tab]) acc[tab] = [];\n    acc[tab].push(error);\n    return acc;\n  }, {});\n};\n\nexport const percentValid = (record) => {\n  const fields = Object.keys(validators);\n  const numTotalRequired = fields.filter((field) => !validators[field].optional)\n    .length;\n\n  const validFieldsRequired = fields.filter(\n    (field) => !validators[field].optional && validateField(record, field)\n  );\n  const numValidRequired = validFieldsRequired.length;\n\n  return numValidRequired / numTotalRequired;\n};\nexport const recordIsValid = (record) => {\n  const optionalFieldsAreValid = Object.entries(validators)\n    .filter(([, validatorObject]) => validatorObject.optional)\n    .every(([field]) => validateField(record, field));\n\n  return percentValid(record) === 1 && optionalFieldsAreValid;\n};\n","import React from \"react\";\nimport TimeAgo from \"javascript-time-ago\";\nimport { useParams } from \"react-router-dom\";\n\nimport en from \"javascript-time-ago/locale/en\";\nimport fr from \"javascript-time-ago/locale/fr\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nconst LastEdited = ({ dateStr }) => {\n  const { language } = useParams();\n\n  if (!dateStr) return null;\n\n  let timeAgo;\n\n  if (language === \"en\") {\n    TimeAgo.addLocale(en);\n    timeAgo = new TimeAgo(\"en-US\");\n  } else {\n    TimeAgo.addLocale(fr);\n    timeAgo = new TimeAgo(\"fr-FR\");\n  }\n\n  return (\n    <span>\n      <I18n>\n        <En>Last edited</En>\n        <Fr>Dernière modification</Fr>\n      </I18n>{\" \"}\n      {timeAgo.format(new Date(dateStr))}\n      {\". \"}\n    </span>\n  );\n};\n\nexport default LastEdited;\n","import React from \"react\";\nimport { Description, AssignmentTurnedIn, Drafts } from \"@material-ui/icons\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { I18n } from \"../I18n\";\n\nconst RecordStatusIcon = ({ status }) => {\n  if (status === \"published\")\n    return (\n      <Tooltip title={<I18n en=\"Published\" fr=\"Publié\" />}>\n        <AssignmentTurnedIn color=\"primary\" />\n      </Tooltip>\n    );\n  if (status === \"submitted\")\n    return (\n      <Tooltip title={<I18n en=\"Submitted\" fr=\"Soumis\" />}>\n        <Description color=\"secondary\" />\n      </Tooltip>\n    );\n  if (status === \"\")\n    return (\n      <Tooltip title={<I18n en=\"Draft\" fr=\"Brouillon\" />}>\n        <Drafts color=\"action\" />\n      </Tooltip>\n    );\n  return null;\n};\nexport default RecordStatusIcon;\n","import React, { useContext, useState } from \"react\";\nimport FileSaver from \"file-saver\";\n\nimport {\n  ListItem,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n  Tooltip,\n  ListItemSecondaryAction,\n  IconButton,\n  CircularProgress,\n  MenuItem,\n  Menu,\n} from \"@material-ui/core\";\nimport {\n  FileCopy,\n  Delete,\n  Publish,\n  Eject,\n  Visibility,\n  CloudDownload,\n  TransferWithinAStation,\n  OpenInNew,\n  Edit,\n} from \"@material-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport { getRecordFilename } from \"../../utils/misc\";\nimport recordToEML from \"../../utils/recordToEML\";\nimport recordToERDDAP from \"../../utils/recordToERDDAP\";\nimport recordToDataCite from \"../../utils/recordToDataCite\";\nimport { recordIsValid, percentValid } from \"../../utils/validate\";\nimport { I18n, En, Fr } from \"../I18n\";\nimport LastEdited from \"./LastEdited\";\nimport RecordStatusIcon from \"./RecordStatusIcon\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport regions from \"../../regions\";\n\nconst MetadataRecordListItem = ({\n  record,\n  onViewEditClick,\n  onDeleteClick,\n  onCloneClick,\n  onSubmitClick,\n  showAuthor,\n  showDeleteAction,\n  showSubmitAction,\n  showPublishAction,\n  showUnPublishAction,\n  showUnSubmitAction,\n  showViewAction,\n  showEditAction,\n  showPercentComplete,\n  showCloneAction,\n  onUnSubmitClick,\n  onUnPublishClick,\n  showDownloadButton = true,\n  showTransferButton,\n  onTransferClick,\n}) => {\n  const { language, region } = useParams();\n  const showCatalogueURL = record.status === \"published\";\n  const { downloadRecord } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState({ downloadXML: false });\n  const catalogueURL = `${regions[region].catalogueURL[language]}dataset/ca-cioos_${record.identifier}`;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  if (!record.title) {\n    // eslint-disable-next-line no-console\n    console.log(record);\n    return <></>;\n  }\n\n  const isValidRecord =\n    (showSubmitAction || showDownloadButton) && recordIsValid(record);\n\n  const percentValidInt =\n    showPercentComplete && Math.round(percentValid(record) * 100);\n  async function handleDownloadRecord(fileType) {\n    // filetype is\n    const extensions = {\n      erddap: \"_erddap.txt\",\n      xml: \".xml\",\n      yaml: \".yaml\",\n      eml: \"_eml.xml\",\n      json: \".json\",\n    };\n    setIsLoading({ downloadXML: true });\n\n    try {\n      let data;\n      if (fileType === \"eml\") {\n        const emlStr = await recordToEML(record);\n        data = [emlStr];\n      } else if (fileType === \"erddap\") {\n        data = [recordToERDDAP(record)];\n      } else if (fileType === \"json\") {\n        data = [JSON.stringify(recordToDataCite(record, language, region), null, 2)];\n      } else {\n        const res = await downloadRecord({ record, fileType });\n        data = Object.values(res.data.message);\n      }\n      const mimeTypes = {\n        xml: \"application/xml\",\n        yaml: \"application/x-yaml\",\n        eml: \"application/xml\",\n        erddap: \"application/xml\",\n        json: \"application/json\",\n      };\n      const blob = new Blob(data, {\n        type: `${mimeTypes[fileType]};charset=utf-8`,\n      });\n\n      FileSaver.saveAs(\n        blob,\n        `${getRecordFilename(record)}${extensions[fileType]}`\n      );\n      setIsLoading({ downloadXML: false });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n      setIsLoading({ downloadXML: false });\n    }\n  }\n\n  return (\n    <ListItem key={record.recordID}>\n      <ListItemAvatar>\n        <IconButton onClick={onViewEditClick}>\n          <Avatar>\n            <RecordStatusIcon status={record.status} />\n          </Avatar>\n        </IconButton>\n      </ListItemAvatar>\n      <ListItemText\n        primary={<div style={{ width: \"80%\" }}>{record.title?.[language]}</div>}\n        secondaryTypographyProps={{ variant: \"body2\" }}\n        secondary={\n          <span>\n            {showAuthor && (\n              <span>\n                <I18n en=\"Author\" fr=\"Auteur\" />: {record.userinfo?.displayName}{\" \"}\n                {record.userinfo?.email}\n              </span>\n            )}\n\n            <span style={{ display: \"block\" }}>\n              <LastEdited dateStr={record.created} />\n\n              {showPercentComplete && (\n                <I18n>\n                  <En>{percentValidInt}% complete</En>\n                  <Fr>{percentValidInt}% Achevée</Fr>\n                </I18n>\n              )}\n            </span>\n\n            <span style={{ display: \"block\" }}>UUID: {record.identifier}</span>\n          </span>\n        }\n      />\n      <ListItemSecondaryAction>\n        {showViewAction && (\n          <Tooltip title={<I18n en=\"View\" fr=\"Vue\" />}>\n            <span>\n              <IconButton\n                onClick={onViewEditClick}\n                edge=\"end\"\n                aria-label=\"view record\"\n              >\n                <Visibility />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n        {showEditAction && (\n          <Tooltip\n            title={<I18n en=\"Edit record\" fr=\"Éditer un enregistrement\" />}\n          >\n            <span>\n              <IconButton\n                onClick={onViewEditClick}\n                edge=\"end\"\n                aria-label=\"Edit record\"\n              >\n                <Edit />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        {showDeleteAction && (\n          <Tooltip title={<I18n en=\"Delete\" fr=\"Supprimer\" />}>\n            <span>\n              <IconButton\n                onClick={onDeleteClick}\n                edge=\"end\"\n                aria-label=\"delete\"\n              >\n                <Delete />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n        {showPublishAction && (\n          <Tooltip title={<I18n en=\"Publish\" fr=\"Publier\" />}>\n            <span>\n              <IconButton\n                onClick={onSubmitClick}\n                edge=\"end\"\n                aria-label=\"delete\"\n              >\n                <Publish />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n        {showSubmitAction &&\n          (record.status === \"\" ? (\n            <Tooltip\n              title={\n                <>\n                  {isValidRecord ? (\n                    <I18n en=\"Submit for review\" fr=\"Soumettre pour examen\" />\n                  ) : (\n                    <I18n\n                      en=\"Can't submit incomplete or invalid record\"\n                      fr=\"Impossible de soumettre un enregistrement incomplet ou non valide\"\n                    />\n                  )}\n                </>\n              }\n            >\n              <span>\n                <IconButton\n                  onClick={onSubmitClick}\n                  edge=\"end\"\n                  aria-label=\"submit\"\n                  disabled={!isValidRecord}\n                >\n                  <Publish />\n                </IconButton>\n              </span>\n            </Tooltip>\n          ) : (\n            <Tooltip\n              title={\n                <I18n\n                  en=\"Return record to draft for editing\"\n                  fr=\"Retourner l'enregistrement au brouillon pour modification\"\n                />\n              }\n            >\n              <span>\n                <IconButton\n                  onClick={onSubmitClick}\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                >\n                  <Eject />\n                </IconButton>\n              </span>\n            </Tooltip>\n          ))}\n        {showUnPublishAction && (\n          <Tooltip title={<I18n en=\"Un-publish\" fr=\"De-Publier\" />}>\n            <span>\n              <IconButton\n                onClick={onUnPublishClick}\n                edge=\"end\"\n                aria-label=\"delete\"\n              >\n                <Eject />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n        {showCloneAction && (\n          <Tooltip title={<I18n en=\"Clone\" fr=\"Cloner\" />}>\n            <span>\n              <IconButton onClick={onCloneClick} edge=\"end\" aria-label=\"clone\">\n                <FileCopy />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n        {showUnSubmitAction && (\n          <Tooltip\n            title={<I18n en=\"Return to draft\" fr=\"Revenir au brouillon\" />}\n          >\n            <span>\n              <IconButton\n                onClick={onUnSubmitClick}\n                edge=\"end\"\n                aria-label=\"delete\"\n              >\n                <Eject />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        {showDownloadButton && (\n          <Tooltip title={<I18n en=\"Download\" fr=\"Download\" />}>\n            <span>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={open ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                disabled={!isValidRecord}\n              >\n                {isLoading.downloadXML ? (\n                  <CircularProgress />\n                ) : (\n                  <CloudDownload />\n                )}\n              </IconButton>\n              <Menu\n                id=\"long-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"long-button\",\n                }}\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                PaperProps={{\n                  style: {\n                    // maxHeight: ITEM_HEIGHT * 4.5,\n                    width: \"20ch\",\n                  },\n                }}\n              >\n                <MenuItem\n                  key=\"xml\"\n                  onClick={() => {\n                    handleDownloadRecord(\"xml\");\n                    handleClose();\n                  }}\n                >\n                  ISO 19115 XML\n                </MenuItem>\n                <MenuItem\n                  key=\"yaml\"\n                  onClick={() => {\n                    handleDownloadRecord(\"yaml\");\n                    handleClose();\n                  }}\n                >\n                  YAML\n                </MenuItem>\n                <MenuItem\n                  key=\"erddap\"\n                  onClick={() => {\n                    handleDownloadRecord(\"erddap\");\n                    handleClose();\n                  }}\n                >\n                  ERDDAP snippet\n                </MenuItem>\n                <MenuItem\n                  key=\"eml\"\n                  onClick={() => {\n                    handleDownloadRecord(\"eml\");\n                    handleClose();\n                  }}\n                >\n                  EML for OBIS IPT\n                </MenuItem>\n                <MenuItem\n                  key=\"json\"\n                  onClick={() => {\n                    handleDownloadRecord(\"json\");\n                    handleClose();\n                  }}\n                >\n                  DATACITE JSON\n                </MenuItem>\n              </Menu>\n            </span>\n          </Tooltip>\n        )}\n        {showTransferButton && (\n          <Tooltip\n            title={\n              <I18n en=\"Transfer to user\" fr=\"Transfert vers l'utilisateur\" />\n            }\n          >\n            <span>\n              <IconButton\n                onClick={onTransferClick}\n                edge=\"end\"\n                aria-label=\"transfer\"\n              >\n                <TransferWithinAStation />\n              </IconButton>\n            </span>\n          </Tooltip>\n        )}\n\n        <Tooltip\n          title={\n            <I18n\n              en=\"Open catalogue entry in new window\"\n              fr=\"Ouvrir l'entrée dans le catalogue dans une nouvelle fenêtre\"\n            />\n          }\n        >\n          <span>\n            <IconButton\n              disabled={!showCatalogueURL}\n              onClick={() => {\n                const win = window.open(catalogueURL, \"_blank\");\n                win.focus();\n              }}\n              edge=\"end\"\n              aria-label=\"transfer\"\n            >\n              <OpenInNew />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default MetadataRecordListItem;\n","import React from \"react\";\n\nimport { Typography, List, CircularProgress, Button } from \"@material-ui/core\";\n\nimport { Add } from \"@material-ui/icons\";\nimport FormClassTemplate from \"./FormClassTemplate\";\n\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\n\nimport { Fr, En, I18n } from \"../I18n\";\nimport {\n  multipleFirebaseToJSObject,\n  cloneRecord,\n  deleteRecord,\n  submitRecord,\n  returnRecordToDraft,\n} from \"../../utils/firebaseRecordFunctions\";\nimport SimpleModal from \"../FormComponents/SimpleModal\";\n\nimport regions from \"../../regions\";\n\nimport MetadataRecordListItem from \"../FormComponents/MetadataRecordListItem\";\n\nclass Submissions extends FormClassTemplate {\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: {},\n      deleteModalOpen: false,\n      submitModalOpen: false,\n      withdrawModalOpen: false,\n      modalKey: \"\",\n      modalRecord: null,\n      loading: false,\n    };\n  }\n\n  async loadRecords() {\n    this.setState({ loading: true });\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        const recordsRef = firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(user.uid)\n          .child(\"records\");\n\n        recordsRef.on(\"value\", (records) => {\n          const allUsersRecords = records.toJSON();\n\n          this.setState({\n            records: multipleFirebaseToJSObject(allUsersRecords),\n            loading: false,\n          });\n        });\n\n        this.listenerRefs.push(recordsRef);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    // fixes error Can't perform a React state update on an unmounted component\n    this.unsubscribeAndCloseListeners();\n  }\n\n  unsubscribeAndCloseListeners() {\n    if (this.unsubscribe) this.unsubscribe();\n    if (this.listenerRefs.length) {\n      this.listenerRefs.forEach((ref) => ref.off());\n    }\n  }\n\n  async componentDidMount() {\n    this.loadRecords();\n  }\n\n  editRecord(key) {\n    const { match, history } = this.props;\n    const { language, region } = match.params;\n    const { currentUser } = auth;\n    history.push(`/${language}/${region}/${currentUser.uid}/${key}`);\n  }\n\n  handleSubmitRecord(key) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser && key) {\n      return submitRecord(region, auth.currentUser.uid, key, \"submitted\");\n    }\n    return false;\n  }\n\n  // Make record a draft again\n  withdrawRecord(key) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser && key) {\n      return returnRecordToDraft(region, auth.currentUser.uid, key);\n    }\n    return false;\n  }\n\n  cloneRecord(recordID) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      cloneRecord(recordID, auth.currentUser.uid, auth.currentUser.uid, region);\n    }\n  }\n\n  deleteRecord(key) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      return deleteRecord(region, auth.currentUser.uid, key);\n    }\n    return false;\n  }\n\n  toggleModal(modalName, state, key = \"\", record = null) {\n    this.setState({ modalKey: key, [modalName]: state, modalRecord: record });\n  }\n\n  render() {\n    const { match, history } = this.props;\n\n    const { language, region } = match.params;\n\n    const {\n      deleteModalOpen,\n      withdrawModalOpen,\n      modalKey,\n      modalRecord,\n      submitModalOpen,\n      records,\n      loading,\n    } = this.state;\n\n    const recordDateSort = (a, b) =>\n      new Date(b[1].created) - new Date(a[1].created);\n\n    return (\n      <div>\n        <SimpleModal\n          open={deleteModalOpen}\n          onClose={() => this.toggleModal(\"deleteModalOpen\", false)}\n          onAccept={() => this.deleteRecord(modalKey)}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={submitModalOpen}\n          onClose={() => this.toggleModal(\"submitModalOpen\", false)}\n          onAccept={() => this.handleSubmitRecord(modalKey, modalRecord)}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={withdrawModalOpen}\n          onClose={() => this.toggleModal(\"withdrawModalOpen\", false)}\n          onAccept={() => this.withdrawRecord(modalKey)}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n\n        <Typography variant=\"h5\">\n          <I18n>\n            <En>My Records</En>\n            <Fr>Mes dossiers</Fr>\n          </I18n>\n        </Typography>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <span>\n            <div>\n              <Typography>\n                <I18n>\n                  <En>\n                    To start a new record, click on \"New Record\" and begin\n                    adding information. To continue working on a record, select\n                    it from the list below. Once your record is completed and\n                    information has been provided for all mandatory fields, you\n                    can submit your record for review by clicking the \"Submit\n                    for review\" icon to the right of your record title. The\n                    record will not be published until it is reviewed and\n                    approved by {regions[region].title[language]} staff.\n                  </En>\n                  <Fr>\n                    Afin de soumettre vos métadonnées, cliquez sur « Nouvel\n                    enregistrement » et ajoutez-y les informations demandées. Si\n                    vous désirez reprendre la saisie d’un formulaire déjà\n                    entamé, sélectionnez-le dans la liste ci-dessous. Lorsque\n                    les informations sont saisies pour tous les champs\n                    obligatoires, vous pouvez soumettre vos métadonnées pour\n                    validation en cliquant sur l’icône « soumettre pour\n                    validation ». Vos métadonnées seront publiées lorsqu’elles\n                    auront été validées et approuvées par un professionel du{\" \"}\n                    {regions[region].title[language]}.\n                  </Fr>\n                </I18n>\n              </Typography>\n\n              <div style={{ marginTop: \"10px\" }}>\n                <Button\n                  startIcon={<Add />}\n                  onClick={() => history.push(`/${language}/${region}/new`)}\n                >\n                  <I18n en=\"New Record\" fr=\"Nouvel enregistrement\" />\n                </Button>\n              </div>\n\n              <List>\n                {Object.entries(records || {})\n                  .sort(recordDateSort)\n                  .map(([key, record]) => {\n                    const { status, title } = record;\n\n                    if (!(title?.en || !title?.fr)) return null;\n\n                    return (\n                      <MetadataRecordListItem\n                        key={key}\n                        record={record}\n                        showCloneAction\n                        onCloneClick={() => this.cloneRecord(key)}\n                        showDeleteAction\n                        onDeleteClick={() =>\n                          this.toggleModal(\"deleteModalOpen\", true, key)\n                        }\n                        showEditAction\n                        showPercentComplete\n                        onViewEditClick={() => this.editRecord(key)}\n                        showSubmitAction\n                        onSubmitClick={() => {\n                          if (status === \"\")\n                            this.toggleModal(\n                              \"submitModalOpen\",\n                              true,\n                              key,\n                              record\n                            );\n                          else this.toggleModal(\"withdrawModalOpen\", true, key);\n                        }}\n                      />\n                    );\n                  })}\n              </List>\n            </div>\n\n            {!records && (\n              <Typography>\n                <I18n>\n                  <En>You don't have any records.</En>\n                  <Fr>Vous n'avez pas d'historique de saisie.</Fr>\n                </I18n>\n              </Typography>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Submissions;\n","import React from \"react\";\nimport { Typography, List, CircularProgress } from \"@material-ui/core\";\nimport firebase from \"../../firebase\";\nimport MetadataRecordListItem from \"../FormComponents/MetadataRecordListItem\";\nimport { auth } from \"../../auth\";\nimport {\n  cloneRecord,\n  loadRegionRecords,\n} from \"../../utils/firebaseRecordFunctions\";\nimport { Fr, En, I18n } from \"../I18n\";\nimport FormClassTemplate from \"./FormClassTemplate\";\n\nclass Published extends FormClassTemplate {\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: {},\n      deleteModalOpen: false,\n      submitModalOpen: false,\n      withdrawModalOpen: false,\n      modalKey: \"\",\n      modalRecord: null,\n      loading: false,\n    };\n  }\n\n  async loadRecords() {\n    this.setState({ loading: true });\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const usersRef = firebase.database().ref(region).child(\"users\");\n\n        usersRef.on(\"value\", (regionRecordsFB) => {\n          const records = loadRegionRecords(regionRecordsFB, [\"published\"]);\n          this.setState({ records, loading: false });\n        });\n        this.listenerRefs.push(usersRef);\n      }\n    });\n  }\n\n  async componentDidMount() {\n    this.loadRecords();\n  }\n\n  editRecord(key, userID) {\n    const { match, history } = this.props;\n    const { language, region } = match.params;\n    history.push(`/${language}/${region}/${userID}/${key}`);\n  }\n\n  // user ID is that of the record owner, not the editor\n  handleCloneRecord(recordID, sourceUserID) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      cloneRecord(recordID, sourceUserID, auth.currentUser.uid, region);\n    }\n  }\n\n  render() {\n    const { match } = this.props;\n    const { region } = match.params;\n    const { records, loading } = this.state;\n\n    const recordDateSort = (a, b) => new Date(b.created) - new Date(a.created);\n\n    return (\n      <div>\n        <Typography variant=\"h5\">\n          <I18n>\n            <En>Published Records</En>\n            <Fr>Dossiers publiés</Fr>\n          </I18n>\n        </Typography>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <span>\n            <div>\n              <Typography>\n                <I18n>\n                  <En>These are the published records in your region.</En>\n                  <Fr>\n                    Il s'agit des enregistrements publiés dans votre région.\n                  </Fr>\n                </I18n>\n              </Typography>\n\n              <List>\n                {records && records.length\n                  ? records\n                      .sort(recordDateSort)\n                      .filter((record) => record.status === \"published\")\n                      .map((record) => {\n                        const { title } = record;\n\n                        if (!(title?.en || !title?.fr)) return null;\n\n                        return (\n                          <MetadataRecordListItem\n                            record={record}\n                            key={record.recordID}\n                            onViewEditClick={() =>\n                              this.editRecord(\n                                record.recordID,\n                                record.userinfo?.userID\n                              )\n                            }\n                            showDeleteAction={false}\n                            showUnSubmitAction={false}\n                            showCloneAction\n                            showAuthor\n                            showViewAction\n                            onCloneClick={() =>\n                              this.handleCloneRecord(\n                                record.recordID,\n                                record.userinfo?.userID,\n                                region\n                              )\n                            }\n                          />\n                        );\n                      })\n                  : \"\"}\n              </List>\n            </div>\n\n            {!records && (\n              <Typography>\n                <I18n>\n                  <En>There are no published records.</En>\n                  <Fr>Il n'y a pas de documents publiés.</Fr>\n                </I18n>\n              </Typography>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Published;\n","import firebase from \"../firebase\";\n\nexport async function cloneContact(region, userID, contactID) {\n  const contactsRef = firebase\n    .database()\n    .ref(region)\n    .child(\"users\")\n    .child(userID)\n    .child(\"contacts\");\n\n  const contact = (await contactsRef.child(contactID).once(\"value\")).val();\n\n  if (contact.lastName) contact.lastName += \" (Copy)\";\n  else contact.orgName += \" (Copy)\";\n  contactsRef.push(contact);\n}\n\nexport function deleteContact(region, userID, contactID) {\n  return firebase\n    .database()\n    .ref(region)\n    .child(\"users\")\n    .child(userID)\n    .child(\"contacts\")\n    .child(contactID)\n    .remove();\n}\n\nexport async function newContact(region, userID) {\n  const newNode = await firebase\n    .database()\n    .ref(region)\n    .child(\"users\")\n    .child(userID)\n    .child(\"contacts\")\n    .push({});\n\n  return newNode.key;\n}\n","import React from \"react\";\n\nimport { I18n } from \"../I18n\";\n\n/* Functions used to format text in the contact page, left column */\n\n// creates text from a contact in the form\n// <organization> - <individual name>\nfunction getContactTitleFromNames(contact) {\n  const { orgName, givenNames, lastName } = contact;\n  const titleParts = [\n    [lastName, givenNames].filter((e) => e).join(\", \"),\n    orgName,\n  ];\n\n  return titleParts\n    .filter((e) => e)\n    .map((e) => e.trim())\n    .filter((e) => e)\n    .join(\" - \");\n}\n\nfunction ContactTitle({ contact }) {\n  return (\n    getContactTitleFromNames(contact) || (\n      <I18n en=\"New contact\" fr=\"Nouveau contact\" />\n    )\n  );\n}\n\nexport default ContactTitle;\n","import React from \"react\";\nimport {\n  Typography,\n  IconButton,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n  Grid,\n  ListItemSecondaryAction,\n  ListItemAvatar,\n  CircularProgress,\n  Tooltip,\n} from \"@material-ui/core\";\nimport {\n  Add,\n  Edit,\n  Delete,\n  PermContactCalendar,\n  FileCopy,\n} from \"@material-ui/icons\";\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\nimport {\n  newContact,\n  cloneContact,\n  deleteContact,\n} from \"../../utils/firebaseContactFunctions\";\nimport ContactTitle from \"../FormComponents/ContactTitle\";\nimport { I18n, En, Fr } from \"../I18n\";\nimport SimpleModal from \"../FormComponents/SimpleModal\";\nimport FormClassTemplate from \"./FormClassTemplate\";\n\nclass Contacts extends FormClassTemplate {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: {},\n      modalOpen: false,\n      modalKey: \"\",\n      loading: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        const contactsRef = firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(user.uid)\n          .child(\"contacts\");\n        contactsRef.on(\"value\", (records) =>\n          this.setState({ contacts: records.toJSON(), loading: false })\n        );\n        this.listenerRefs.push(contactsRef);\n      }\n    });\n  }\n\n  handleDeleteContact(contactID) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      deleteContact(region, auth.currentUser.uid, contactID);\n    }\n  }\n\n  handleCloneContact(contactID) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      return cloneContact(region, auth.currentUser.uid, contactID);\n    }\n    return false;\n  }\n\n  addContact() {\n    const { history, match } = this.props;\n    const { language, region } = match.params;\n\n    // render different page with 'save' button?\n    if (auth.currentUser) {\n      newContact(region, auth.currentUser.uid).then((key) => {\n        history.push(`/${language}/${region}/contacts/${key}`);\n      });\n    }\n  }\n\n  editContact(key) {\n    const { history, match } = this.props;\n    const { language, region } = match.params;\n\n    // render different page with 'save' button?\n    history.push(`/${language}/${region}/contacts/${key}`);\n  }\n\n  toggleModal(state, key = \"\") {\n    this.setState({ modalKey: key, modalOpen: state });\n  }\n\n  render() {\n    const { modalOpen, modalKey, loading, contacts } = this.state;\n    return (\n      <Grid container direction=\"column\" spacing={3}>\n        <Grid item xs>\n          <SimpleModal\n            open={modalOpen}\n            onClose={() => this.toggleModal(false)}\n            onAccept={() => this.handleDeleteContact(modalKey)}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          />\n\n          <Typography variant=\"h5\">\n            <I18n>\n              <En>Contacts</En>\n              <Fr>Contacts</Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <Typography>\n            <I18n>\n              <En>\n                Create contacts here that you can reuse in multiple metadata\n                records.\n              </En>\n              <Fr>\n                Ajoutez ici les personnes ressources que vous désirez réutiliser\n                pour la saisie d’autres métadonnées.\n              </Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n\n        <Grid item xs>\n          <Button startIcon={<Add />} onClick={() => this.addContact()}>\n            <I18n>\n              <En>Add contact</En>\n              <Fr>ajouter un contact</Fr>\n            </I18n>\n          </Button>\n        </Grid>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <>\n            <Grid item xs>\n              {contacts && Object.keys(contacts).length ? (\n                <div>\n                  <Typography>\n                    <I18n>\n                      <En>These are your contacts</En>\n                      <Fr>Ce sont vos contacts</Fr>\n                    </I18n>\n                  </Typography>\n                  <List>\n                    {Object.entries(contacts).map(([key, val]) => (\n                      <ListItem\n                        key={key}\n                        button\n                        onClick={() => this.editContact(key)}\n                      >\n                        <ListItemAvatar>\n                          <Avatar>\n                            <PermContactCalendar />\n                          </Avatar>\n                        </ListItemAvatar>\n\n                        <ListItemText\n                          primary={<ContactTitle contact={val} />}\n                        />\n                        <ListItemSecondaryAction>\n                          <Tooltip title={<I18n en=\"Edit\" fr=\"Éditer\" />}>\n                            <span>\n                              <IconButton onClick={() => this.editContact(key)}>\n                                <Edit />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          <Tooltip title={<I18n en=\"Clone\" fr=\"Clone\" />}>\n                            <span>\n                              <IconButton\n                                onClick={() => this.handleCloneContact(key)}\n                              >\n                                <FileCopy />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                          <Tooltip title={<I18n en=\"Delete\" fr=\"Supprimer\" />}>\n                            <span>\n                              <IconButton\n                                onClick={() => this.toggleModal(true, key)}\n                              >\n                                <Delete />\n                              </IconButton>\n                            </span>\n                          </Tooltip>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                </div>\n              ) : (\n                <Typography>\n                  <I18n>\n                    <En>No contacts submitted yet</En>\n                    <Fr>Aucun contacts n'a encore été soumis</Fr>\n                  </I18n>\n                </Typography>\n              )}\n            </Grid>\n          </>\n        )}\n      </Grid>\n    );\n  }\n}\nexport default Contacts;\n","import React from \"react\";\n\nimport { Typography } from \"@material-ui/core\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nconst Login = () => {\n  return (\n    <div>\n      <Typography>\n        <I18n>\n          <En>\n            Please sign in to access your metadata records. You will need a\n            Google account to login.\n          </En>\n          <Fr>\n            Connectez-vous pour accéder à l'historique de saisie de vos\n            métadonnées. Vous aurez besoin d'un compte Google pour vous\n            connecter.\n          </Fr>\n        </I18n>\n      </Typography>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nimport { Chip } from \"@material-ui/core\";\nimport { I18n } from \"../I18n\";\n\nconst StatusChip = ({ status }) => {\n  let chipText = \"\";\n\n  if (status === \"submitted\") chipText = <I18n en=\"Submitted\" fr=\"Soumis\" />;\n  else if (status === \"published\")\n    chipText = <I18n en=\"Published\" fr=\"Publié\" />;\n  else chipText = <I18n en=\"Draft\" fr=\"Brouillon\" />;\n\n  return (\n    <Chip\n      label={chipText}\n      // color={statusColors[status] || \"default\"}\n      variant=\"outlined\"\n    />\n  );\n};\n\nexport default StatusChip;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <Typography variant=\"h5\">Not Found / Non trouvé</Typography>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { I18n } from \"../I18n\";\n\nfunction RequiredMark({ passes }) {\n  if (passes)\n    return (\n      <span\n        style={{\n          color: \"green\",\n          fontSize: \"x-large\",\n          position: \"relative\",\n          bottom: \"-4px\",\n        }}\n      >\n        {\" \"}\n        ✓{\" \"}\n      </span>\n    );\n  return (\n    <Tooltip title={<I18n en=\"Required\" fr=\"Obligatoire\" />}>\n      <span\n        style={{\n          color: \"red\",\n          fontSize: \"large\",\n        }}\n      >\n        {\" \"}\n        ✵{\" \"}\n      </span>\n    </Tooltip>\n  );\n}\nexport default RequiredMark;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const SupplementalText = ({ children }) => (\n  <Typography variant=\"body2\" component=\"div\" style={{ marginTop: \"10px\" }}>\n    {children}\n  </Typography>\n);\nexport const QuestionText = ({ children }) => (\n  <Typography variant=\"body1\" component=\"div\" style={{ marginBottom: \"10px\" }}>\n    {children}\n  </Typography>\n);\nexport const paperClass = {\n  padding: \"10px\",\n  margin: \"20px\",\n  width: \"90%\",\n};\n","import React from \"react\";\n\nimport { Save } from \"@material-ui/icons\";\nimport { Typography, Paper, Grid } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nimport regions from \"../../regions\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport { paperClass } from \"../FormComponents/QuestionStyles\";\n\nconst StartTab = ({ disabled }) => {\n  const { region } = useParams();\n  const regionInfo = regions[region];\n\n  return (\n    <Grid item xs>\n      <Paper style={paperClass}>\n        {disabled && (\n          <Typography>\n            <I18n>\n              <En>\n                <b>\n                  This form is locked because it has already been published, or\n                  you do not have access to edit it.\n                </b>\n              </En>\n              <Fr>\n                <b>\n                  Ce formulaire est verrouillé car il a déjà été publié ou vous\n                  n'avez pas accès pour le modifier.\n                </b>\n              </Fr>\n            </I18n>\n          </Typography>\n        )}\n        <Typography variant=\"body1\">\n          <I18n>\n            <En>\n              Welcome to the {regionInfo.title.en} Metadata Entry Tool, the\n              first step in making your data discoverable and accessible through\n              CIOOS. This information will be used to create a metadata record\n              for your dataset that will allow it to be searchable through the{\" \"}\n              {regionInfo.catalogueTitle.en}. Please fill out each field with as\n              much detail as possible. The metadata record will help describe\n              this dataset for others to determine if it is relevant for their\n              work and ensure it is interoperable with other databases and\n              systems.\n              <br />\n              <br /> Questions regarding the form can be directed to{\" \"}\n            </En>\n            <Fr>\n              Bienvenue dans l’outil de saisie de métadonnées{\" \"}\n              {regionInfo.titleFrPossessive} qui constitue la première étape du\n              processus de partage de vos données. Ces renseignements serviront\n              à créer le profil de métadonnées de votre jeu de données. Ces\n              métadonnées facilitent l’accessibilité et la découvrabilité de vos\n              données via le Catalogue de données {regionInfo.catalogueTitle.fr}\n              . Elles rendent également vos jeux de données interopérables avec\n              d’autres systèmes de diffusion. Aussi, nous vous incitons\n              fortement à remplir les champs requis de la façon la plus\n              exhaustive possible.\n              <br />\n              <br /> Les questions concernant le formulaire peuvent être\n              adressées à{\" \"}\n            </Fr>\n          </I18n>\n          <a href={`mailto:${regionInfo.email}`}>{regionInfo.email}</a>.\n        </Typography>\n\n        <ul>\n          <li>\n            <I18n>\n              <En>You can save the form once you have filled out a title.</En>\n              <Fr>\n                Dès que vous avez saisi un titre, vous pouvez enregistrer le\n                formulaire.\n              </Fr>\n            </I18n>\n          </li>\n          <li>\n            <En>\n              All fields marked with a <RequiredMark /> are mandatory.\n            </En>\n            <Fr>\n              Tous les champs marqués d'une étoile <RequiredMark /> sont\n              obligatoires.\n            </Fr>\n          </li>\n          <li>\n            <I18n>\n              <En>\n                The form can be saved and completed over time by clicking the{\" \"}\n                <Save /> icon in the bottom right corner. This icon will be\n                greyed out until you have filled in the dataset title in the\n                \"Identification\" section.\n              </En>\n              <Fr>\n                Le formulaire peut être sauvegardé et complété ultérieurement en\n                cliquant sur le bouton <Save /> dans le coin inférieur droit.\n                Cet icône sera activé par l’ajout du titre du jeu de données\n                dans la section « Identification des données ».\n              </Fr>\n            </I18n>\n          </li>\n          <li>\n            <I18n>\n              <En>\n                Some fields can have text in both French and English, though\n                this is only required for the title and the abstract. There is a\n                'Translate' button that will automatically generate text in the\n                other language. This translation is more accurate when there is\n                more text to translate.\n              </En>\n              <Fr>\n                Certains champs peuvent avoir du texte à la fois en français et\n                en anglais, toutefois seules les traductions du titre et du\n                résumé sont réellement requises. Le bouton « Traduire» génère\n                automatiquement du texte dans l'autre langue. Veuillez noter que\n                plus il y a de texte à traduire et plus la traduction sera\n                précise.\n              </Fr>\n            </I18n>\n          </li>\n        </ul>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default StartTab;\n","import React from \"react\";\n\nimport {\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\n\nconst CheckBoxList = ({\n  onChange,\n  value = [],\n  name,\n  options,\n  optionLabels = options,\n  optionTooltips = [],\n  disabled,\n  labelSize = 3,\n}) => {\n  // remove array element from array, by value\n  function toggleArrayElement(ele, arr) {\n    if (arr.includes(ele)) return arr.filter((v) => v !== ele);\n    return arr.concat(ele);\n  }\n\n  return (\n    <Grid container direction=\"row\">\n      {options.map((v, i) => {\n        return (\n          <Grid item key={i} xs={labelSize}>\n            <Tooltip title={optionTooltips[i] || \"\"}>\n              <FormControlLabel\n                disabled={disabled}\n                control={\n                  <Checkbox\n                    value={v || []}\n                    name={name}\n                    checked={value.includes(v)}\n                    onChange={(e) => {\n                      const val = e.target.value;\n                      const newCheckedValuesArray = toggleArrayElement(\n                        val,\n                        value\n                      );\n\n                      onChange(newCheckedValuesArray);\n                    }}\n                  />\n                }\n                label={<Typography>{optionLabels[i]}</Typography>}\n              />\n            </Tooltip>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default CheckBoxList;\n","export const eovList = [\n  \"dissolvedOrganicCarbon\",\n  \"inorganicCarbon\",\n  \"nitrate\",\n  \"nutrients\",\n  \"oxygen\",\n  \"phosphate\",\n  \"potentialDensity\",\n  \"potentialTemperature\",\n  \"pressure\",\n  \"seaIce\",\n  \"seaState\",\n  \"seaSurfaceHeight\",\n  \"seaSurfaceSalinity\",\n  \"seaSurfaceTemperature\",\n  \"seawaterDensity\",\n  \"silicate\",\n  \"speedOfSound\",\n  \"subSurfaceCurrents\",\n  \"subSurfaceSalinity\",\n  \"subSurfaceTemperature\",\n  \"surfaceCurrents\",\n  \"other\",\n];\n\nexport const roleCodes = {\n  custodian: {\n    title: {\n      en: \"Metadata Custodian\",\n      fr: \"Dépositaire des métadonnées\",\n    },\n    text: {\n      en:\n        \"Party that accepts accountability and responsibility for the resource and ensures appropriate care and maintenance of the resource \",\n      fr:\n        \"Partie qui accepte la reddition de comptes et la responsabilité de la ressource et assure le soin et l'entretien appropriés de la ressource \",\n    },\n    required: true,\n    showProminently: true,\n  },\n  owner: {\n    title: { en: \"Data Owner\", fr: \"Propriétaire des données\" },\n    text: {\n      en: \"Party that owns the resource\",\n      fr: \"Partie propriétaire de la ressource\",\n    },\n    required: true,\n    showProminently: true,\n  },\n  distributor: {\n    title: { en: \"Distributor\", fr: \"Distributeur\" },\n    text: {\n      en: \"Party who distributes the resource\",\n      fr: \"Partie qui distribue la ressource\",\n    },\n    showProminently: true,\n  },\n  author: {\n    title: { en: \"Author\", fr: \"Auteur\" },\n    text: { en: \"Party who authored the resource\" },\n  },\n  coAuthor: {\n    title: { en: \"Coauthor\", fr: \"Co-auteur\" },\n    text: {\n      en: \"Party who jointly authors the resource\",\n      fr: \"Partie qui est l'auteur conjoint de la ressource\",\n    },\n  },\n\n  collaborator: {\n    title: { en: \"Collaborator\", fr: \"Collaborateur\" },\n    text: {\n      en:\n        \"Party who assists with the generation of the resource other than the principal investigator\",\n      fr:\n        \"Partie qui aide à la production de la ressource autre que le chercheur principal\",\n    },\n  },\n  contributor: {\n    title: { en: \"Contributor\", fr: \"Contributeur\" },\n    text: {\n      en: \"Party contributing to the resource\",\n      fr: \"Partie contribuant à la ressource\",\n    },\n  },\n  editor: {\n    title: { en: \"Editor\", fr: \"Éditeur\" },\n    text: {\n      en: \"Party who reviewed or modified the resource to improve the content\",\n      fr:\n        \"Partie qui a examiné ou modifié la ressource pour améliorer le contenu\",\n    },\n  },\n  funder: {\n    title: { en: \"Funder\", fr: \"Financeur\" },\n    text: {\n      en: \"Party providing monetary support for the resource\",\n      fr: \"Partie fournissant un soutien monétaire pour la ressource\",\n    },\n  },\n  mediator: {\n    title: { en: \"Mediator\", fr: \"Médiateur\" },\n    text: {\n      en:\n        \"A class of entity that mediates access to the resource and for whom the resource is intended or useful \",\n      fr:\n        \"Classe d'entité qui sert de médiateur à l'accès à la ressource et pour laquelle la ressource est destinée ou utile\",\n    },\n  },\n  originator: {\n    title: { en: \"Originator\", fr: \"Initiateur\" },\n    text: {\n      en: \"Party who created the resource\",\n      fr: \"Partie qui a créé la ressource\",\n    },\n  },\n  pointOfContact: {\n    title: { en: \"Point Of Contact\", fr: \"Point de contact\" },\n    text: {\n      en:\n        \"Party who can be contacted for acquiring knowledge about or acquisition of the resource\",\n      fr:\n        \"Partie qui peut être contactée pour acquérir des connaissances sur la ressource ou l'acquisition de la ressource\",\n    },\n  },\n\n  principalInvestigator: {\n    title: { en: \"Principal Investigator\", fr: \"Responsable de recherche\" },\n    text: {\n      en:\n        \"Key party responsible for gathering information and conducting research\",\n      fr:\n        \"Partie clé responsable de la collecte de l'information et de la réalisation de la recherche\",\n    },\n  },\n  processor: {\n    title: { en: \"Processor\", fr: \"Transformateur\" },\n    text: {\n      en:\n        \"Party who has processed the data in a manner such that the resource has been modified\",\n      fr:\n        \"Partie qui a traité les données d'une manière telle que la ressource a été modifiée\",\n    },\n  },\n  publisher: {\n    title: { en: \"Publisher\", fr: \"Editeur\" },\n    text: {\n      en: \"Party who published the resource\",\n      fr: \"Partie qui a publié la ressource\",\n    },\n  },\n  resourceProvider: {\n    title: { en: \"Resource Provider\", fr: \"Fournisseur de ressources\" },\n    text: {\n      en: \"Party that supplies the resource\",\n      fr: \"Partie qui fournit la ressource \",\n    },\n  },\n  rightsHolder: {\n    title: { en: \"Rights Holder\", fr: \"Ayant droit\" },\n    text: {\n      en: \"Party owning or managing rights over the resource \",\n      fr: \"Partie détenant ou gérant des droits sur la ressource\",\n    },\n  },\n  sponsor: {\n    title: { en: \"Sponsor\", fr: \"Commanditaire\" },\n    text: {\n      en: \"Party who speaks for the resource \",\n      fr: \"Parti qui parle pour la ressource\",\n    },\n  },\n  stakeholder: {\n    title: { en: \"Stakeholder\", fr: \"Actionnaire\" },\n    text: {\n      en:\n        \"Party who has an interest in the resource or the use of the resource \",\n      fr:\n        \"Partie qui a un intérêt dans la ressource ou l'utilisation de la ressource\",\n    },\n  },\n};\n\nexport const progressCodes = {\n  onGoing: {\n    title: { en: \"Ongoing\", fr: \"En cours\" },\n    text: {\n      en:\n        \"Data is continually being updated. e.g satellite dataset that continues to be augmented\",\n      fr:\n        \"Les données sont continuellement mises à jour, par exemple un ensemble de données satellite qui continue d'être augmenté\",\n    },\n  },\n\n  historicalArchive: {\n    title: { en: \"Historical Archive\", fr: \"Archives historiques\" },\n    text: {\n      en:\n        \"Data has been stored in an offline storage facility. use to indicate data are archived\",\n      fr:\n        \"Les données ont été stockées dans une installation de stockage hors connexion. Utilisez pour indiquer que les données sont archivées\",\n    },\n  },\n\n  completed: {\n    title: { en: \"Completed\", fr: \"Terminé\" },\n    text: {\n      en:\n        \"Production of the data has been completed \te.g. raw data that is not ongoing, completed model\",\n      fr:\n        \"La production des données a été terminée, p. ex. données brutes qui ne sont pas en cours, modèle terminé\",\n    },\n  },\n};\n\nexport const depthDirections = {\n  heightPositive: { en: \"Depth Positive\", fr: \"Profondeur positive\" },\n  depthPositive: { en: \"Height Positive\", fr: \"Hauteur positive\" },\n};\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Tooltip,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\n\nimport CheckBoxList from \"./CheckBoxList\";\nimport RequiredMark from \"./RequiredMark\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport { roleCodes } from \"../../isoCodeLists\";\n\nimport { QuestionText, SupplementalText } from \"./QuestionStyles\";\n\nconst RolePicker = ({ value, disabled, updateContact }) => {\n  const [expanded, setExpanded] = useState(false);\n  const { language } = useParams();\n\n  const roles = Object.entries(roleCodes).map(([key, role]) => ({\n    key,\n    ...role,\n  }));\n  const prominentRoles = roles.filter((role) => role.showProminently);\n  const nonProminentRoles = roles.filter((role) => !role.showProminently);\n  const nonProminentRoleKeys = nonProminentRoles.map((r) => r.key);\n  const selectOptionIsInExpandedList =\n    (value.role || []).filter((role) => nonProminentRoleKeys.includes(role))\n      .length > 0;\n\n  return (\n    <Grid item xs>\n      <QuestionText>\n        <I18n>\n          <En>Appear in citation?</En>\n          <Fr>Apparaissent dans la citation?</Fr>\n        </I18n>\n\n        <Checkbox\n          name=\"inCitation\"\n          checked={value.inCitation || false}\n          onChange={(e) => {\n            const { checked } = e.target;\n\n            updateContact(\"inCitation\")(checked);\n          }}\n        />\n      </QuestionText>\n      <QuestionText>\n        <I18n>\n          <En>What is the role of this contact?</En>\n          <Fr>Quel est son rôle?</Fr>\n        </I18n>\n        <RequiredMark passes={value.role?.length} />\n        <SupplementalText>\n          {\" \"}\n          <I18n>\n            <En>\n              Multiple roles can be selected for each contact. Expand the list\n              below for additional role.\n            </En>\n            <Fr>\n              Plusieurs rôles peuvent être sélectionnés par personne. Si vous\n              avez besoin de rôles plus spécifiques, vous pouvez étendre la\n              liste. Développez la liste ci-dessous pour un rôle supplémentaire.\n            </Fr>\n          </I18n>\n        </SupplementalText>\n      </QuestionText>\n\n      <CheckBoxList\n        value={value.role || []}\n        onChange={updateContact(\"role\")}\n        options={prominentRoles.map((r) => r.key)}\n        optionLabels={prominentRoles.map(\n          (r) => r.title[language] + (r.required ? \"*\" : \"\")\n        )}\n        disabled={disabled}\n        optionTooltips={prominentRoles.map((r) => r.text[language])}\n      />\n\n      <Accordion\n        onChange={() => setExpanded(!expanded)}\n        expanded={expanded || selectOptionIsInExpandedList}\n      >\n        <AccordionSummary\n          expandIcon={\n            <Tooltip title=\"Show/Hide more options\">\n              <ExpandMore />\n            </Tooltip>\n          }\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <I18n>\n            <En>Show/Hide more role options</En>\n            <Fr>Afficher/masquer les rôles</Fr>\n          </I18n>\n        </AccordionSummary>\n        <AccordionDetails>\n          <CheckBoxList\n            value={value.role || []}\n            onChange={updateContact(\"role\")}\n            options={nonProminentRoles.map((r) => r.key)}\n            optionLabels={nonProminentRoles.map((r) => r.title[language])}\n            disabled={disabled}\n            optionTooltips={nonProminentRoles.map((r) => r.text[language])}\n          />\n        </AccordionDetails>\n      </Accordion>\n    </Grid>\n  );\n};\nexport default RolePicker;\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  TextField,\n  Typography,\n  Grid,\n  CircularProgress,\n  Button,\n  IconButton,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useDebounce } from \"use-debounce\";\nimport { Clear, OpenInNew } from \"@material-ui/icons\";\nimport { getBlankContact } from \"../../utils/blankRecord\";\n\nimport { validateEmail, validateURL } from \"../../utils/validate\";\nimport RolePicker from \"./RolePicker\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nimport ContactTitle from \"./ContactTitle\";\nimport { QuestionText } from \"./QuestionStyles\";\n\nfunction givenNamesFormat(givenNames) {\n  return givenNames\n    .split(\" \")\n    .filter((e) => e)\n    .map((e) => `${e[0].toUpperCase()}. `)\n    .join(\" \");\n}\n\nfunction namesToCitation(givenNames, lastname) {\n  if (!givenNames || !lastname) return \"\";\n\n  return `${lastname}, ${givenNamesFormat(givenNames)}`;\n}\n\nconst ContactEditor = ({\n  value,\n  showRolePicker,\n  disabled,\n  handleClear,\n  updateContact,\n  updateContactEvent,\n  updateContactRor,\n  updateContactOrcid,\n}) => {\n  const orgEmailValid = validateEmail(value.orgEmail);\n  const indEmailValid = validateEmail(value.indEmail);\n  const orgURLValid = validateURL(value.orgURL);\n  const givenNamesValid = !value.givenNames?.includes(\",\");\n  const lastNameValid = !value.lastName?.includes(\",\");\n  const [rorInputValue, setRorInputValue] = useState(value.orgRor);\n  const [orcidInputValue, setOrcidInputValue] = useState(\"\");\n  const [debouncedRorInputValue] = useDebounce(rorInputValue, 500);\n  const [rorOptions, setRorOptions] = useState([]);\n  const [rorSearchActive, setRorSearchActive] = useState(false);\n\n  // eslint-disable-next-line no-param-reassign\n  value = { ...getBlankContact(), ...value };\n\n  function updateRorOptions(newInputValue) {\n    if (\n      newInputValue.startsWith(\"http\") &&\n      !newInputValue.includes(\"ror.org\")\n    ) {\n      setRorSearchActive(false);\n    } else {\n      fetch(`https://api.ror.org/organizations?query=${newInputValue}`)\n        .then((response) => response.json())\n        .then((response) => setRorOptions(response.items))\n        .then(() => setRorSearchActive(false));\n    }\n  }\n\n  useEffect(() => {\n    if (debouncedRorInputValue) {\n      updateRorOptions(debouncedRorInputValue);\n    }\n  }, [debouncedRorInputValue]);\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item xs>\n        <Typography variant=\"h6\">\n          <ContactTitle contact={value} />\n        </Typography>\n      </Grid>\n      <Grid item xs>\n        {showRolePicker && (\n          <RolePicker\n            value={value}\n            updateContact={updateContact}\n            disabled={disabled}\n          />\n        )}\n        <Grid\n          container\n          direction=\"column\"\n          spacing={1}\n          style={{ marginTop: \"10px\" }}\n        >\n          {/* Organization */}\n          <Grid item xs>\n            <QuestionText>\n              <I18n>\n                <En>Provide any information about the organization</En>\n                <Fr>Identification de l'organisation</Fr>\n              </I18n>\n            </QuestionText>\n          </Grid>\n          <Grid item xs style={{ marginleft: \"10px\", height: \"33px\" }}>\n            {rorSearchActive ? (\n              <CircularProgress size={20} />\n            ) : (\n              <div style={{ height: \"33px\" }} />\n            )}\n          </Grid>\n          <Grid item xs style={{ marginleft: \"10px\" }}>\n            <Autocomplete\n              inputValue={rorInputValue}\n              onInputChange={(e, newInputValue) => {\n                setRorInputValue(newInputValue);\n                if (newInputValue === \"\") {\n                  setRorSearchActive(false);\n                } else {\n                  setRorSearchActive(true);\n                }\n              }}\n              disabled={disabled}\n              onChange={(e, organization) => {\n                if (organization !== null) {\n                  fetch(`https://api.ror.org/organizations/${organization.id}`)\n                    .then((response) => response.json())\n                    .then((response) => {\n                      if (!response.errors) {\n                        updateContactRor(response);\n                      } // todo: do some error handling here if search fails?\n                    })\n                    .then(() => setRorSearchActive(false))\n                    .then(() => setRorInputValue(\"\"));\n                }\n              }}\n              freeSolo\n              filterOptions={(x) => x}\n              getOptionLabel={(e) => e.name}\n              options={rorOptions}\n              fullWidth\n              renderInput={(params) => (\n                <TextField\n                  // eslint-disable-next-line react/jsx-props-no-spreading\n                  {...params}\n                  label={\n                    <I18n\n                      en=\"Type to search Research Organization Registry (ROR)\"\n                      fr=\"Tapez pour rechercher le registre des organismes de recherche (ROR)\n\"\n                    />\n                  }\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs style={{ marginleft: \"10px\" }}>\n            <TextField\n              label={<I18n active en=\"ROR URL\" fr=\"URL ROR\" />}\n              InputLabelProps={{ shrink: value.orgRor !== \"\" }}\n              value={value.orgRor}\n              disabled\n              fullWidth\n              InputProps={{\n                endAdornment: value.orgRor && (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => {\n                        handleClear(\"orgRor\");\n                      }}\n                    >\n                      <Clear />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              // sx={{m: 2, \"&.Mui-focused .MuiIconButton-root\": {color: 'primary.main'}}}\n            />\n          </Grid>\n          <Grid item xs style={{ marginleft: \"10px\" }}>\n            <TextField\n              label={<I18n en=\"Organization name\" fr=\"Nom de l'organisation\" />}\n              value={value.orgName}\n              onChange={updateContactEvent(\"orgName\")}\n              disabled={value.orgRor !== \"\" || disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              helperText={\n                !orgURLValid && <I18n en=\"Invalid URL\" fr=\"URL non valide\" />\n              }\n              error={!orgURLValid}\n              label={<I18n en=\"URL\" fr=\"URL\" />}\n              value={value.orgURL}\n              onChange={updateContactEvent(\"orgURL\")}\n              disabled={value.orgRor !== \"\" || disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Address\" fr=\"Adresse\" />}\n              value={value.orgAdress}\n              onChange={updateContactEvent(\"orgAdress\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"City\" fr=\"Ville\" />}\n              value={value.orgCity}\n              onChange={updateContactEvent(\"orgCity\")}\n              disabled={value.orgRor !== \"\" || disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Country\" fr=\"Pays\" />}\n              value={value.orgCountry}\n              onChange={updateContactEvent(\"orgCountry\")}\n              disabled={value.orgRor !== \"\" || disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              helperText={\n                !orgEmailValid && (\n                  <I18n en=\"Invalid email\" fr=\"E-mail non valide\" />\n                )\n              }\n              error={!orgEmailValid}\n              label={<I18n en=\"Email\" fr=\"Courriel\" />}\n              value={value.orgEmail}\n              onChange={updateContactEvent(\"orgEmail\")}\n              fullWidth\n              disabled={disabled}\n            />{\" \"}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs>\n        {/* Individual */}\n        <Typography>\n          <I18n>\n            <En>Provide any information about the individual</En>\n            <Fr>Identification de l'individu</Fr>\n          </I18n>\n        </Typography>\n        <Typography>\n          <Button\n            href=\"https://orcid.org/orcid-search/search\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n          >\n            <I18n>\n              <En>ORCID search </En>\n              <Fr>Rechercher ORCID </Fr>\n            </I18n>\n            <OpenInNew style={{ verticalAlign: \"middle\" }} />\n          </Button>\n        </Typography>\n        <Grid item xs style={{ marginleft: \"10px\" }}>\n          <TextField\n            label={\n              <I18n\n                en=\"Paste ORCID identifier here to populate personal data\"\n                fr=\"Collez l'identifiant ORCID ici pour remplir les données personnelles\"\n              />\n            }\n            value={orcidInputValue}\n            onChange={(e) => {\n              setOrcidInputValue(e.target.value);\n              const regex = /\\w{4}-\\w{4}-\\w{4}-\\w{4}/g;\n              const orcid = e.target.value.match(regex);\n              if (orcid) {\n                fetch(`https://pub.orcid.org/v3.0/${orcid}/record`, {\n                  headers: {\n                    accept: \"application/json\",\n                  },\n                })\n                  .then((response) => response.json())\n                  .then((response) => updateContactOrcid(response))\n                  .then(() => {\n                    setTimeout(() => setOrcidInputValue(\"\"), 100);\n                  });\n              }\n            }}\n            disabled={disabled}\n            fullWidth\n          />\n        </Grid>\n        <Grid container direction=\"column\" spacing={1}>\n          <Grid item xs>\n            {value.givenNames && value.lastName && value.inCitation && (\n              <div style={{ marginBottom: \"10px\" }}>\n                This name will appear in the citation as:{\" \"}\n                <b>{namesToCitation(value.givenNames, value.lastName)}</b>\n              </div>\n            )}\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"ORCID URL\" fr=\"URL ORCID\" />}\n              InputLabelProps={{ shrink: value.indOrcid !== \"\" }}\n              value={value.indOrcid}\n              InputProps={{\n                endAdornment: value.indOrcid && (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => {\n                        handleClear(\"indOrcid\");\n                      }}\n                    >\n                      <Clear />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              disabled\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Given name(s)\" fr=\"Prénom\" />}\n              value={value.givenNames}\n              helperText={\n                !givenNamesValid && (\n                  <I18n\n                    en=\"No commas allowed\"\n                    fr=\"Aucune virgule n'est autorisée\"\n                  />\n                )\n              }\n              error={!givenNamesValid}\n              onChange={updateContactEvent(\"givenNames\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              // style={{ margin: \"25px\" }}\n              label={<I18n en=\"Last name\" fr=\"nom de famille\" />}\n              value={value.lastName}\n              helperText={\n                !lastNameValid && (\n                  <I18n\n                    en=\"No commas allowed\"\n                    fr=\"Aucune virgule n'est autorisée\"\n                  />\n                )\n              }\n              error={!lastNameValid}\n              onChange={updateContactEvent(\"lastName\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label={<I18n en=\"Position\" fr=\"Poste occupé\" />}\n              value={value.indPosition}\n              onChange={updateContactEvent(\"indPosition\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs>\n            <TextField\n              helperText={\n                !indEmailValid && (\n                  <I18n en=\"Invalid email\" fr=\"E-mail non valide\" />\n                )\n              }\n              error={!indEmailValid}\n              label={<I18n en=\"Email\" fr=\"Courriel\" />}\n              value={value.indEmail}\n              onChange={updateContactEvent(\"indEmail\")}\n              disabled={disabled}\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactEditor;\n","import React from \"react\";\nimport {\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Typography,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { I18n } from \"../I18n\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    minWidth: 200,\n  },\n  selectEmpty: {},\n}));\n\nconst SelectInput = ({\n  value = \"\",\n  name,\n  options,\n  optionLabels,\n  optionTooltips = [],\n  onChange,\n  disabled,\n  label,\n  fullWidth = true,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      fullWidth={fullWidth}\n      className={classes.formControl}\n      disabled={disabled}\n    >\n      <Select\n        className={classes.selectEmpty}\n        name={name}\n        fullWidth={fullWidth}\n        value={value}\n        disabled={disabled}\n        displayEmpty\n        onChange={onChange}\n      >\n        <MenuItem value=\"\">\n          <InputLabel id=\"demo-simple-select-label\">\n            <Typography>\n              {label || <I18n en=\"Choose\" fr=\"Choisir\" />}\n            </Typography>\n          </InputLabel>\n        </MenuItem>\n        {options.map((v, i) => (\n          <MenuItem key={v} value={v}>\n            <Tooltip\n              enterDelay={1}\n              title={optionTooltips[i] ? optionTooltips[i] : \"\"}\n            >\n              <div style={{ width: \"100%\" }}>{optionLabels[i]}</div>\n            </Tooltip>\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\nexport default SelectInput;\n","import React, { useState } from \"react\";\n\nimport { Container, Draggable } from \"react-smooth-dnd\";\n\nimport arrayMove from \"array-move\";\nimport { Delete, DragHandle, FileCopy, Save } from \"@material-ui/icons\";\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  IconButton,\n  Typography,\n  Tooltip,\n  Grid,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport { deepCopy, deepEquals } from \"../../utils/misc\";\nimport { paperClass } from \"./QuestionStyles\";\nimport SelectInput from \"./SelectInput\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nimport ContactTitle from \"./ContactTitle\";\nimport { getBlankContact } from \"../../utils/blankRecord\";\n\nconst ContactLeftList = ({\n  contacts,\n  updateContacts,\n  activeContact,\n  setActiveContact,\n  disabled,\n  userContacts,\n  saveToContacts,\n}) => {\n  const [currentContacts, setItems] = useState(contacts);\n\n  if (!deepEquals(currentContacts, contacts)) {\n    setItems(contacts);\n  }\n  //  removedIndex is dragStart\n  //  addedIndex is dragEnd\n  function onDrop({ removedIndex, addedIndex }) {\n    if (removedIndex === activeContact) setActiveContact(addedIndex);\n    else if (addedIndex <= activeContact && removedIndex > activeContact)\n      setActiveContact(activeContact + 1);\n\n    const reorderedContacts = arrayMove(\n      currentContacts,\n      removedIndex,\n      addedIndex\n    );\n\n    updateContacts(reorderedContacts);\n  }\n\n  function removeItem(itemIndex) {\n    updateContacts(contacts.filter((e, index) => index !== itemIndex));\n    if (contacts.length) setActiveContact(contacts.length - 2);\n  }\n  function duplicateContact(contactIndex) {\n    const duplicatedContact = deepCopy(contacts[contactIndex]);\n    if (duplicatedContact.lastName) duplicatedContact.lastName += \" (Copy)\";\n    else duplicatedContact.orgName += \" (Copy)\";\n\n    updateContacts(contacts.concat(duplicatedContact));\n  }\n\n  const contactList = Object.values(userContacts || {});\n\n  function handleAddFromSavedContacts(e) {\n    const index = e.target.value;\n    const { role, ...contact } = contactList[index];\n\n    updateContacts(\n      contacts.concat(deepCopy({ ...getBlankContact(), ...contact }))\n    );\n    setActiveContact(contacts.length);\n  }\n\n  function handleAddNewContact() {\n    updateContacts(contacts.concat(getBlankContact()));\n    setActiveContact(contacts.length);\n  }\n\n  return (\n    <Paper style={paperClass}>\n      <Grid container direction=\"column\" justifyContent=\"flex-start\">\n        <Grid item xs style={{ margin: \"10px\" }}>\n          <Typography>\n            {contacts.length ? (\n              <I18n>\n                <En>Contacts in this record:</En>\n                <Fr>Contacts dans cet enregistrement:</Fr>\n              </I18n>\n            ) : (\n              <I18n>\n                <En>There are no contacts in this record.</En>\n                <Fr>Il n'y a aucun contact dans cet enregistrement.</Fr>\n              </I18n>\n            )}\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <List>\n            <Container\n              dragHandleSelector=\".drag-handle\"\n              lockAxis=\"y\"\n              onDrop={onDrop}\n            >\n              {contacts.map((contactItem, i) => {\n                return (\n                  <Draggable key={i}>\n                    <ListItem\n                      key={i}\n                      button\n                      onClick={() => setActiveContact(i)}\n                    >\n                      <ListItemText\n                        primary={\n                          <Typography\n                            style={{\n                              fontWeight: activeContact === i ? \"bold\" : \"\",\n                              width: \"80%\",\n                            }}\n                          >\n                            <ContactTitle contact={contactItem} />\n                          </Typography>\n                        }\n                      />\n                      <ListItemSecondaryAction>\n                        <Tooltip\n                          title={\n                            <I18n\n                              en=\"Duplicate contact\"\n                              fr=\"Duplicate contact\"\n                            />\n                          }\n                        >\n                          <span>\n                            <IconButton\n                              onClick={() => duplicateContact(i)}\n                              edge=\"end\"\n                              aria-label=\"clone\"\n                              disabled={disabled}\n                            >\n                              <FileCopy />\n                            </IconButton>\n                          </span>\n                        </Tooltip>\n                        <Tooltip\n                          title={\n                            <I18n\n                              en=\"Remove from this record\"\n                              fr=\"Supprimer de cet enregistrement\"\n                            />\n                          }\n                        >\n                          <span>\n                            <IconButton\n                              onClick={() => removeItem(i)}\n                              edge=\"end\"\n                              aria-label=\"clone\"\n                              disabled={disabled}\n                            >\n                              <Delete />\n                            </IconButton>\n                          </span>\n                        </Tooltip>\n                        <Tooltip\n                          title={\n                            <I18n\n                              en=\"Add to saved contacts\"\n                              fr=\"Ajouter aux contacts enregistrés\"\n                            />\n                          }\n                        >\n                          <span>\n                            <IconButton\n                              onClick={() => {\n                                const contact = deepCopy(contacts[i]);\n\n                                // at this point the contact object could have\n                                // a role field, which shouldn't be saved\n                                delete contact.role;\n\n                                contact.contactID = saveToContacts(contact);\n\n                                setItems(contacts);\n                              }}\n                              disabled={\n                                !(\n                                  contacts[i].orgName?.length ||\n                                  contacts[i].givenNames?.length ||\n                                  contacts[i].lastName?.length\n                                )\n                              }\n                              edge=\"end\"\n                              aria-label=\"clone\"\n                            >\n                              <Save />\n                            </IconButton>\n                          </span>\n                        </Tooltip>\n                        <Tooltip\n                          title={\n                            <I18n en=\"Drag to reorder\" fr=\"Duplicate contact\" />\n                          }\n                        >\n                          <span>\n                            <IconButton\n                              className=\"drag-handle\"\n                              edge=\"end\"\n                              aria-label=\"clone\"\n                              disabled={disabled}\n                            >\n                              <DragHandle />\n                            </IconButton>\n                          </span>\n                        </Tooltip>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  </Draggable>\n                );\n              })}\n            </Container>\n          </List>\n        </Grid>\n        <Grid item xs style={{ margin: \"10px\" }}>\n          <Button\n            disabled={disabled}\n            onClick={handleAddNewContact}\n            fullWidth\n            style={{ height: \"56px\", justifyContent: \"emptyContact\" }}\n          >\n            <Typography>\n              <I18n>\n                <En>Add new contact</En>\n                <Fr>Ajouter un contact</Fr>\n              </I18n>\n            </Typography>\n          </Button>\n        </Grid>\n        <Grid item xs style={{ margin: \"10px\" }}>\n          <SelectInput\n            value=\"\"\n            labelId=\"add-existing\"\n            onChange={handleAddFromSavedContacts}\n            optionLabels={contactList.map((contactItem) => (\n              <ContactTitle contact={contactItem} />\n            ))}\n            options={contactList.map((v, i) => i)}\n            disabled={!contactList.length || disabled}\n            label={<I18n en=\"ADD SAVED CONTACT\" fr=\"AJOUTER UN CONTACT\" />}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\nexport default ContactLeftList;\n","import React, { useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { Paper, Grid } from \"@material-ui/core\";\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\n\nimport EditContact from \"../FormComponents/ContactEditor\";\nimport ContactLeftList from \"../FormComponents/ContactLeftList\";\n\nimport {\n  QuestionText,\n  SupplementalText,\n  paperClass,\n} from \"../FormComponents/QuestionStyles\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport { validateField } from \"../../utils/validate\";\n\nimport { ApaPreview } from \"../FormComponents/ApaPreview\";\n\nimport regions from \"../../regions\";\n\nconst ContactTab = ({\n  disabled,\n  record,\n  userContacts,\n  updateRecord,\n  saveToContacts,\n}) => {\n  const { language, region } = useParams();\n  const { contacts = [] } = record;\n\n  const updateContacts = updateRecord(\"contacts\");\n\n  const [activeContact, setActiveContact] = useState(0);\n\n  // Instead of updating record.<item> we are\n  // updating record.contacts[activeContact].<item>\n  function updateContactEvent(key) {\n    return (e) => {\n      const newContacts = [...contacts];\n      newContacts[activeContact][key] = e.target.value;\n      updateContacts(newContacts);\n    };\n  }\n\n  function updateContact(key) {\n    return (value) => {\n      const newContacts = [...contacts];\n      newContacts[activeContact][key] = value;\n      updateContacts(newContacts);\n    };\n  }\n\n  function updateOrgFromRor(payload) {\n    const newContacts = [...contacts];\n    newContacts[activeContact].orgRor = payload.id;\n    newContacts[activeContact].orgName = payload.name;\n    newContacts[activeContact].orgURL = payload.links.find(() => true) || \"\";\n    newContacts[activeContact].orgCity =\n      payload.addresses.find(() => true).city || \"\";\n    newContacts[activeContact].orgCountry = payload.country.country_name;\n    updateContacts(newContacts);\n  }\n\n  function updateIndFromOrcid(payload) {\n    const { name, emails } = payload.person;\n    const indEmail = emails.email.length > 0 ? emails.email[0].email : \"\";\n    const lastName = name[\"family-name\"] ? name[\"family-name\"].value : \"\";\n\n    const newContacts = [...contacts];\n    newContacts[activeContact].indOrcid = payload[\"orcid-identifier\"].uri;\n    newContacts[activeContact].givenNames = name[\"given-names\"].value;\n    newContacts[activeContact].indEmail = indEmail;\n    newContacts[activeContact].lastName = lastName;\n    updateContacts(newContacts);\n  }\n\n  const showApaBox =\n    record.title?.[language] &&\n    contacts.length &&\n    record.created &&\n    record.contacts?.some((c) => c.inCitation);\n\n  const contact = contacts[activeContact];\n  return (\n    <Grid container spacing={3}>\n      <Paper style={paperClass}>\n        <Grid item xs>\n          <QuestionText>\n            <I18n>\n              <En>\n                Please enter at least one Metadata Custodian <b>and</b> one Data\n                Owner for this dataset that can work with{\" \"}\n                {regions[region].title[language]} Staff to finalize this\n                Metadata Record. You also must select at least one contact to\n                appear in the citation.\n              </En>\n              <Fr>\n                Veuillez saisir au moins un Dépositaire des métadonnées ET un\n                propriétaire des données de ce jeu. Ces personnes pourraient\n                être appelées à collaborer avec le personnel\n                {regions[region].titleFrPossessive} pour finaliser la saisie des\n                informations. Vous devez également sélectionner au moins un\n                contact pour apparaître dans la citation.\n              </Fr>\n            </I18n>\n            <RequiredMark passes={validateField(record, \"contacts\")} />\n            <SupplementalText>\n              <I18n>\n                <En>\n                  It is important to include all individuals from the chain of\n                  attribution to ensure all involved parties are credited\n                  appropriately for their role in creating this dataset. Saved\n                  contacts can be selected from the list below.\n                </En>\n                <Fr>\n                  Il est important d'inclure toutes les personnes ayant\n                  travaillé sur le jeu de données afin de s'assurer que toutes\n                  les parties concernées soient créditées de façon appropriée\n                  pour leur rôle dans la création de ce jeu de données. Les\n                  contacts sauvegardés peuvent être sélectionnés dans la liste\n                  ci-dessous.\n                </Fr>\n              </I18n>\n            </SupplementalText>\n          </QuestionText>\n        </Grid>\n      </Paper>\n      {showApaBox && (\n        <Paper style={paperClass}>\n          <QuestionText>\n            <div>\n              <I18n>\n                <En>\n                  This is how your record citation will look in the catalogue.\n                  To change the citation order, drag the{\" \"}\n                  <DragHandleIcon style={{ verticalAlign: \"middle\" }} /> symbol.\n                </En>\n                <Fr>\n                  Voici à quoi ressemblera votre citation dans le catalogue.\n                  Seuls les contacts dont la case «Auteur cité» est cochée\n                  apparaissent. Seuls les rôles étoilés apparaîtront dans la\n                  citation. Changer la commande, faites glisser le{\" \"}\n                  <DragHandleIcon style={{ verticalAlign: \"middle\" }} />.\n                </Fr>\n              </I18n>\n            </div>\n          </QuestionText>\n          <SupplementalText>\n            <ApaPreview language={language} record={record} />\n          </SupplementalText>\n        </Paper>\n      )}\n\n      <Grid container direction=\"row\" style={{ marginLeft: \"5px\" }}>\n        <Grid item xs={5}>\n          <ContactLeftList\n            contacts={contacts}\n            updateContacts={updateContacts}\n            setActiveContact={setActiveContact}\n            activeContact={activeContact}\n            disabled={disabled}\n            userContacts={userContacts}\n            saveToContacts={saveToContacts}\n          />\n        </Grid>\n        {contact && (\n          <Grid item xs>\n            <Grid container direction=\"column\">\n              <Paper style={paperClass}>\n                <Grid container direction=\"column\" spacing={3}>\n                  <Grid item xs>\n                    <EditContact\n                      showRolePicker\n                      value={contact}\n                      handleClear={(key) => updateContact(key)(\"\")}\n                      updateContactEvent={updateContactEvent}\n                      updateContact={updateContact}\n                      updateContactRor={updateOrgFromRor}\n                      updateContactOrcid={updateIndFromOrcid}\n                      disabled={disabled}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactTab;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  CircularProgress,\n  Tooltip,\n} from \"@material-ui/core\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useParams } from \"react-router-dom\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport { UserContext } from \"../../providers/UserProvider\";\n\n// AWS translate size limit is 5KB\nconst MAX_AWS_TRANSLATE_SIZE = 5000;\n\nconst BilingualTextInput = ({\n  onChange,\n  value,\n  name,\n  multiline,\n  disabled,\n  error,\n  translationButonDisabled = false,\n}) => {\n  const { translate } = useContext(UserContext);\n  const [awaitingTranslation, setAwaitingTranslation] = useState(false);\n\n  function handleEvent(e) {\n    const newData = { ...value, [e.target.name]: e.target.value };\n    const newDataEvent = { target: { name, value: newData } };\n    onChange(newDataEvent);\n  }\n  const { language } = useParams();\n  let languages;\n\n  const textSizeByes = new Blob([value?.[language]]).size;\n  const textTooBig = textSizeByes >= MAX_AWS_TRANSLATE_SIZE;\n\n  if (language === \"en\") languages = [\"en\", \"fr\"];\n  else languages = [\"fr\", \"en\"];\n  return (\n    <div>\n      {languages.map((lang, i) => (\n        <div key={lang}>\n          <TextField\n            name={lang}\n            fullWidth\n            value={value?.[lang] || \"\"}\n            onChange={handleEvent}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {lang.toUpperCase()}\n                </InputAdornment>\n              ),\n            }}\n            multiline={multiline}\n            disabled={disabled}\n            error={Boolean(error)}\n          />\n          {i === 0 && !translationButonDisabled && (\n            <Tooltip\n              title={\n                <I18n\n                  en=\"Translate english to french\"\n                  fr=\"Traduire du français en anglais\"\n                />\n              }\n            >\n              <span>\n                <Button\n                  style={{ margin: \"10px\" }}\n                  startIcon={\n                    awaitingTranslation ? (\n                      <CircularProgress size={20} />\n                    ) : (\n                      <TranslateIcon />\n                    )\n                  }\n                  endIcon={awaitingTranslation ? null : <ArrowDownwardIcon />}\n                  disabled={\n                    disabled ||\n                    awaitingTranslation ||\n                    !value?.[lang] ||\n                    textTooBig\n                  }\n                  onClick={() => {\n                    const alternateLanguage = languages[1];\n                    setAwaitingTranslation(true);\n\n                    translate({ text: value[lang], fromLang: lang }).then(\n                      (translatedText) => {\n                        setAwaitingTranslation(false);\n                        const translation = translatedText.data;\n                        handleEvent({\n                          target: {\n                            name: alternateLanguage,\n                            value: translation,\n                          },\n                        });\n                      }\n                    );\n                  }}\n                >\n                  <I18n>\n                    <En>Translate</En>\n                    <Fr>Traduire</Fr>\n                  </I18n>\n                </Button>\n                {textTooBig && (\n                  <I18n>\n                    <En>\n                      Translation is disabled because text is larger than{\" \"}\n                      {MAX_AWS_TRANSLATE_SIZE} characters.\n                    </En>\n                    <Fr>\n                      La traduction est désactivée car le texte est plus grand\n                      que {MAX_AWS_TRANSLATE_SIZE} caractères.\n                    </Fr>\n                  </I18n>\n                )}\n              </span>\n            </Tooltip>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BilingualTextInput;\n","import React from \"react\";\nimport {\n  Add,\n  Delete,\n  ArrowUpwardSharp,\n  ArrowDownwardSharp,\n} from \"@material-ui/icons\";\nimport { Button, Grid, Paper, TextField } from \"@material-ui/core\";\nimport validator from \"validator\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nimport BilingualTextInput from \"./BilingualTextInput\";\nimport RequiredMark from \"./RequiredMark\";\nimport { deepCopy } from \"../../utils/misc\";\nimport { QuestionText, paperClass, SupplementalText } from \"./QuestionStyles\";\n\nconst validateURL = (url) => !url || validator.isURL(url);\n\nconst Resources = ({ updateResources, resources, disabled }) => {\n  const emptyResource = { url: \"\", name: \"\", description: { en: \"\", fr: \"\" } };\n\n  function addResource() {\n    updateResources(resources.concat(deepCopy(emptyResource)));\n  }\n\n  // removes the resource section from the list at index i\n  function removeResource(i) {\n    updateResources(resources.filter((e, index) => index !== i));\n  }\n\n  // move the resource section\n  function moveResource(i, newIndex) {\n    if (newIndex < 0 || newIndex >= resources.length) return;\n    const element = resources.splice(i, 1)[0];\n    resources.splice(newIndex, 0, element);\n    updateResources(resources);\n  }\n  const nameLabel = <I18n en=\"Name\" fr=\"Titre\" />;\n  const descriptionLabel = <I18n en=\"Description\" fr=\"Description\" />;\n\n  return (\n    <div>\n      {resources.map((dist = deepCopy(emptyResource), i) => {\n        const urlIsValid = !dist.url || validateURL(dist.url);\n        function handleResourceChange(key) {\n          return (e) => {\n            const newValue = [...resources];\n            newValue[i][key] = e.target.value;\n            updateResources(newValue);\n          };\n        }\n        return (\n          <Paper key={i} style={paperClass}>\n            <Grid container direction=\"column\" spacing={3}>\n              <Grid item xs>\n                <QuestionText>\n                  <I18n>\n                    <En>Enter a name for the resource</En>\n                    <Fr>Entrez un titre pour la ressource</Fr>\n                  </I18n>\n                  <RequiredMark passes={dist.name?.en || dist.name?.fr} />\n                </QuestionText>\n                <BilingualTextInput\n                  label={nameLabel}\n                  value={dist.name}\n                  onChange={handleResourceChange(\"name\")}\n                  fullWidth\n                  disabled={disabled}\n                />\n              </Grid>\n              <Grid item xs>\n                <QuestionText>\n                  <I18n>\n                    <En>Enter the URL for the resource</En>\n                    <Fr>Entrez l'URL de la ressource</Fr>\n                  </I18n>\n\n                  <RequiredMark passes={validator.isURL(dist.url)} />\n                  <SupplementalText>\n                    <I18n>\n                      <En>\n                        <p>\n                          The link may be to a formal data resource on another\n                          repository or a link to a personal online drive (e.g.\n                          Google Drive).\n                        </p>\n                      </En>\n                      <Fr>\n                        <p>\n                          Le lien peut être vers une ressource de données\n                          formelle sur un autre dépôt de données ou un lien vers\n                          un disque personnel en ligne (par exemple Google\n                          Drive).\n                        </p>\n                      </Fr>\n                    </I18n>\n                  </SupplementalText>\n                </QuestionText>\n\n                <TextField\n                  helperText={\n                    !urlIsValid && <I18n en=\"Invalid URL\" fr=\"URL non valide\" />\n                  }\n                  error={!urlIsValid}\n                  label=\"URL\"\n                  value={dist.url}\n                  onChange={handleResourceChange(\"url\")}\n                  fullWidth\n                  disabled={disabled}\n                />\n              </Grid>\n              <Grid item xs>\n                <QuestionText>\n                  <I18n>\n                    <En>Enter a description of the resource</En>\n                    <Fr>Entrez une description de la ressource</Fr>\n                  </I18n>\n                </QuestionText>{\" \"}\n                <BilingualTextInput\n                  name=\"description\"\n                  label={descriptionLabel}\n                  value={dist.description}\n                  onChange={handleResourceChange(\"description\")}\n                  disabled={disabled}\n                />\n              </Grid>\n              <Grid item xs>\n                <Button\n                  startIcon={<Delete />}\n                  disabled={disabled}\n                  onClick={() => removeResource(i)}\n                >\n                  <I18n>\n                    <En>Remove item</En>\n                    <Fr>Supprimer la ressource</Fr>\n                  </I18n>\n                </Button>\n                <Button\n                  startIcon={<ArrowUpwardSharp />}\n                  disabled={disabled || i - 1 < 0}\n                  onClick={() => moveResource(i, i - 1)}\n                >\n                  <I18n>\n                    <En>Move up</En>\n                    <Fr>Déplacer vers le haut</Fr>\n                  </I18n>\n                </Button>\n                <Button\n                  startIcon={<ArrowDownwardSharp />}\n                  disabled={disabled || i + 1 >= resources.length}\n                  onClick={() => moveResource(i, i + 1)}\n                >\n                  <I18n>\n                    <En>Move down</En>\n                    <Fr>Déplacer vers le bas</Fr>\n                  </I18n>\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        );\n      })}\n\n      <Paper style={paperClass}>\n        <Button startIcon={<Add />} disabled={disabled} onClick={addResource}>\n          <I18n>\n            <En>Add item</En>\n            <Fr>Ajouter une ressource</Fr>\n          </I18n>\n        </Button>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Resources;\n","import React from \"react\";\n\nimport { Paper } from \"@material-ui/core\";\n\nimport Resources from \"../FormComponents/Resources\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport {\n  paperClass,\n  QuestionText,\n  SupplementalText,\n} from \"../FormComponents/QuestionStyles\";\nimport { validateField } from \"../../utils/validate\";\n\nconst ResourcesTab = ({ disabled, record, updateRecord }) => {\n  const updateResources = updateRecord(\"distribution\");\n  return (\n    <div>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <En>Enter any links to information associated with this dataset.</En>\n          <Fr>\n            Entrez les liens vers les informations associées à ce jeu de\n            données.\n          </Fr>\n          <RequiredMark passes={validateField(record, \"distribution\")} />\n          <SupplementalText>\n            <I18n>\n              <En>\n                Some examples of resources are:\n                <ul>\n                  <li>supporting documentation (eg text or pdf files)</li>\n                  <li>CSV files</li>\n                  <li>ERDDAP datasets</li>\n                  <li>images</li>\n                </ul>\n                At least one item is required. A Resource URL can link to a\n                (compressed) data package or folder.\n              </En>\n              <Fr>\n                Voici quelques exemples de ressources :\n                <ul>\n                  <li>\n                    Documentation à l'appui (par exemple, fichiers texte ou pdf)\n                  </li>\n                  <li>Fichiers CSV</li>\n                  <li>Jeux de données ERDDAP</li>\n                  <li>Images</li>\n                </ul>\n                Au moins une ressource est requise. Une URL de ressource peut\n                être liée à un paquet de données (compressé) ou à un dossier.\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n      </Paper>\n      <Resources\n        paperClass={paperClass}\n        resources={record.distribution || []}\n        updateResources={updateResources}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport default ResourcesTab;\n","import {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport React from \"react\";\n\nimport { I18n } from \"../I18n\";\n\nfunction formatDate(date) {\n  try {\n    const d = date.getDate();\n    const m = date.getMonth();\n    const y = date.getFullYear();\n    // This is to get around the issue of timezones and dates\n    return new Date(y, m, d, 12, 0, 0, 0);\n  } catch (e) {\n    return null;\n  }\n}\nconst DateInput = ({ onChange, value, name, disabled, dateStart, dateEnd }) => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        disabled={disabled}\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label={<I18n en=\"Select date\" fr=\"Sélectionner une date\" />}\n        format=\"yyyy-MM-dd\"\n        value={value}\n        minDate={dateStart || \"1100-01-01\"}\n        maxDate={dateEnd}\n        onChange={(dateSelected) => {\n          return onChange({\n            target: { name, value: formatDate(dateSelected) },\n          });\n        }}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default DateInput;\n","const keywords = [\n  { en: \"abundance and biomass\", fr: \"abondance et biomasse\" },\n  { en: \"sea access\", fr: \"accès à la mer\" },\n  { en: \"decision making\", fr: \"aide à la décision\" },\n  { en: \"protected areas\", fr: \"aires protégées\" },\n  { en: \"knowledge improvement\", fr: \"amélioration des connaissances\" },\n  { en: \"land-use planning\", fr: \"aménagement du territoire\" },\n  { en: \"water purification\", fr: \"assainissement des eaux\" },\n  { en: \"striped bass\", fr: \"bar rayé\" },\n  { en: \"watershed\", fr: \"bassin versant\" },\n  { en: \"habitat characterization\", fr: \"caractérisation des habitats\" },\n  { en: \"coastal characterization\", fr: \"caractérisation des rives\" },\n  { en: \"climate change\", fr: \"changement climatique\" },\n  { en: \"chlorophyll a\", fr: \"chlorophylle a\" },\n  { en: \"resource conservation\", fr: \"conservation des ressources\" },\n  { en: \"water consumption\", fr: \"consommation d'eau\" },\n  { en: \"sea currents\", fr: \"courant marin\" },\n  { en: \"crustacean\", fr: \"crustacé\" },\n  { en: \"fresh water flow\", fr: \"débits eau douce\" },\n  { en: \"water density\", fr: \"densité eau\" },\n  { en: \"sustainable development\", fr: \"développement durable\" },\n  { en: \"ocean-atmosphere exchange\", fr: \"échange océan-atmosphère\" },\n  { en: \"sampling\", fr: \"échantillonnage\" },\n  { en: \"crayfish\", fr: \"écrevisses\" },\n  { en: \"mariculture\", fr: \"entreprises de maricultures\" },\n  { en: \"coastal erosion\", fr: \"érosion des côtes\" },\n  { en: \"endangered species\", fr: \"espèces en péril\" },\n  { en: \"invasive species\", fr: \"espèces envahissante\" },\n  { en: \"coastal flora\", fr: \"flore côtière\" },\n  { en: \"fluorescence\", fr: \"fluorescence\" },\n  { en: \"spawning\", fr: \"fraie\" },\n  { en: \"community management\", fr: \"gestion communautaire\" },\n  { en: \"resource management\", fr: \"gestion des ressources\" },\n  { en: \"integrated management\", fr: \"gestion intégrée\" },\n  { en: \"sea ice\", fr: \"glace de mer\" },\n  { en: \"sensitive habitat\", fr: \"habitat sensible\" },\n  { en: \"important habitat\", fr: \"habitats important\" },\n  { en: \"hydrocarbon\", fr: \"hydrocarbure\" },\n  { en: \"incidents\", fr: \"incidents\" },\n  { en: \"general information\", fr: \"informations générales\" },\n  { en: \"wildlife inventory\", fr: \"inventaire faunique\" },\n  { en: \"fish inventory\", fr: \"inventaire poisson\" },\n  { en: \"macroalgae\", fr: \"macroalgue\" },\n  { en: \"benthic macrofauna\", fr: \"macrofaune benthique\" },\n  { en: \"marine mammal\", fr: \"mammifères marins\" },\n  { en: \"marsh\", fr: \"marais\" },\n  { en: \"meteorology\", fr: \"météorologie\" },\n  { en: \"wetlands\", fr: \"milieux humides\" },\n  { en: \"natural environments of interest\", fr: \"milieux naturels d'intérêt\" },\n  { en: \"enhancement\", fr: \"mise en valeur\" },\n  { en: \"oceanographic missions\", fr: \"missions océanographique\" },\n  { en: \"mollusc\", fr: \"mollusque\" },\n  { en: \"sea level\", fr: \"niveau eau\" },\n  { en: \"seabirds\", fr: \"oiseaux marins\" },\n  { en: \"migrator birds\", fr: \"oiseaux migrateurs\" },\n  { en: \"commercial fisheries\", fr: \"pêches commerciales\" },\n  { en: \"experimental fisheries\", fr: \"pêches expérimentales\" },\n  { en: \"physical-chemical\", fr: \"physico-chimie\" },\n  { en: \"phytoplankton\", fr: \"phytoplancton\" },\n  { en: \"sea grass\", fr: \"plantes aquatique\" },\n  { en: \"fish\", fr: \"poisson\" },\n  { en: \"coastal pollution\", fr: \"pollution côtière\" },\n  { en: \"atmospheric pressure\", fr: \"pression atmosphérique\" },\n  { en: \"coast protection\", fr: \"protection des côtes\" },\n  { en: \"habitat protection\", fr: \"protection des habitats\" },\n  { en: \"water quality\", fr: \"qualité eau\" },\n  { en: \"radiation\", fr: \"radiation\" },\n  { en: \"maritime resources\", fr: \"ressources maritimes\" },\n  { en: \"ecological rehabilitation\", fr: \"réhabilitation écologique\" },\n  { en: \"shore restoration\", fr: \"restauration des rives\" },\n  { en: \"experimental restoration\", fr: \"restauration expérimentale\" },\n  { en: \"habitat restoration\", fr: \"restauration habitat\" },\n  { en: \"coastal risks\", fr: \"risques côtiers\" },\n  { en: \"citizen data\", fr: \"saisie citoyenne\" },\n  { en: \"salinity\", fr: \"salinité\" },\n  { en: \"sediment\", fr: \"sédiment\" },\n  { en: \"fishing sites\", fr: \"sites de pêches\" },\n  { en: \"annual follow-up\", fr: \"suivi annuel\" },\n  { en: \"species tracking\", fr: \"suivi des espèces\" },\n  { en: \"habitat tracking\", fr: \"suivi habitat\" },\n  { en: \"taxonomy\", fr: \"taxonomie\" },\n  { en: \"remote sensing\", fr: \"télédétection\" },\n  { en: \"water temperature\", fr: \"température de l'eau\" },\n  { en: \"sea turtles\", fr: \"tortue de mer\" },\n  { en: \"land-use\", fr: \"utilisation du territoire\" },\n  { en: \"sustainabilty\", fr: \"utilisation durable\" },\n  { en: \"waves\", fr: \"vagues\" },\n  { en: \"wind\", fr: \"vents\" },\n  { en: \"coastal zone\", fr: \"zone côtière\" },\n];\nexport default keywords;\n","import React, { useState } from \"react\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  TextField,\n  Button,\n  Grid,\n  Chip,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { ArrowDownward } from \"@material-ui/icons\";\nimport keywordList from \"../../utils/keywords\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nfunction translate(word, toLang = \"fr\") {\n  if (!word) return \"\";\n  const fromLang = toLang === \"fr\" ? \"en\" : \"fr\";\n  const foundWord = keywordList.find((e) => e && e[fromLang] === word);\n  if (foundWord) return foundWord[toLang];\n  return \"\";\n}\n\nconst KeywordsInput = ({\n  onChange,\n  value = { en: [], fr: [] },\n  name,\n  disabled,\n}) => {\n  const { language } = useParams();\n  const [selectedKeyword, setKeyword] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selectedKeywordAltLang, setSelectedKeywordAltLang] = useState(\"\");\n\n  const languages = [\"en\", \"fr\"];\n\n  if (language === \"fr\") languages.reverse();\n  const altLanguage = languages[1];\n\n  function cleanList(list) {\n    return list\n      .map((item) => (item || \"\").trim())\n      .filter((item, i, arr) => item && arr.indexOf(item) === i);\n  }\n\n  function handleDelete(chipText, deletedChipLang) {\n    return () => {\n      const newValue = {\n        en: value.en,\n        fr: value.fr,\n        [deletedChipLang]: value[deletedChipLang].filter(\n          (keyword) => keyword !== chipText\n        ),\n      };\n\n      onChange({\n        target: {\n          name,\n          value: newValue,\n        },\n      });\n    };\n  }\n  function handleHelperChange() {\n    const keyword = selectedKeyword || inputValue;\n    if (keyword || selectedKeywordAltLang) {\n      const newValue = { en: value.en, fr: value.fr };\n\n      const userKeywordList = [...value[language], keyword];\n      const userKeywordListAlt = [\n        ...value[altLanguage],\n        selectedKeywordAltLang,\n      ];\n\n      if (keyword) newValue[language] = cleanList(userKeywordList);\n      if (selectedKeywordAltLang)\n        newValue[altLanguage] = cleanList(userKeywordListAlt);\n\n      onChange({\n        target: {\n          name,\n          value: newValue,\n        },\n      });\n    }\n    setKeyword(\"\");\n    setSelectedKeywordAltLang(\"\");\n    setInputValue(\"\");\n  }\n\n  return (\n    <Grid container spacing={3} direction=\"column\">\n      <Grid item xs>\n        <Autocomplete\n          inputValue={inputValue}\n          onInputChange={(event, newInputValue) => {\n            setInputValue(newInputValue);\n          }}\n          disabled={disabled}\n          onChange={(e, keyword) =>\n            setSelectedKeywordAltLang(translate(keyword, altLanguage))\n          }\n          value={selectedKeyword || \"\"}\n          freeSolo\n          options={keywordList\n            .sort((a, b) => a[language].localeCompare(b[language]))\n            .map((e) => e[language])}\n          fullWidth\n          renderInput={(params) => (\n            <TextField\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              {...params}\n              label={language.toUpperCase()}\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs>\n        <TextField\n          value={selectedKeywordAltLang || \"\"}\n          onChange={(e) => setSelectedKeywordAltLang(e.target.value)}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                {altLanguage.toUpperCase()}\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={3}>\n        <Button\n          disabled={\n            disabled ||\n            (!selectedKeyword && !selectedKeywordAltLang && !inputValue)\n          }\n          startIcon={<ArrowDownward />}\n          onClick={handleHelperChange}\n        >\n          <I18n>\n            <En>Add</En>\n            <Fr>Ajouter</Fr>\n          </I18n>\n        </Button>\n      </Grid>\n\n      <Grid item xs>\n        {languages\n          .filter((lang) => value[lang]?.length)\n          .map((lang) => (\n            <div style={{ margin: \"15px\" }} key={lang}>\n              <InputAdornment position=\"start\" style={{ margin: \"10px\" }}>\n                {lang.toUpperCase()}\n              </InputAdornment>\n              <Grid container direction=\"row\">\n                <Grid item xs>\n                  {(value[lang] || []).map((keyword, i) => (\n                    <Chip\n                      key={i}\n                      disabled={disabled}\n                      label={keyword}\n                      onDelete={handleDelete(keyword, lang)}\n                      color=\"primary\"\n                      style={{ margin: \"5px\" }}\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n            </div>\n          ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default KeywordsInput;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Paper,\n  TextField,\n  Grid,\n  IconButton,\n  Tooltip,\n  Button,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useParams } from \"react-router-dom\";\nimport { OpenInNew, Update } from \"@material-ui/icons\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport { progressCodes } from \"../../isoCodeLists\";\nimport { eovs, eovCategories } from \"../../eovs.json\";\n\nimport firebase from \"../../firebase\";\nimport BilingualTextInput from \"../FormComponents/BilingualTextInput\";\nimport CheckBoxList from \"../FormComponents/CheckBoxList\";\nimport DateInput from \"../FormComponents/DateInput\";\nimport KeywordsInput from \"../FormComponents/KeywordsInput\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\nimport SelectInput from \"../FormComponents/SelectInput\";\nimport licenses from \"../../utils/licenses\";\nimport recordToDataCite from \"../../utils/recordToDataCite\";\nimport { validateField, validateDOI } from \"../../utils/validate\";\n\nimport {\n  QuestionText,\n  SupplementalText,\n  paperClass,\n} from \"../FormComponents/QuestionStyles\";\n\nimport regions from \"../../regions\";\nimport { UserContext } from \"../../providers/UserProvider\";\n\nconst IdentificationTab = ({\n  disabled,\n  record,\n  handleUpdateRecord,\n  updateRecord,\n  projects,\n}) => {\n  const { createDraftDoi, updateDraftDoi, deleteDraftDoi } = useContext(UserContext);\n  const { language, region, userID } = useParams();\n  const regionInfo = regions[region];\n  const doiIsValid =validateDOI(record.datasetIdentifier)\n  \n  const languageUpperCase = language.toUpperCase();\n  const [doiGenerated, setDoiGenerated] = useState(false);\n  const [doiErrorFlag, setDoiErrorFlag] = useState(false);\n  const [loadingDoi, setLoadingDoi] = useState(false);\n  const [loadingDoiUpdate, setLoadingDoiUpdate] = useState(false);\n  const [loadingDoiDelete, setLoadingDoiDelete] = useState(false);\n  const [doiUpdateFlag, setDoiUpdateFlag] = useState(false);\n\n  const generateDoiDisabled = doiGenerated || loadingDoi || (record.doiCreationStatus !== \"\" || record.recordID === \"\");\n  const showGenerateDoi = regionInfo.datacitePrefix;\n  const showUpdateDoi = record.doiCreationStatus !== \"\";\n  const showDeleteDoi = record.doiCreationStatus !== \"\" && !doiErrorFlag && regionInfo.datacitePrefix;\n\n  const CatalogueLink = ({ lang }) => (\n    <a\n      href={regionInfo.catalogueURL[lang]}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {regionInfo.catalogueURL[lang]}\n    </a>\n  );\n\n  // sort into array of objects sorted by name?\n  const licensesSorted = Object.values(licenses).sort((a, b) =>\n    (a.title[language] || a.title.en).localeCompare(\n      b.title[language] || a.title.en,\n      language\n    )\n  );\n\n  async function handleGenerateDOI() {\n    setLoadingDoi(true);\n\n    try {\n      const mappedDataCiteObject = recordToDataCite(record, language, region);\n      await createDraftDoi(mappedDataCiteObject)\n        .then((response) => {\n          return response.data.data.attributes;\n        })\n        .then(async (attributes) => {\n          // Update the record object with datasetIdentifier and doiCreationStatus\n          updateRecord(\"datasetIdentifier\")(`https://doi.org/${attributes.doi}`);\n          updateRecord(\"doiCreationStatus\")(\"draft\");\n\n          // Create a new object with updated properties\n          const updatedRecord = {\n            ...record,\n            datasetIdentifier: `https://doi.org/${attributes.doi}`,\n            doiCreationStatus: \"draft\",\n          };\n\n          // Save the updated record to the Firebase database\n          const recordsRef = firebase\n            .database()\n            .ref(region)\n            .child(\"users\")\n            .child(userID)\n            .child(\"records\");\n\n          if (record.recordID) {\n            await recordsRef\n              .child(record.recordID)\n              .update({ datasetIdentifier: updatedRecord.datasetIdentifier, doiCreationStatus: updatedRecord.doiCreationStatus });\n          }\n\n          setDoiGenerated(true);\n        })\n        .finally(() => {\n          setLoadingDoi(false);\n        });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      setDoiErrorFlag(true);\n      throw err;\n    }\n  }\n\n  async function handleUpdateDraftDOI() {\n    setLoadingDoiUpdate(true);\n\n    try {\n      const mappedDataCiteObject = recordToDataCite(record, language, region);\n      delete mappedDataCiteObject.data.type;\n      delete mappedDataCiteObject.data.attributes.prefix;\n\n      // Extract DOI from the full URL\n      const doi = record.datasetIdentifier.replace('https://doi.org/', '');\n\n      const dataObject = {\n        doi,\n        data: mappedDataCiteObject,\n      }\n\n      const response = await updateDraftDoi( dataObject );\n      const statusCode = response.data.status;\n\n      if (statusCode === 200) {\n        setDoiUpdateFlag(true);\n      } else {\n        setDoiErrorFlag(true);\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Error updating draft DOI: ', err);\n      setDoiErrorFlag(true);\n      throw err;\n    } finally {\n      setLoadingDoiUpdate(false);\n    }\n  }\n\n  async function handleDeleteDOI() {\n    setLoadingDoiDelete(true);\n\n    try {\n      // Extract DOI from the full URL\n      const doi = record.datasetIdentifier.replace('https://doi.org/', '');\n\n      deleteDraftDoi(doi)\n        .then((response) => response.data)\n        .then(async (statusCode) => {\n          if (statusCode === 204) {\n            // Update the record object with datasetIdentifier and doiCreationStatus\n            updateRecord(\"datasetIdentifier\")(\"\");\n            updateRecord(\"doiCreationStatus\")(\"\");\n\n            // Create a new object with updated properties\n            const updatedRecord = {\n              ...record,\n              datasetIdentifier: \"\",\n              doiCreationStatus: \"\",\n            };\n\n            // Save the updated record to the Firebase database\n            const recordsRef = firebase\n              .database()\n              .ref(region)\n              .child(\"users\")\n              .child(userID)\n              .child(\"records\");\n\n            if (record.recordID) {\n              await recordsRef\n                .child(record.recordID)\n                .update({ datasetIdentifier: updatedRecord.datasetIdentifier, doiCreationStatus: updatedRecord.doiCreationStatus });\n            }\n\n            setDoiGenerated(false);\n          } else {\n            setDoiErrorFlag(true);\n          }\n        })\n        .finally(() => {\n          setLoadingDoiDelete(false);\n        });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      setDoiErrorFlag(true);\n      throw err;\n    }\n  }\n\n  return (\n    <div>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the dataset title? Required in English and French.</En>\n            <Fr>\n              Quel est le titre du jeu de données? Obligatoire dans les deux\n              langues.\n            </Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"title\")} />\n          <SupplementalText>\n            <I18n>\n              <En>\n                <p>Recommended title includes: What, Where, When.</p>\n                <p>\n                  Title should be precise enough so that the user will not have\n                  to open the dataset to understand its contents. Title should\n                  not have acronyms, special characters, or use specialized\n                  nomenclature. This will appear as the title that is shown for\n                  this dataset in the {regionInfo.catalogueTitle.en}.\n                </p>\n              </En>\n              <Fr>\n                <p>Le titre recommandé comprend : Quoi, Où, Quand.</p>\n                <p>\n                  Le titre doit être suffisamment précis pour que l'utilisateur\n                  n'ait pas à ouvrir le ensemble de données pour comprendre son\n                  contenu. Le titre ne doit pas avoir des acronymes, des\n                  caractères spéciaux ou utiliser une nomenclature spécialisée.\n                  Ceci apparaîtra comme titre de votre jeu de données dans le{\" \"}\n                  {regionInfo.catalogueTitle.fr}.\n                </p>\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n\n        <BilingualTextInput\n          value={record.title}\n          onChange={handleUpdateRecord(\"title\")}\n          disabled={disabled}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the primary language of the dataset?</En>\n            <Fr>Quelle est la langue principale du jeu de données?</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"language\")} />\n        </QuestionText>\n        <SelectInput\n          value={record.language}\n          onChange={handleUpdateRecord(\"language\")}\n          options={[\"en\", \"fr\"]}\n          optionLabels={[\"English\", \"Français\"]}\n          disabled={disabled}\n        />\n      </Paper>\n\n      {projects.length ? (\n        <Paper style={paperClass}>\n          <QuestionText>\n            <I18n>\n              <En>\n                What are the projects that this record is part of? To add a\n                project, email{\" \"}\n              </En>\n              <Fr>\n                Quels sont les projets dont ce disque fait partie? Pour ajouter\n                un projet, e-mail{\" \"}\n              </Fr>\n            </I18n>\n            <a href={`mailto:${regionInfo.email}`}>{regionInfo.email}</a>.\n          </QuestionText>\n          <CheckBoxList\n            value={record.projects || []}\n            labelSize={6}\n            onChange={updateRecord(\"projects\")}\n            options={projects}\n            optionLabels={projects}\n            disabled={disabled}\n          />\n        </Paper>\n      ) : (\n        <div />\n      )}\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>\n              Enter an abstract or summary for the dataset. Required in both\n              languages.\n            </En>\n            <Fr>Décrivez votre jeu de données.</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"abstract\")} />\n          <SupplementalText>\n            <I18n>\n              <En>\n                This information will appear as the summary text that is shown\n                for this dataset in the {regionInfo.catalogueTitle.en}. Browsing\n                datasets at <CatalogueLink lang=\"en\" /> can help provide a sense\n                of the type of descriptions that are typically used for this\n                section of the record. As a general rule, this section should be\n                worded with as little jargon as possible to give potential users\n                an understanding of your dataset. Use a maximum of 500 words.\n                For detailed methods please submit supplemental materials with\n                your data.\n                <br />\n                <br />\n                Suggested abstract points -\n                <div>\n                  <ul>\n                    <li>\n                      <b>What</b>- variables that were measured\n                    </li>\n                    <li>\n                      <b>When</b>- temporal coverage of the data, frequency of\n                      the measurements/observations\n                    </li>\n                    <li>\n                      <b>Where</b>- spatial coverage of the data, sampling\n                      sites, sensor tracks, laboratory spaces\n                    </li>\n                    <li>\n                      <b>Why</b>- a high level statement on the outcome this\n                      data is meant to inform\n                    </li>\n                  </ul>\n                </div>\n              </En>\n\n              <Fr>\n                Cette description correspond au résumé de votre jeu de données\n                lorsqu’il sera publié dans le {regionInfo.catalogueTitle.fr}{\" \"}\n                <CatalogueLink lang=\"fr\" />. Pour vous aider à rédiger ce\n                résumé, vous pouvez vous inspirer d’autres jeux de données déjà\n                publiés dans le catalogue. Ce champ doit être compris par tout\n                type d’utilisateur, nous vous recommandons un maximum de 500\n                mots, l’utilisation d’un langage accessible et de limiter\n                l’utilisation de vocabulaire de type jargon.\n                <br />\n                <br />\n                Suggestion de points à aborder dans votre résumé:\n                <div>\n                  <ul>\n                    <li>\n                      <b>Quoi</b>: Les variables qui ont été mesurées\n                    </li>\n                    <li>\n                      <b>Quand</b>: Couverture temporelle de la donnée,\n                      fréquence de la mesure/observation\n                    </li>\n                    <li>\n                      <b>Où</b>: Couverture spatiale de la donnée, nom/lieu des\n                      sites d’échantillonnages, déplacement enregistrés d’un\n                      capteur, laboratoire, etc.\n                    </li>\n                    <li>\n                      <b>Comment</b>: Équipement, procédures, protocoles,\n                      calibration, assurance/contrôle de la qualité\n                    </li>\n                    <li>\n                      <b>Qui</b>: Participants, membres du personnel\n                    </li>\n                    <li>\n                      <b>Pourquoi</b>: Quelques lignes pour décrire le contexte\n                      dans lequel les données ont été échantillonnées et comment\n                      elles permettent de répondre à la problématique (p. ex:\n                      quelles informations peuvent-elles apporter)\n                    </li>\n                  </ul>\n                </div>\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n\n        <BilingualTextInput\n          value={record.abstract}\n          onChange={handleUpdateRecord(\"abstract\")}\n          disabled={disabled}\n          multiline\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>\n              Please select all the essential ocean variables that are contained\n              in this dataset. Hover over a variable to see its definition.\n            </En>\n            <Fr>\n              Veuillez sélectionner toutes les variables océaniques essentielles\n              contenues dans ce jeu de données. Survolez une variable pour voir\n              sa définition ou cliquez sur l’icône <OpenInNew /> pour accéder à\n              la définition complète du Système d’Observatoire Global des Océans\n              (GOOS).\n            </Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"eov\")} />\n          <SupplementalText>\n            <I18n>\n              <En>If none of these apply you can select Other.</En>\n              <Fr>\n                Si aucune de ces variables ne vous semble pertinente, vous\n                pouvez sélectionner « Autre ».\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        {Object.entries(eovCategories).map(([categoryKey, categoryText]) => {\n          const eovsFiltered = eovs\n            .filter((e) => e.category === categoryKey)\n            .sort((a, b) =>\n              a[`label ${languageUpperCase}`].localeCompare(\n                b[`label ${languageUpperCase}`],\n                language\n              )\n            );\n\n          return (\n            <div key={categoryText[language]}>\n              <h4>{categoryText[language]}</h4>\n              <CheckBoxList\n                value={record.eov || []}\n                labelSize={6}\n                onChange={updateRecord(\"eov\")}\n                options={eovsFiltered.map((e) => e.value)}\n                optionLabels={eovsFiltered.map((e) => (\n                  <>\n                    <Tooltip title={e[`definition ${languageUpperCase}`]}>\n                      <span>{e[`label ${languageUpperCase}`]}</span>\n                    </Tooltip>\n                    {e.url && (\n                      <IconButton\n                        onClick={() => {\n                          const win = window.open(e.url, \"_blank\");\n                          win.focus();\n                        }}\n                      >\n                        <Tooltip\n                          title={\n                            <I18n\n                              en=\"Open GOOS definition in new window\"\n                              fr=\"Ouvrir la définition GOOS dans une nouvelle fenêtre\"\n                            />\n                          }\n                        >\n                          <OpenInNew />\n                        </Tooltip>\n                      </IconButton>\n                    )}\n                    {e.emerging && (\n                      <IconButton onClick={() => {}}>\n                        <Tooltip\n                          title={\n                            <I18n\n                              en=\"GOOS emerging EOV\"\n                              fr=\"EOV émergent GOOS\"\n                            />\n                          }\n                        >\n                          <Update />\n                        </Tooltip>\n                      </IconButton>\n                    )}\n                  </>\n                ))}\n                disabled={disabled}\n              />\n            </div>\n          );\n        })}\n      </Paper>\n      <Paper style={paperClass}>\n        <Grid container spacing={3} direction=\"column\">\n          <Grid item xs>\n            <QuestionText>\n              <I18n>\n                <En>\n                  Choose the most specific keywords that apply to your data, or\n                  create your own.\n                </En>\n                <Fr>\n                  Choisissez des mots-clés spécifiques qui s’appliquent à vos\n                  données ou créez-en des nouveaux.\n                </Fr>\n              </I18n>\n              <RequiredMark passes={validateField(record, \"keywords\")} />\n              <SupplementalText>\n                <I18n>\n                  <En>\n                    <p>\n                      Keywords are an important way to categorize your data that\n                      allow people and other systems to search for datasets that\n                      share some important characteristics.\n                    </p>\n                    <p>\n                      Keywords should include the place name of the closest\n                      community or major geographic location. Ex. Hartley Bay,\n                      Gitga’at Territory, in addition to the closest body of\n                      water, e.g. Douglas Channel.\n                    </p>\n                    <p>Enter one at a time, clicking 'Add' after each.</p>\n                  </En>\n                  <Fr>\n                    <p>\n                      Les mots clés sont un moyen efficace de catégoriser vos\n                      données pour permettre aux utilisateurs ou à d'autres\n                      systèmes d’accéder à tous les jeux de données partageant\n                      une même caractéristique.\n                    </p>\n                    <p>\n                      Vous pouvez choisir un mot clé prédéfini (liste\n                      déroulante) en français puis cliquer sur le bouton de\n                      traduction. Vous pouvez aussi créer votre propre mot clé\n                      en rédigeant un texte libre en anglais ou en français\n                      (vérifiez toujours si son équivalent existe dans la liste\n                      déroulante afin de diminuer le risque d’écriture multiple\n                      d’un même mot clé -ex: phoque Vs Phoques-).\n                    </p>\n                    <p>\n                      Entrez un mot-clé à la fois. Cliquez sur « Ajouter »\n                      chaque mot saisi.\n                    </p>\n                  </Fr>\n                </I18n>\n              </SupplementalText>\n            </QuestionText>\n          </Grid>\n          <Grid item xs>\n            <KeywordsInput\n              value={record.keywords}\n              onChange={handleUpdateRecord(\"keywords\")}\n              disabled={disabled}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the status of this dataset?</En>\n            <Fr>Quel est l'état de ce jeu de données?</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"progress\")} />\n\n          <SupplementalText>\n            {Object.values(progressCodes).map(({ title, text }) => (\n              <div style={{ margin: \"10px\" }} key={title[language]}>\n                {`${title[language]}: ${text[language]}`}\n              </div>\n            ))}\n          </SupplementalText>\n        </QuestionText>\n        <SelectInput\n          value={record.progress || \"\"}\n          onChange={handleUpdateRecord(\"progress\")}\n          options={Object.keys(progressCodes)}\n          optionLabels={Object.values(progressCodes).map(\n            ({ title }) => title[language]\n          )}\n          disabled={disabled}\n          fullWidth={false}\n          style={{ width: \"200px\" }}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the start date when data was first collected?</En>\n            <Fr>Inscrivez la date de début de votre collecte de données.</Fr>\n          </I18n>\n        </QuestionText>\n        <DateInput\n          value={record.dateStart || null}\n          onChange={handleUpdateRecord(\"dateStart\")}\n          disabled={disabled}\n          dateEnd={record.dateEnd || undefined}\n        />\n        <br />\n        <QuestionText>\n          <I18n>\n            <En>\n              What is the end date when data was last collected? Leave blank if\n              data collection is ongoing.\n            </En>\n            <Fr>\n              Inscrivez la date de fin de votre collecte de données. Laissez le\n              champs vide si la collecte des données toujours est en cours.\n            </Fr>\n          </I18n>\n        </QuestionText>\n        <DateInput\n          value={record.dateEnd || null}\n          onChange={handleUpdateRecord(\"dateEnd\")}\n          disabled={disabled}\n          dateStart={record.dateStart || undefined}\n        />\n      </Paper>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>\n              What is the date when the data was published? Leave blank if\n              dataset hasn't been published.\n            </En>\n            <Fr>\n              Quelle est la date de première publication des données ? Laissez\n              le champ vide si les données n'ont pas été publiées.\n            </Fr>\n          </I18n>\n        </QuestionText>\n        <DateInput\n          name=\"datePublished\"\n          value={record.datePublished || null}\n          onChange={handleUpdateRecord(\"datePublished\")}\n          disabled={disabled}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>The version number of this dataset. For example, 1.1</En>\n            <Fr>\n              Le numéro de version de cet ensemble de données. Par exemple, 1.1\n            </Fr>\n          </I18n>\n        </QuestionText>\n        <TextField\n          value={record.edition}\n          onChange={handleUpdateRecord(\"edition\")}\n          disabled={disabled}\n          style={{ marginTop: \"10px\" }}\n          fullWidth\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>\n              What is the date when data was revised? Leave blank if dataset\n              hasn't been revised.\n            </En>\n            <Fr>\n              Quelle est la date de la dernière révision des données ? Laissez\n              le champ vide si le jeu de données n'a pas été révisé.\n            </Fr>\n          </I18n>\n          <SupplementalText>\n            <I18n>\n              <En>\n                <p>\n                  Please note that this field does not need to be populated or\n                  updated when revisions are made to the metadata, but rather\n                  when a new version of the data file or package becomes\n                  available, i.e. for time-series data.\n                </p>\n              </En>\n              <Fr>\n                <p>\n                  Veuillez noter que ce champ n'a pas besoin d'être rempli ou\n                  mis à jour lorsque des révisions sont apportées aux\n                  métadonnées, mais plutôt lorsqu'une nouvelle version du\n                  fichier ou du paquet de données devient disponible,\n                  c'est-à-dire pour les données de séries temporelles.\n                </p>\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <DateInput\n          name=\"dateRevised\"\n          value={record.dateRevised || null}\n          onChange={handleUpdateRecord(\"dateRevised\")}\n          disabled={disabled}\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the DOI for this dataset? Eg,</En>\n            <Fr>Quel est le DOI de ce jeu de données ? Par exemple,</Fr>\n          </I18n>{\" \"}\n          https://doi.org/10.0000/0000\n          {showGenerateDoi && (\n            <SupplementalText>\n              <I18n>\n                <En>\n                  <p>\n                    Please save the form before generating a draft DOI.\n                  </p>\n                </En>\n                <Fr>\n                  <p>\n                  Veuillez enregistrer le formulaire avant de générer un brouillon de DOI.\n                  </p>\n                </Fr>\n              </I18n>\n            </SupplementalText>\n          )}\n        </QuestionText>\n        {showGenerateDoi && (\n          <Button\n            onClick={handleGenerateDOI}\n            disabled={generateDoiDisabled}\n            style={{ display: \"inline\" }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              {loadingDoi ? (\n                <>\n                  <CircularProgress size={24} style={{ marginRight: \"8px\" }} />\n                  Loading...\n                </>\n              ) : (\n                \"Generate DOI\"\n              )}\n            </div>\n          </Button>\n        )}\n        {showUpdateDoi && (\n          <Button\n            onClick={handleUpdateDraftDOI}\n            style={{ display: 'inline' }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              {loadingDoiUpdate ? (\n                <>\n                    <CircularProgress size={24} style={{ marginRight: \"8px\" }} />\n                    Loading...\n                </>\n              ) : (\n                \"Update DOI\"\n              )}\n            </div>\n          </Button>\n        )}\n      {showDeleteDoi && (\n        <Button\n          onClick={handleDeleteDOI}\n          style={{ display: \"inline\" }}\n        >\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            {loadingDoiDelete ? (\n              <>\n                  <CircularProgress size={24} style={{ marginRight: \"8px\" }} />\n                  Loading...\n              </>\n            ) : (\n              \"Delete DOI\"\n            )}\n          </div>\n        </Button>\n      )}\n        {doiErrorFlag && (\n          <span>\n            <I18n\n              en=\"Error occurred with DOI API\"\n              fr=\"Une erreur s'est produite avec l'API DOI\"\n            />\n          </span>\n        )}\n        {doiUpdateFlag && (\n          <span>\n            <I18n\n              en=\"DOI has been updated\"\n              fr=\"Le DOI a été mis à jour\"\n            />\n          </span>\n        )}\n\n        <TextField\n          style={{ marginTop: \"10px\" }}\n          name=\"datasetIdentifier\"\n          helperText={\n            doiIsValid ? \"\" : <I18n en=\"Invalid DOI\" fr=\"DOI non valide\" />\n          }\n          error={!doiIsValid}\n          value={record.datasetIdentifier}\n          onChange={handleUpdateRecord(\"datasetIdentifier\")}\n          disabled={record.doiCreationStatus === \"draft\"}\n          fullWidth\n        />\n      </Paper>\n\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>How is the dataset licensed?</En>\n            <Fr>Quelle est la licence de ce jeu de données?</Fr>\n          </I18n>\n          <RequiredMark passes={validateField(record, \"license\")} />\n          <SupplementalText>\n            <I18n>\n              <En>\n                <ul>\n                  <li>\n                    <b>\n                      <a\n                        href=\"https://creativecommons.org/licenses/by/4.0/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Creative Commons Attribution 4.0 International licence\n                        (CC-BY 4.0)\n                      </a>\n                    </b>{\" \"}\n                    - CIOOS recommended. Allows for open sharing and adaptation\n                    of the data provided that the original creator is\n                    attributed.\n                  </li>\n                  <li>\n                    <b>\n                      <a\n                        href=\"https://creativecommons.org/share-your-work/public-domain/cc0/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Creative Commons 0\n                      </a>\n                    </b>{\" \"}\n                    - imposes no restrictions of any kind.\n                  </li>\n                  <li>\n                    <b>\n                      <a\n                        href=\"https://open.canada.ca/en/open-government-licence-canada\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Open Government Licence - Canada\n                      </a>\n                    </b>{\" \"}\n                    - For datasets made available by Government of Canada\n                    departments and agencies, it is very similar to CC-BY as it\n                    allows for open sharing and adaptation of the data, provided\n                    that the original creator of the data is properly\n                    attributed.\n                  </li>\n                </ul>\n              </En>\n              <Fr>\n                <ul>\n                  <li>\n                    <b>\n                      Licence internationale Creative Commons Attribution 4.0\n                      (CC-BY 4.0){\" \"}\n                    </b>\n                    - Licence recommandée par le SIOOC. Les données sont\n                    ouvertes, mais la licence exige que le jeu de données soit\n                    cité lorsqu’il est utilisé par un autre utilisateur.\n                  </li>\n                  <li>\n                    <b>Creative Commons 0</b> - N’impose aucune restriction\n                    particulière : le jeu de données peut être utilisé sans être\n                    cité.\n                  </li>\n                  <li>\n                    <b>Licence du gouvernement ouvert - Canada</b> - Pour les\n                    jeux de données rendus disponibles par les organisations et\n                    ministères fédéraux. Cette licence est similaire à CC-BY 4.0\n                    : les données sont ouvertes mais le jeu de données doit être\n                    cité lorsqu'il est utilisé par un autre utilisateur.\n                  </li>\n                </ul>\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <SelectInput\n          value={record.license}\n          onChange={handleUpdateRecord(\"license\")}\n          optionLabels={licensesSorted.map((l) => (\n            <span>\n              {l.title[language] || l.title.en}\n\n              <Tooltip\n                title={\n                  <I18n\n                    en=\"Open license definition in new window\"\n                    fr=\"Ouvrir la définition de licence dans une nouvelle fenêtre\"\n                  />\n                }\n              >\n                <IconButton\n                  onClick={() => {\n                    const win = window.open(l.url, \"_blank\");\n                    win.focus();\n                  }}\n                >\n                  <OpenInNew />\n                </IconButton>\n              </Tooltip>\n            </span>\n          ))}\n          options={licensesSorted.map((l) => l.code)}\n          disabled={disabled}\n        />\n      </Paper>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What are the limitations affecting the dataset?</En>\n            <Fr>Quelles sont les limitations affectant le jeu de données?</Fr>\n          </I18n>\n          <SupplementalText>\n            <I18n>\n              <En>\n                For example:\n                <i>\n                  <ul>\n                    <li>Not to be used for navigational purposes.</li>\n                    <li>Instrument was not calibrated on day.</li>\n                    <li>Haven’t applied appropriate QC on the data yet.</li>\n                  </ul>\n                </i>\n              </En>\n              <Fr>\n                Par exemple :\n                <i>\n                  <ul>\n                    <li>Ne pas utiliser à des fins de navigation.</li>\n                    <li>L' instrument n'a pas été étalonné.</li>\n                    <li>\n                      Un contrôle de qualité n’a pas été effectué sur les\n                      données.\n                    </li>\n                  </ul>\n                </i>\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <BilingualTextInput\n          value={record.limitations}\n          onChange={handleUpdateRecord(\"limitations\")}\n          multiline\n          disabled={disabled}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default IdentificationTab;\n","import React, { useState } from \"react\";\nimport { Add, Delete } from \"@material-ui/icons\";\nimport {\n  TextField,\n  Grid,\n  Typography,\n  Button,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport BilingualTextInput from \"./BilingualTextInput\";\nimport { deepCopy } from \"../../utils/misc\";\n\nimport RequiredMark from \"./RequiredMark\";\n\nconst emptyInstrument = {\n  id: \"\",\n  manufacturer: \"\",\n  version: \"\",\n  type: { en: \"\", fr: \"\" },\n  description: { en: \"\", fr: \"\" },\n};\n\nconst Instruments = ({\n  updateInstruments,\n  instruments = [],\n  disabled,\n  paperClass,\n}) => {\n  const [activeInstrument, setActiveInstrument] = useState(0);\n\n  function addInstrument() {\n    updateInstruments(instruments.concat(deepCopy(emptyInstrument)));\n    setActiveInstrument(instruments.length);\n  }\n  function updateInstrumentField(key) {\n    return (e) => {\n      const instrumentsCopy = [...instruments];\n      instrumentsCopy[activeInstrument][key] = e.target.value;\n      updateInstruments(instrumentsCopy);\n    };\n  }\n  function removeInstrument() {\n    updateInstruments(\n      instruments.filter((e, index) => index !== activeInstrument)\n    );\n    if (instruments.length) setActiveInstrument(instruments.length - 2);\n  }\n\n  const manufacturerLabel = <I18n en=\"Manufacturer\" fr=\"Fabricant\" />;\n  const versionLabel = <I18n en=\"Version\" fr=\"Version\" />;\n  const typeLabel = <I18n en=\"Type\" fr=\"Type\" />;\n  const descriptionLabel = <I18n en=\"Description\" fr=\"Description\" />;\n\n  const instrument = instruments.length > 0 && instruments[activeInstrument];\n\n  return (\n    <Grid container direction=\"row\" spacing={3}>\n      <Grid item xs={3}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item xs>\n            Instruments:\n            <List>\n              {instruments.map((instrumentItem, i) => {\n                return (\n                  <ListItem\n                    key={i}\n                    button\n                    onClick={() => setActiveInstrument(i)}\n                  >\n                    <ListItemText\n                      primary={\n                        <Typography\n                          style={{\n                            fontWeight: activeInstrument === i ? \"bold\" : \"\",\n                          }}\n                        >\n                          {i + 1}. {instrumentItem.id}\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Grid>\n\n          <Grid item xs>\n            <Button\n              disabled={disabled}\n              startIcon={<Add />}\n              onClick={addInstrument}\n              style={{ height: \"56px\", marginLeft: \"10px\" }}\n            >\n              <I18n>\n                <En>Add instrument</En>\n                <Fr>Ajouter un instrument</Fr>\n              </I18n>\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs>\n        <Grid container direction=\"column\">\n          {instrument && (\n            <Paper style={paperClass}>\n              <Grid container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <I18n>\n                    <En>Instrument ID</En>\n                    <Fr>L'ID de l'instrument</Fr>\n                  </I18n>\n                  <RequiredMark passes={instrument.id} />\n                  <TextField\n                    label=\"ID\"\n                    value={instrument.id}\n                    onChange={updateInstrumentField(\"id\")}\n                    fullWidth\n                    disabled={disabled}\n                  />\n                </Grid>\n                <Grid item xs>\n                  <TextField\n                    label={manufacturerLabel}\n                    name=\"manufacturer\"\n                    value={instrument.manufacturer}\n                    onChange={updateInstrumentField(\"manufacturer\")}\n                    fullWidth\n                    disabled={disabled}\n                  />{\" \"}\n                </Grid>\n                <Grid item xs>\n                  <TextField\n                    label={versionLabel}\n                    value={instrument.version}\n                    onChange={updateInstrumentField(\"version\")}\n                    fullWidth\n                    disabled={disabled}\n                  />\n                </Grid>\n                <Grid item xs>\n                  <Typography>\n                    <I18n>\n                      <En>Instrument Type</En>\n                      <Fr>Type d'instrument</Fr>\n                    </I18n>\n                  </Typography>\n                  <BilingualTextInput\n                    label={typeLabel}\n                    value={instrument.type}\n                    onChange={updateInstrumentField(\"type\")}\n                    disabled={disabled}\n                  />\n                </Grid>{\" \"}\n                <Grid item xs>\n                  <Typography>Description</Typography>\n                  <BilingualTextInput\n                    label={descriptionLabel}\n                    value={instrument.description}\n                    onChange={updateInstrumentField(\"description\")}\n                    disabled={disabled}\n                  />\n                </Grid>\n                <Grid item xs>\n                  <Button\n                    startIcon={<Delete />}\n                    disabled={disabled}\n                    onClick={removeInstrument}\n                  >\n                    <I18n>\n                      <En>Remove item</En>\n                      <Fr>Supprimer l'instrument</Fr>\n                    </I18n>\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nexport default Instruments;\n","import React from \"react\";\n\nimport { TextField, Grid, Tooltip } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { OpenInNew } from \"@material-ui/icons\";\n\nimport BilingualTextInput from \"./BilingualTextInput\";\nimport { QuestionText, SupplementalText, paperClass } from \"./QuestionStyles\";\nimport RequiredMark from \"./RequiredMark\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport { validateField } from \"../../utils/validate\";\nimport SelectInput from \"./SelectInput\";\nimport platforms from \"../../platforms.json\";\n\nconst Platform = ({ record, handleUpdateRecord, disabled }) => {\n  const { language = \"en\" } = useParams();\n\n  const platformsSorted = Object.values(platforms).sort((a, b) =>\n    a[`label_${language}`].localeCompare(b[`label_${language}`], language)\n  );\n\n  return (\n    <div>\n      <Grid item xs style={{ ...paperClass, marginTop: \"-40px\" }}>\n        <QuestionText>\n          <I18n>\n            <En>What type of platform is it?</En>\n            <Fr>De quel type de plateforme s'agit-il ?</Fr>\n          </I18n>\n          <SupplementalText>\n            <I18n>\n              <En>Please select a platform from the </En>\n              <Fr>Veuillez sélectionner une plateforme dans la </Fr>\n            </I18n>\n            <a\n              href=\"http://vocab.nerc.ac.uk/collection/L06/current/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <I18n>\n                <En>SeaVoX Platform Categories (NERC L06 Vocabulary)</En>\n                <Fr>SeaVoX Platform Categories (liste Vocabulaire NERC L06)</Fr>\n              </I18n>\n              <Tooltip\n                title={\n                  <I18n\n                    en=\"Open in new window\"\n                    fr=\"Ouvrir dans une nouvelle fenêtre\"\n                  />\n                }\n              >\n                <OpenInNew style={{ verticalAlign: \"middle\" }} />\n              </Tooltip>\n            </a>\n\n            <RequiredMark passes={validateField(record, \"platform\")} />\n          </SupplementalText>\n        </QuestionText>\n        <SelectInput\n          value={record.platform}\n          onChange={handleUpdateRecord(\"platform\")}\n          optionLabels={platformsSorted.map((e) => `${e[`label_${language}`]}`)}\n          optionTooltips={platformsSorted.map(\n            (e) => `${e[`definition_${language}`]}`\n          )}\n          options={platformsSorted.map((e) => e.label_en)}\n          disabled={disabled}\n          label={<I18n en=\"Platform\" fr=\"Plateforme\" />}\n          fullWidth={false}\n        />\n      </Grid>\n\n      <Grid item xs style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the platform ID or code?</En>\n            <Fr>Quel est l'ID de la plateforme ?</Fr>\n          </I18n>\n          <SupplementalText>\n            <I18n>\n              <En>\n                This is a unique identification of the platform. If the platform\n                is registered with{\" \"}\n                <a\n                  href=\"https://vocab.seadatanet.org/v_bodc_vocab_v2/search.asp?lib=C17\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  ICES\n                </a>\n                , use that identifier\n              </En>\n              <Fr>\n                Il s'agit d'une identification unique de la plateforme. Si la\n                plateforme est enregistrée auprès du{\" \"}\n                <a\n                  href=\"https://vocab.seadatanet.org/v_bodc_vocab_v2/search.asp?lib=C17\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  CIEM\n                </a>\n                , utilisez cet identifiant\n              </Fr>\n            </I18n>\n            <RequiredMark passes={validateField(record, \"platformID\")} />\n          </SupplementalText>\n        </QuestionText>\n\n        <TextField\n          label={<I18n en=\"Platform ID\" fr=\"ID de plateforme\" />}\n          value={record.platformID}\n          onChange={handleUpdateRecord(\"platformID\")}\n          fullWidth\n          disabled={disabled}\n        />\n      </Grid>\n\n      <Grid item xs style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>More information about the platform</En>\n            <Fr>Plus d'informations sur la plateforme</Fr>\n          </I18n>\n          <SupplementalText>\n            <I18n>\n              <En>\n                You can also add aditional information about the platform.\n              </En>\n              <Fr>\n                Vous pouvez également ajouter des informations supplémentaires\n                sur la plateforme.\n              </Fr>\n            </I18n>\n          </SupplementalText>\n        </QuestionText>\n        <BilingualTextInput\n          value={record.platformDescription}\n          onChange={handleUpdateRecord(\"platformDescription\")}\n          multiline\n          disabled={disabled}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Platform;\n","import React from \"react\";\n\nimport { Paper, Grid, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport Instruments from \"../FormComponents/Instruments\";\n\nimport { QuestionText, paperClass } from \"../FormComponents/QuestionStyles\";\nimport Platform from \"../FormComponents/Platform\";\nimport { En, Fr, I18n } from \"../I18n\";\n\nconst PlatformTab = ({\n  disabled,\n  record,\n  handleUpdateRecord,\n  updateRecord,\n}) => {\n  const noPlatform = record.noPlatform && record.noPlatform !== \"false\";\n\n  return (\n    <div>\n      <Paper style={paperClass}>\n        <Grid container direction=\"column\" spacing={0}>\n          <Grid item xs style={paperClass}>\n            <QuestionText>\n              <I18n>\n                <En>\n                  A platform is anything used in data collection that has\n                  instrument(s) attached to it. Eg:\n                  <ul>\n                    <li>Glider</li>\n                    <li>Ship</li>\n                    <li>Buoy</li>\n                    <li>Satellite</li>\n                    <li>ROV</li>\n                    <li>Mooring</li>\n                  </ul>\n                  It is strongly encouraged to fill out platform information. If\n                  there is no platform, you can enter instruments at the bottom\n                  of the page.\n                </En>\n                <Fr>\n                  Une plateforme désigne tout “objet” sur lequel un ou plusieurs\n                  instruments sont attachés et utilisés dans la collecte des\n                  données. Par exemple :\n                  <ul>\n                    <li>\n                      <i>Glider</i>\n                    </li>\n                    <li>Navire</li>\n                    <li>Bouée</li>\n                    <li>Satellite</li>\n                    <li>ROV</li>\n                    <li>Amarrage</li>\n                  </ul>\n                  S'il n'y a pas de plateforme, vous pouvez entrer des\n                  informations sur les instruments au bas de la page. Sinon,\n                  vous devez décrire le plus précisément possible la plateforme\n                  utilisée dans la collecte de données.\n                </Fr>\n              </I18n>\n            </QuestionText>\n\n            <FormControlLabel\n              disabled={disabled}\n              control={\n                <Checkbox\n                  name=\"noPlatform\"\n                  checked={noPlatform}\n                  onChange={(e) => {\n                    const { checked } = e.target;\n\n                    updateRecord(\"noPlatform\")(checked);\n                  }}\n                />\n              }\n              label={\n                <I18n>\n                  <En>This dataset doesn't have a platform</En>\n                  <Fr>Ce jeu de données n'a pas de plateforme</Fr>\n                </I18n>\n              }\n            />\n          </Grid>\n\n          <Grid item xs style={paperClass}>\n            {!noPlatform ? (\n              <>\n                <Platform\n                  record={record}\n                  handleUpdateRecord={handleUpdateRecord}\n                  disabled={disabled}\n                />\n              </>\n            ) : (\n              <QuestionText>\n                <I18n>\n                  <En>You can still enter an instrument without a platform</En>\n                  <Fr>\n                    Vous pouvez toujours entrer dans un instrument sans\n                    plateforme\n                  </Fr>\n                </I18n>\n              </QuestionText>\n            )}\n\n            <Instruments\n              instruments={record.instruments}\n              updateInstruments={updateRecord(\"instruments\")}\n              disabled={disabled}\n              paperClass={paperClass}\n              noPlatform={noPlatform}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\nexport default PlatformTab;\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-underscore-dangle */\nimport React, { useState } from \"react\";\n\nimport { TextField, Grid, Typography } from \"@material-ui/core\";\nimport L from \"leaflet\";\nimport {\n  Map,\n  TileLayer,\n  FeatureGroup,\n  withLeaflet,\n  Polygon as LeafletPolygon,\n  Rectangle as LeafletRectangle,\n} from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport { I18n, En, Fr } from \"../I18n\";\n\nimport { QuestionText, SupplementalText } from \"./QuestionStyles\";\nimport { validateField } from \"../../utils/validate\";\nimport RequiredMark from \"./RequiredMark\";\n\nconst MapSelect = ({ updateMap, mapData = {}, disabled, record }) => {\n  // On map clear?\n  function handleMapClear() {\n    const emptySpatial = {\n      north: \"\",\n      south: \"\",\n      east: \"\",\n      west: \"\",\n      polygon: \"\",\n    };\n\n    updateMap(emptySpatial);\n  }\n\n  const [editableFG, setEditableFG] = useState(null);\n  const [, setLayerError] = useState(null);\n\n  const coordTest = /-?\\d+\\.?\\d+/;\n  const polyTest = /-?\\d+\\.?\\d+,\\s*-?\\d+\\.?\\d+\\s*?/g;\n\n  function clearExtraLayers(drawnItems) {\n    // From https://stackoverflow.com/questions/61073568/delete-layer-before-creating-a-new-one-with-react-leaflet-draw-in-leaflet\n    // Only allow one box on the map at a time\n    // if the number of layers is bigger than 1 then delete the first\n    if (Object.keys(drawnItems).length > 1) {\n      Object.keys(drawnItems).forEach((layerid) => {\n        const existingLayers = Object.keys(editableFG.leafletElement._layers)\n          .length;\n\n        if (existingLayers === 1) return;\n\n        const layer = drawnItems[layerid];\n\n        editableFG.leafletElement.removeLayer(layer);\n      });\n    }\n  }\n  // update a mapData property using an event\n  function handleChange(key) {\n    return (e) => {\n      const drawnItems = editableFG.leafletElement._layers;\n      clearExtraLayers(drawnItems);\n\n      const newData = { ...mapData, [key]: e.target.value };\n\n      updateMap(newData);\n    };\n  }\n  // update the polygon property using an event\n  function handleChangePoly(e) {\n    const drawnItems = editableFG.leafletElement._layers;\n    clearExtraLayers(drawnItems);\n\n    const newData = { ...mapData, polygon: e.target.value, north: '', south: '', east: '', west: '' }\n    try {\n      const bounds = L.latLngBounds(parsePolyString(e.target.value))\n      const { lat: north, lng: east } = bounds.getNorthEast();\n      const { lat: south, lng: west } = bounds.getSouthWest();\n\n      newData.north = limitDecimals(north);\n      newData.south = limitDecimals(south);\n      newData.east = limitDecimals(east);\n      newData.west = limitDecimals(west);\n    } catch (ignore) {\n      // ignore bounds errors as a missing or invalid polygon string should not take down the app\n    }\n\n    updateMap(newData);\n  }\n\n  function limitDecimals(x) {\n    return Number.parseFloat(x).toPrecision(4);\n  }\n\n  function parsePolyString(polygonList) {\n    let coordList = [...polygonList.matchAll(polyTest)].map((match) => {\n      return match[0];\n    });\n\n    try {\n      coordList = coordList.map((point) => {\n        return point.split(\",\").map(Number);\n      });\n    } catch (error) {\n      setLayerError({ error });\n    }\n\n    return coordList;\n  }\n\n  const hasBoundingBox = (\n    test_n = mapData.north,\n    test_s = mapData.south,\n    test_e = mapData.east,\n    test_w = mapData.west\n  ) => {\n    const test =\n      coordTest.test(test_n) &&\n      coordTest.test(test_s) &&\n      coordTest.test(test_e) &&\n      coordTest.test(test_w);\n\n    return test;\n  };\n\n  const hasPolygon = (test_string = mapData.polygon) => {\n    return polyTest.test(test_string);\n  };\n\n  const onCreated = (e) => {\n    const { layer, layerType } = e;\n\n    // remove any existing shapes\n    const drawnItems = editableFG.leafletElement._layers;\n    clearExtraLayers(drawnItems);\n\n    switch (layerType) {\n      case \"polygon\": {\n        const points = layer.getLatLngs()[0];\n        const polygonStrings = points.map(\n          ({ lat, lng }) => `${limitDecimals(lat)},${limitDecimals(lng)}`\n        );\n        const polygon = polygonStrings.concat(polygonStrings[0]).join(\" \");\n\n        const polybounds = layer.getBounds();\n\n        let { lat: north, lng: east } = polybounds.getNorthEast();\n        let { lat: south, lng: west } = polybounds.getSouthWest();\n\n        north = limitDecimals(north);\n        south = limitDecimals(south);\n        east = limitDecimals(east);\n        west = limitDecimals(west);\n\n        updateMap({ polygon, north, south, east, west });\n      }\n        break;\n\n      default: // Assume rectangle\n      case \"rectangle\": {\n        const bounds = layer.getBounds();\n\n        let { lat: north, lng: east } = bounds.getNorthEast();\n        let { lat: south, lng: west } = bounds.getSouthWest();\n\n        north = limitDecimals(north);\n        south = limitDecimals(south);\n        east = limitDecimals(east);\n        west = limitDecimals(west);\n\n        const newValue = { north, south, east, west };\n        updateMap(newValue);\n      }\n    }\n  };\n\n  const onFeatureGroupReady = (reactFGref) => {\n    // store the featureGroup ref for future access to content\n    setEditableFG(reactFGref);\n  };\n  L.EditToolbar.Delete.include({\n    enable() {\n      // eslint-disable-next-line react/no-this-in-sfc\n      this.options.featureGroup.clearLayers();\n      handleMapClear();\n    },\n  });\n\n  const bboxIsDrawn = Boolean(\n    mapData.north || mapData.south || mapData.east || mapData.west\n  );\n\n  const polyIsDrawn = Boolean(\n    mapData.polygon\n  );\n\n  const fieldsAreEmpty = !bboxIsDrawn && !mapData.polygon;\n\n  return (\n    <div>\n      <Map\n        style={{ width: \"100%\", height: \"55vh\" }}\n        center={[50, -100]}\n        zoom={3}\n\n        // whenReady={loadExistingExtent}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <FeatureGroup\n          ref={(featureGroupRef) => {\n            onFeatureGroupReady(featureGroupRef);\n          }}\n        >\n          {disabled === false && (\n            <EditControl\n              position=\"topleft\"\n              // onEdited={onEditPath}\n              onCreated={onCreated}\n              onMapClear={handleMapClear}\n              draw={{\n                marker: false,\n                circle: false,\n                polyline: false,\n                circlemarker: false,\n                polygon: true,\n              }}\n              edit={{\n                edit: false,\n              }}\n            />\n          )}\n\n          {hasPolygon() && (\n            <LeafletPolygon positions={parsePolyString(mapData.polygon)} />\n          )}\n\n          {/* do not draw the bounding box if we are creating a polygon */}\n          {hasBoundingBox() && !hasPolygon() && (\n            <LeafletRectangle\n              bounds={[\n                [mapData.north, mapData.east],\n                [mapData.south, mapData.west],\n              ]}\n            />\n          )}\n        </FeatureGroup>\n      </Map>\n      <br />\n      <QuestionText>\n        <I18n>\n          <En>Bounding Box Coordinates</En>\n          <Fr>Coordonnées de délimitation - Est, Ouest, Nord, Sud</Fr>\n        </I18n>\n        {((bboxIsDrawn && !polyIsDrawn) || fieldsAreEmpty) && (\n          <RequiredMark passes={validateField(record, \"map\")} />\n        )}\n\n        <SupplementalText>\n          <I18n>\n            <En>\n              If you are providing a bounding box, please provide the\n              coordinates in decimal degrees (eg 58.66) and not in decimal\n              minutes seconds.\n            </En>\n            <Fr>\n              Si vous fournissez des coordonnées de délimitation, veuillez les\n              fournir en <b>degrés décimaux</b>.\n            </Fr>\n          </I18n>\n        </SupplementalText>\n      </QuestionText>\n      <Grid container direction=\"row\" spacing={3}>\n        <Grid item xs={2}>\n          <TextField\n            label={<I18n en=\"North\" fr=\"Nord\" />}\n            value={mapData.north || \"\"}\n            inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n            onChange={handleChange(\"north\")}\n            type=\"number\"\n            disabled={disabled || Boolean(mapData.polygon)}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField\n            label={<I18n en=\"South\" fr=\"Sud\" />}\n            value={mapData.south || \"\"}\n            onChange={handleChange(\"south\")}\n            type=\"number\"\n            disabled={disabled || Boolean(mapData.polygon)}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField\n            label={<I18n en=\"East\" fr=\"Est\" />}\n            value={mapData.east || \"\"}\n            onChange={handleChange(\"east\")}\n            type=\"number\"\n            disabled={disabled || Boolean(mapData.polygon)}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField\n            value={mapData.west || \"\"}\n            label={<I18n en=\"West\" fr=\"Ouest\" />}\n            onChange={handleChange(\"west\")}\n            type=\"number\"\n            disabled={disabled || Boolean(mapData.polygon)}\n          />\n        </Grid>\n      </Grid>\n\n      <Typography variant=\"h6\" style={{ margin: \"20px\", marginLeft: \"20%\" }}>\n        <I18n>\n          <En>OR</En>\n          <Fr>Ou</Fr>\n        </I18n>\n      </Typography>\n\n      <QuestionText>\n        <I18n>\n          <En>Polygon coordinates</En>\n          <Fr>Coordonnées du/des polygone(s)</Fr>\n        </I18n>\n        {(polyIsDrawn || fieldsAreEmpty) && (\n          <RequiredMark passes={validateField(record, \"map\")} />\n        )}\n        <SupplementalText>\n          <I18n>\n            <En>\n              If you are providing polygon coordinates, they must start and end\n              with the same point. Eg,\n            </En>\n            <Fr>\n              Doivent commencer et se terminer par le même point. Par exemple,\n            </Fr>\n          </I18n>{\" \"}\n          48,-128 56,-133 56,-147 48,-128\n        </SupplementalText>\n      </QuestionText>\n      <TextField\n        value={mapData.polygon || \"\"}\n        onChange={handleChangePoly}\n        type=\"text\"\n        fullWidth\n        disabled={disabled || (bboxIsDrawn && !polyIsDrawn)}\n      />\n    </div>\n  );\n};\n\nexport default withLeaflet(MapSelect);\n","import { Paper, TextField, Grid, Tooltip, IconButton } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { OpenInNew } from \"@material-ui/icons\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport RequiredMark from \"../FormComponents/RequiredMark\";\n\nimport MapSelect from \"../FormComponents/MapSelect\";\n\nimport SelectInput from \"../FormComponents/SelectInput\";\nimport { depthDirections } from \"../../isoCodeLists\";\n\nimport {\n  QuestionText,\n  SupplementalText,\n  paperClass,\n} from \"../FormComponents/QuestionStyles\";\nimport { validateField } from \"../../utils/validate\";\n\nconst OpenEPSGDefn = ({ url }) => {\n  return (\n    <IconButton\n      onClick={() => {\n        const win = window.open(url, \"_blank\");\n        win.focus();\n      }}\n    >\n      <Tooltip\n        title={\n          <I18n\n            en=\"Open EPSG definition in new window\"\n            fr=\"Ouvrir la définition EPSG dans une nouvelle fenêtre\"\n          />\n        }\n      >\n        <OpenInNew />\n      </Tooltip>\n    </IconButton>\n  );\n};\nconst SpatialTab = ({ disabled, record, handleUpdateRecord, updateRecord }) => {\n  const { language } = useParams();\n\n  return (\n    <Grid>\n      <Paper style={paperClass}>\n        <QuestionText style={{ paddingBottom: \"15px\" }}>\n          <I18n>\n            <En>What is the spatial extent of the dataset?</En>\n            <Fr>Quelle est l'étendue géographique du jeu de données?</Fr>\n          </I18n>\n\n          <SupplementalText>\n            <div>\n              <I18n>\n                <En>\n                  You can draw a bounding box or polygon for the dataset using\n                  the Polygon or Box buttons at the left side of them form.\n                  Alternatively you can enter them using the fields below.\n                  Either a bounding box or a Polygon is required.\n                </En>\n                <Fr>\n                  Vous pouvez tracer un cadre ou un polygone pour situer\n                  géographiquement votre jeu de données. Vous pouvez aussi\n                  localiser l’aire géographique couverte par votre jeu de\n                  données en inscrivant les coordonnées géographiques (degrés\n                  décimaux) dans les champs apparaissant sous la carte. Cette\n                  section doit obligatoirement être complétée.\n                </Fr>\n              </I18n>\n            </div>\n            <br />\n            <div>\n              <I18n>\n                <En>\n                  Define the geographical area using the tool that meets the\n                  geographic distribution of your data. Broadly distributed data\n                  in the open ocean might be well served by a bounding box.\n                  Tightly clustered coastal data may benefit from a polygon that\n                  does not include terrain or unsampled area.\n                </En>\n                <Fr>\n                  Définissez la zone géographique à l'aide de l'outil qui\n                  correspond à la distribution géographique de vos données. Les\n                  données largement distribuées en haute mer peuvent être bien\n                  desservies par un cadre englobant. Les données côtières\n                  étroitement regroupées peuvent bénéficier d'un polygone qui\n                  n'inclut pas le terrain ou la zone non échantillonnée.\n                </Fr>\n              </I18n>\n            </div>\n          </SupplementalText>\n        </QuestionText>\n        <MapSelect\n          mapData={record.map}\n          updateMap={updateRecord(\"map\")}\n          handleUpdateMap={updateRecord(\"map\")}\n          disabled={disabled}\n          record={record}\n        />\n      </Paper>\n      <Paper style={paperClass}>\n        <QuestionText>\n          <I18n>\n            <En>What is the vertical extent of the dataset in meters?</En>\n            <Fr>Quelle est l'étendue verticale du jeu de données en mètres?</Fr>\n          </I18n>\n          <RequiredMark\n            passes={\n              validateField(record, \"verticalExtentDirection\") &&\n              validateField(record, \"verticalExtentMin\") &&\n              validateField(record, \"verticalExtentMax\")\n            }\n          />\n\n          <SupplementalText>\n            <div>\n              <I18n>\n                <En>\n                  This captures the minimum and maximum depths (or height from\n                  sea floor) where the instrument recorded data.\n                </En>\n\n                <Fr>\n                  Cela permet de capturer les profondeurs minimales et maximales\n                  (ou la hauteur du fond marin) où l'instrument a enregistré des\n                  données.\n                </Fr>\n              </I18n>\n            </div>\n\n            <div style={{ paddingTop: \"5px\" }}>\n              <I18n>\n                <En>\n                  Depth positive: Depth is recorded with positive values (i.e. a\n                  maximum value of 150m implies 150m below the water surface).\n                </En>\n                <Fr>\n                  Profondeur positive: La profondeur est enregistrée avec des\n                  valeurs positives (c’est-à-dire qu’une valeur maximale de 150\n                  m indique que les enregistrements ont été effectués à un\n                  maximum de 150 m au-dessous de la surface).\n                </Fr>\n              </I18n>\n              <OpenEPSGDefn url=\"https://epsg.io/5831\" />\n            </div>\n            <div>\n              <I18n>\n                <En>\n                  Height Positive: Height is the elevation from water surface\n                  (i.e. a maximum value of 150m implies 150m above the water\n                  surface).\n                </En>\n                <Fr>\n                  Hauteur positive: La hauteur est l'altitude par rapport à la\n                  surface de l'eau (c'est-à-dire qu'une valeur maximale de 150 m\n                  implique 150 m au-dessus de la surface de l'eau).\n                </Fr>\n              </I18n>\n              <OpenEPSGDefn url=\"https://epsg.io/5829\" />\n            </div>\n          </SupplementalText>\n        </QuestionText>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          alignItems=\"flex-start\"\n          spacing={4}\n        >\n          <Grid item xs={5}>\n            <SelectInput\n              value={record.verticalExtentDirection || \"\"}\n              onChange={handleUpdateRecord(\"verticalExtentDirection\")}\n              options={Object.keys(depthDirections)}\n              optionLabels={Object.values(depthDirections).map(\n                (e) => e[language]\n              )}\n              disabled={disabled}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <TextField\n              value={record.verticalExtentMin}\n              onChange={handleUpdateRecord(\"verticalExtentMin\")}\n              label=\"Min\"\n              fullWidth\n              type=\"number\"\n              disabled={disabled}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <TextField\n              value={record.verticalExtentMax}\n              onChange={handleUpdateRecord(\"verticalExtentMax\")}\n              label=\"Max\"\n              fullWidth\n              type=\"number\"\n              disabled={disabled}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default SpatialTab;\n","const tabs = {\n  // Submit section\n  start: { en: \"Start\", fr: \"Accueil\" },\n  dataID: { en: \"Data Identification\", fr: \"Identification des données\" },\n  spatial: { en: \"Spatial\", fr: \"Spatial\" },\n  contacts: { en: \"Contacts\", fr: \"Contacts\" },\n  resources: { en: \"Resources\", fr: \"Ressources\" },\n  platform: { en: \"Platform\", fr: \"Plateforme\" },\n  platformInstruments: {\n    en: \"Platform - instruments\",\n    fr: \"Plateforme - instruments\",\n  },\n};\nexport default tabs;\n","import { useParams } from \"react-router-dom\";\n\nimport regions from \"../../regions\";\n\nfunction GetRegionInfo() {\n  const { region } = useParams();\n  return regions[region];\n}\n\nexport default GetRegionInfo;\n","import React, { useState } from \"react\";\n\nimport {\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { paperClass } from \"../FormComponents/QuestionStyles\";\n\nimport { En, Fr, I18n } from \"../I18n\";\nimport { getErrorsByTab, recordIsValid } from \"../../utils/validate\";\nimport tabs from \"../../utils/tabs\";\n\nimport GetRegionInfo from \"../FormComponents/Regions\";\n\nconst SubmitTab = ({ record, submitRecord }) => {\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const { language } = useParams();\n\n  const validationErrors = getErrorsByTab(record);\n  const submitted = record.status === \"submitted\";\n  const regionInfo = GetRegionInfo();\n\n  return (\n    <Paper style={paperClass}>\n      <Grid container direction=\"column\" spacing={3}>\n        <Grid item xs>\n          <Typography>\n            <I18n>\n              <En>\n                Thank-you for completing this form. The information will be\n                reviewed and a {regionInfo.title.en} staff member will contact\n                you to request more information or provide an update on when\n                your dataset will be available through the{\" \"}\n                {regionInfo.catalogueTitle.en}. Your information will not be\n                published before you are contacted. If you have any questions or\n                would like to follow up on the status of your record, please\n                contact\n              </En>\n              <Fr>\n                Merci d'avoir rempli ce formulaire. L'information sera validée\n                par un membre du personnel {regionInfo.titleFrPossessive}. Cette\n                personne pourrait vous contacter pour obtenir plus\n                d'informations ou pour vous indiquer quand votre jeu de données\n                sera disponible dans notre {regionInfo.catalogueTitle.fr}. Vos\n                informations ne seront pas publiées avant d'obtenir votre\n                approbation. Si vous avez des questions ou si vous désirez\n                effectuer un suivi concernant l'état de votre soumission,\n                veuillez contacte\n              </Fr>\n            </I18n>{\" \"}\n            <a href={`mailto:${regionInfo.email}`}>{regionInfo.email}</a>.\n          </Typography>\n        </Grid>\n        {submitted ? (\n          <Grid item xs>\n            <Typography>\n              <I18n>\n                <En>\n                  Thank you for your submission. A reviewer has been notified.\n                  You will receive an email when the record is published. You\n                  are still able to edit this record by saving it, until it is\n                  published.\n                </En>\n                <Fr>\n                  Merci pour votre soumission. Un examinateur a été avisé. Vous\n                  recevrez un e-mail lors de la publication de l'enregistrement.\n                  Vous pouvez toujours modifier cet enregistrement en\n                  l'enregistrant, jusqu'à ce qu'il soit publié.\n                </Fr>\n              </I18n>\n            </Typography>\n          </Grid>\n        ) : (\n          <>\n            {recordIsValid(record) ? (\n              <>\n                <Grid item xs>\n                  <Typography>\n                    <I18n>\n                      <En>\n                        You have completed all of the required fields, your\n                        record can be submitted now.\n                      </En>\n                      <Fr>\n                        Vous avez rempli tous les champs obligatoires, vous\n                        pouvez maintenant soumettre votre formulaire.\n                      </Fr>\n                    </I18n>\n                  </Typography>\n                </Grid>\n                <Grid item xs>\n                  {isSubmitting ? (\n                    <CircularProgress />\n                  ) : (\n                    <Button\n                      onClick={() => {\n                        setSubmitting(true);\n                        submitRecord().then(() => {\n                          setSubmitting(false);\n                        });\n                      }}\n                      disabled={submitted}\n                    >\n                      <I18n>\n                        <En>Submit</En>\n                        <Fr>Soumettre</Fr>\n                      </I18n>\n                    </Button>\n                  )}\n                </Grid>\n              </>\n            ) : (\n              <>\n                <Grid item xs>\n                  <Typography>\n                    <I18n>\n                      <En>\n                        You haven't completed all of the required fields. You\n                        will need to address the list below before submitting.\n                      </En>\n                      <Fr>\n                        Vous n'avez pas rempli tous les champs obligatoires.\n                        Veuillez compléter les champs identifiés ci-dessous\n                        avant de soumettre votre demande.\n                      </Fr>\n                    </I18n>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs>\n                  {Object.keys(validationErrors).map((tab) => (\n                    <div key={tab}>\n                      <Typography variant=\"h6\">\n                        {tabs[tab][language]}\n                      </Typography>\n                      <List>\n                        {validationErrors[tab].map(\n                          ({ [language]: error }, i) => (\n                            <ListItem key={i}>\n                              <ListItemText primary={error} />\n                            </ListItem>\n                          )\n                        )}\n                      </List>\n                    </div>\n                  ))}\n                </Grid>\n              </>\n            )}\n          </>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\nexport default SubmitTab;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport {\n  Box,\n  CircularProgress,\n  Grid,\n  Tab,\n  Tabs,\n  Fab,\n  Tooltip,\n  Typography,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Save } from \"@material-ui/icons\";\nimport { withRouter } from \"react-router-dom\";\nimport FormClassTemplate from \"./FormClassTemplate\";\nimport { I18n, En, Fr } from \"../I18n\";\nimport StatusChip from \"../FormComponents/StatusChip\";\nimport LastEdited from \"../FormComponents/LastEdited\";\nimport NotFound from \"./NotFound\";\n\nimport SimpleModal from \"../FormComponents/SimpleModal\";\nimport StartTab from \"../Tabs/StartTab\";\nimport ContactTab from \"../Tabs/ContactTab\";\nimport ResourcesTab from \"../Tabs/ResourcesTab\";\nimport IdentificationTab from \"../Tabs/IdentificationTab\";\nimport PlatformTab from \"../Tabs/PlatformTab\";\nimport SpatialTab from \"../Tabs/SpatialTab\";\nimport SubmitTab from \"../Tabs/SubmitTab\";\n\nimport { auth } from \"../../auth\";\nimport firebase from \"../../firebase\";\nimport { firebaseToJSObject, trimStringsInObject } from \"../../utils/misc\";\nimport {\n  submitRecord,\n  getRegionProjects,\n  standardizeRecord,\n} from \"../../utils/firebaseRecordFunctions\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { percentValid } from \"../../utils/validate\";\nimport tabs from \"../../utils/tabs\";\n\nimport { getBlankRecord } from \"../../utils/blankRecord\";\n\nconst LinearProgressWithLabel = ({ value }) => (\n  <Tooltip\n    title={\n      <I18n\n        en=\"Percentage of required fields filled in\"\n        fr=\"Pourcentage de champs obligatoires remplis\"\n      />\n    }\n  >\n    <Box display=\"flex\" width=\"90%\" style={{ margin: \"auto\" }}>\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress\n          variant=\"determinate\"\n          value={value}\n          style={{ marginLeft: \"-30px\" }}\n        />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  </Tooltip>\n);\n\nfunction TabPanel({ children, value, index, ...other }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nconst styles = (theme) => ({\n  tabRoot: {\n    minWidth: \"115px\",\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n});\nclass MetadataForm extends FormClassTemplate {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: [],\n      record: getBlankRecord(),\n\n      // contacts saved by user (not the ones saved in the record)\n      // kept in firebase object format instead of array\n      userContacts: {},\n\n      // UI state:\n      loading: false,\n      tabIndex: \"start\",\n\n      // whether the 'save' icon button is greyed out or not\n      saveDisabled: true,\n\n      highlightMissingRequireFields: false,\n\n      editorInfo: { email: \"\", displayName: \"\" },\n      loggedInUserCanEditRecord: false,\n      saveIncompleteRecordModalOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    this.setState({ loading: true });\n\n    this.unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const { region, recordID } = match.params;\n        const isNewRecord = match.url.endsWith(\"new\");\n        // could be viewer or reviewer\n        const loggedInUserID = user.uid;\n        const recordUserID = isNewRecord ? loggedInUserID : match.params.userID;\n        const loggedInUserOwnsRecord = loggedInUserID === recordUserID;\n        const { isReviewer } = this.context;\n\n        this.setState({ projects: await getRegionProjects(region) });\n        let editorInfo;\n        // get info of the person openeing the record\n        const editorDataRef = firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(loggedInUserID);\n        const userinfoRef = editorDataRef.child(\"userinfo\");\n        userinfoRef.on(\"value\", (userinfo) => {\n          editorInfo = userinfo.toJSON();\n\n          this.setState({ editorInfo });\n        });\n        this.listenerRefs.push(userinfoRef);\n\n        // get info of the original author of record\n        const userDataRef = firebase\n          .database()\n          .ref(region)\n          .child(\"users\")\n          .child(recordUserID);\n\n        // get contacts\n        const editorContactsRef = editorDataRef.child(\"contacts\");\n\n        editorContactsRef.on(\"value\", (contactsFB) => {\n          const userContacts = contactsFB.toJSON();\n          Object.entries(userContacts || {}).forEach(([k, v]) => {\n            // eslint-disable-next-line no-param-reassign\n            v.contactID = k;\n          });\n          this.setState({ userContacts });\n        });\n        this.listenerRefs.push(editorContactsRef);\n\n        // if recordID is set then the user is editing an existing record\n        if (isNewRecord) {\n          this.setState({ loading: false, loggedInUserCanEditRecord: true });\n        } else {\n          const ref = userDataRef.child(\"records\").child(recordID);\n          ref.on(\"value\", (recordFireBase) => {\n            // Record not found, eg a bad link\n            const recordFireBaseObj = recordFireBase.toJSON();\n            if (!recordFireBaseObj) {\n              this.setState({ loading: false, record: null });\n\n              return;\n            }\n            const record = firebaseToJSObject(recordFireBaseObj);\n\n            const loggedInUserCanEditRecord =\n              isReviewer || loggedInUserOwnsRecord;\n\n            this.setState({\n              record: standardizeRecord(record, null, null, recordID),\n              loggedInUserCanEditRecord,\n            });\n            this.setState({ loading: false });\n          });\n          this.listenerRefs.push(ref);\n        }\n      }\n    });\n  }\n\n  toggleModal = (modalName, state, key = \"\", userID) => {\n    this.setState({ modalKey: key, [modalName]: state, modalUserID: userID });\n  };\n\n  // genereric handler for updating state, used by most form components\n  // generic event handler\n  handleUpdateRecord = (key) => (event) => {\n    const { value } = event.target;\n    const changes = { [key]: value };\n\n    this.setState(({ record }) => ({\n      record: { ...record, ...changes },\n      saveDisabled: false,\n    }));\n  };\n\n  // a second genereric handler components that dont use onChange\n  // generic state updater creator\n  updateRecord = (key) => (value) => {\n    const changes = { [key]: value };\n\n    this.setState(({ record }) => ({\n      record: { ...record, ...changes },\n      saveDisabled: false,\n    }));\n  };\n\n  saveUpdateContact(contact) {\n    const { contactID } = contact;\n    const { match } = this.props;\n\n    const { region } = match.params;\n\n    const contactsRef = firebase\n      .database()\n      .ref(region)\n      .child(\"users\")\n      .child(auth.currentUser.uid)\n      .child(\"contacts\");\n\n    // existing contact\n    if (contactID) {\n      contactsRef.child(contactID).update(contact);\n      return contactID;\n    }\n    // new contact\n\n    return contactsRef.push(contact).getKey();\n  }\n\n  async handleSubmitRecord() {\n    const { match } = this.props;\n    const { region, userID } = match.params;\n    const isNewRecord = match.url.endsWith(\"new\");\n    const { record } = this.state;\n    // Bit of logic here to decide if this is a user submitting their own form\n    // or a reviewer submitting it\n    const loggedInUserID = auth.currentUser.uid;\n    const recordUserID = isNewRecord ? loggedInUserID : userID;\n\n    const recordID = await this.handleSaveClick();\n    return submitRecord(region, recordUserID, recordID, \"submitted\", record);\n  }\n\n  // userOKedRecordDemotion - user has clicked that they understand that their record will be\n  // changed from published to draft since the record is incomplete\n  async handleSaveClick(userOKedRecordDemotion = false) {\n    const { match, history } = this.props;\n    const { language, region } = match.params;\n\n    const userID = match.params.userID || auth.currentUser.uid;\n\n    const recordsRef = firebase\n      .database()\n      .ref(region)\n      .child(\"users\")\n      .child(userID)\n      .child(\"records\");\n\n    // remove userContacts since they get saved elsewhere\n    const { editorInfo } = this.state;\n\n    // trim whitespace from all srtings in record\n    const record = trimStringsInObject(this.state.record);\n\n    // record doesn't have required fieds filled\n    const recordIsComplete = percentValid(record) === 1;\n\n    if (record.status === \"published\" && !recordIsComplete) {\n      // if userOKedRecordDemotion is set, user has acknowledge that record will be demoted to draft\n      if (userOKedRecordDemotion) {\n        record.status = \"\";\n      } else {\n        // display warning modal\n        this.toggleModal(\"saveIncompleteRecordModalOpen\", true);\n\n        return;\n      }\n    }\n    // created is really \"last updated\"\n    record.created = new Date().toISOString();\n\n    // having userID down here makes it easier to transfer records\n    record.userID = userID;\n\n    record.lastEditedBy = editorInfo;\n    let recordID;\n    if (record.recordID) {\n      recordID = record.recordID;\n      await recordsRef\n        .child(record.recordID)\n        // using blankRecord here in case there are new fields that the old record didnt have\n        .update({ ...getBlankRecord(), ...record });\n    } else {\n      // new record\n      const newNode = await recordsRef.push(record);\n\n      // cheesy workaround to the issue of push() not saving dates\n      await newNode.update(record);\n      recordID = newNode.key;\n      this.setState({\n        record: { ...record, recordID },\n      });\n      history.push(`/${language}/${region}/${userID}/${recordID}`);\n    }\n\n    // regnerate XML on save\n    if ([\"submitted\", \"published\"].includes(record.status)) {\n      const { regenerateXMLforRecord } = this.context;\n\n      const path = `${region}/${userID}/${recordID}`;\n      const { status, filename } = record;\n\n      regenerateXMLforRecord({ path, status, filename });\n    }\n\n    this.setState({ saveDisabled: true });\n    // if (match.url.endsWith(\"new\")) {\n    // set the URL so its shareable\n    // }\n    // eslint-disable-next-line consistent-return\n    return recordID;\n  }\n\n  render() {\n    const { match } = this.props;\n    const { language } = match.params;\n    const { isReviewer } = this.context;\n\n    const {\n      userContacts,\n      tabIndex,\n      record,\n      saveDisabled,\n      loading,\n      highlightMissingRequireFields,\n      loggedInUserCanEditRecord,\n      saveIncompleteRecordModalOpen,\n      projects,\n    } = this.state;\n\n    if (!record) {\n      return <NotFound />;\n    }\n    const { classes } = this.props;\n\n    const disabled = !loggedInUserCanEditRecord;\n\n    const tabProps = {\n      highlightMissingRequireFields,\n      disabled,\n      record,\n      handleUpdateRecord: this.handleUpdateRecord,\n      updateRecord: this.updateRecord,\n    };\n    const percentValidInt = Math.round(percentValid(record) * 100);\n    return loading ? (\n      <CircularProgress />\n    ) : (\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        <SimpleModal\n          open={saveIncompleteRecordModalOpen}\n          modalQuestion={\n            <I18n\n              en=\"Record is missing required fields. Saving will demote it to draft. Do you want to do this?\"\n              fr=\"Il manque des champs obligatoires dans l'enregistrement. L'enregistrement le rétrogradera en brouillon. Est-ce que tu veux le faire ?\"\n            />\n          }\n          onClose={() => {\n            this.toggleModal(\"saveIncompleteRecordModalOpen\", false);\n          }}\n          onAccept={() => {\n            this.handleSaveClick(true);\n            this.toggleModal(\"saveIncompleteRecordModalOpen\", false);\n          }}\n        />\n\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          className={classes.fab}\n          disabled={\n            saveDisabled || !(record.title.en || record.title.fr) || disabled\n          }\n          onClick={() => this.handleSaveClick()}\n        >\n          <Tooltip\n            placement=\"right-start\"\n            title={\n              saveDisabled\n                ? \"Dataset needs a title before it can be saved\"\n                : \"Save record.\"\n            }\n          >\n            <span>\n              <Save />\n            </span>\n          </Tooltip>\n        </Fab>\n        <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n          <Grid item xs>\n            <Tabs\n              scrollButtons=\"auto\"\n              variant=\"fullWidth\"\n              value={tabIndex}\n              onChange={(e, newValue) => this.setState({ tabIndex: newValue })}\n              aria-label=\"simple tabs example\"\n            >\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={tabs.start[language]}\n                value=\"start\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={tabs.dataID[language]}\n                value=\"identification\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={tabs.spatial[language]}\n                value=\"spatial\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label=\"Contact\"\n                value=\"contact\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={tabs.resources[language]}\n                value=\"distribution\"\n              />\n              <Tab\n                fullWidth\n                classes={{ root: classes.tabRoot }}\n                label={tabs.platform[language]}\n                value=\"platform\"\n              />\n              {loggedInUserCanEditRecord && (\n                <Tab\n                  fullWidth\n                  classes={{ root: classes.tabRoot }}\n                  label={<I18n en=\"Submit\" fr=\"Soumettre\" />}\n                  value=\"submit\"\n                  disabled={\n                    record.status === \"submitted\" ||\n                    record.status === \"published\"\n                  }\n                />\n              )}\n            </Tabs>\n            <div style={{ marginTop: \"10px\", textAlign: \"center\" }}>\n              <Typography variant=\"h5\">\n                {(language && record.title?.[language]) || (\n                  <I18n en=\"New Record\" fr=\"Nouvel enregistrement\" />\n                )}{\" \"}\n                <StatusChip status={record.status} />\n              </Typography>\n              <Typography component=\"div\">\n                <i>\n                  <LastEdited dateStr={record.created} />\n                  {record.lastEditedBy?.displayName && (\n                    <>\n                      <I18n>\n                        <En>by </En>\n                        <Fr>Par </Fr>\n                      </I18n>\n                      {record.lastEditedBy.displayName}{\" \"}\n                      {isReviewer && record.lastEditedBy.email}\n                    </>\n                  )}\n                </i>\n                <LinearProgressWithLabel value={percentValidInt} />\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n        <TabPanel value={tabIndex} index=\"start\">\n          <StartTab {...tabProps} />\n        </TabPanel>\n        <TabPanel value={tabIndex} index=\"identification\">\n          <IdentificationTab {...tabProps} projects={projects} />\n        </TabPanel>\n        <TabPanel value={tabIndex} index=\"spatial\">\n          <SpatialTab {...tabProps} />\n        </TabPanel>\n        <TabPanel value={tabIndex} index=\"platform\">\n          <PlatformTab {...tabProps} />\n        </TabPanel>\n        <TabPanel value={tabIndex} index=\"distribution\">\n          <ResourcesTab {...tabProps} />\n        </TabPanel>\n\n        <TabPanel value={tabIndex} index=\"submit\">\n          <SubmitTab\n            {...tabProps}\n            submitRecord={() => this.handleSubmitRecord()}\n          />\n        </TabPanel>\n\n        <TabPanel value={tabIndex} index=\"contact\">\n          {/* userContacts are the ones the user has saved, not necessarily part of the record */}\n          <ContactTab\n            userContacts={userContacts}\n            saveToContacts={(c) => this.saveUpdateContact(c)}\n            {...tabProps}\n          />\n        </TabPanel>\n      </Grid>\n    );\n  }\n}\nMetadataForm.contextType = UserContext;\nexport default withStyles(styles)(withRouter(MetadataForm));\n","import React, { Component } from \"react\";\nimport * as Sentry from \"@sentry/react\";\nimport { I18n, En, Fr } from \"../I18n\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n    Sentry.captureException(error);\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return (\n        <div>\n          <h1>\n            <I18n>\n              <En>Something went wrong!</En>\n              <Fr>Un problème s'est produit!</Fr>\n            </I18n>\n          </h1>\n          <h5>\n            <I18n>\n              <En>\n                The developers have been notified and are working to resolve the\n                issue.\n              </En>\n              <Fr>\n                Les développeurs ont été avertis et s'efforçent de résoudre le\n                problème.\n              </Fr>\n            </I18n>\n          </h5>\n        </div>\n      );\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Save } from \"@material-ui/icons\";\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\n\nimport { En, Fr, I18n } from \"../I18n\";\n\nimport ContactEditor from \"./ContactEditor\";\nimport FormClassTemplate from \"../Pages/FormClassTemplate\";\n\nclass EditContact extends FormClassTemplate {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orgRor: \"\",\n      orgName: \"\",\n      orgEmail: \"\",\n      orgURL: \"\",\n      orgAdress: \"\",\n      orgCity: \"\",\n      orgCountry: \"\",\n      // ind = individual\n      indOrcid: \"\",\n      indPosition: \"\",\n      indEmail: \"\",\n      givenNames: \"\",\n      lastName: \"\",\n    };\n    const { match } = props;\n\n    const { region } = match.params;\n\n    this.contactsRef = firebase\n      .database()\n      .ref(region)\n      .child(\"users\")\n      .child(auth.currentUser.uid)\n      .child(\"contacts\");\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const { contactID } = match.params;\n\n    if (auth.currentUser && contactID) {\n      this.setState({ contactID });\n      const contactRef = this.contactsRef.child(contactID);\n      contactRef.on(\"value\", (contact) => this.setState(contact.toJSON()));\n      this.listenerRefs.push(contactRef);\n    }\n  }\n\n  handleChange(key) {\n    return (event) => {\n      this.setState({ [key]: event.target.value });\n    };\n  }\n\n  handleClear(key) {\n    this.setState({ [key]: \"\" });\n  }\n\n  updateOrgFromRor() {\n    return (payload) => {\n      this.setState({\n        orgRor: payload.id,\n        orgName: payload.name,\n        orgURL: payload.links.find(() => true) || \"\",\n        orgCity: payload.addresses.find(() => true).city || \"\",\n        orgCountry: payload.country.country_name,\n      });\n    };\n  }\n\n  updateIndFromOrcid() {\n    return (payload) => {\n      const { name, emails } = payload.person;\n      const indEmail = emails.email.length > 0 ? emails.email[0].email : \"\";\n      const lastName = name[\"family-name\"] ? name[\"family-name\"].value : \"\";\n\n      this.setState({\n        indOrcid: payload[\"orcid-identifier\"].uri,\n        givenNames: name[\"given-names\"].value,\n        indEmail,\n        lastName,\n      });\n    };\n  }\n\n  handleCancelClick() {\n    const { match, history } = this.props;\n    const { language, region } = match.params;\n\n    history.push(`/${language}/${region}/contacts`);\n  }\n\n  // Create or update contact\n  async handleSubmitClick() {\n    const { history, match } = this.props;\n\n    const { region, language, contactID } = match.params;\n\n    // update\n    if (contactID) this.contactsRef.child(contactID).update(this.state);\n    // create\n    else this.contactsRef.push(this.state);\n\n    history.push(`/${language}/${region}/contacts`);\n  }\n\n  render() {\n    const { orgName, givenNames, lastName } = this.state;\n    const isFilledEnoughToSave = orgName || (givenNames && lastName);\n    return (\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item xs>\n          <ContactEditor\n            value={this.state}\n            handleClear={(key) => this.handleClear(key)}\n            updateContactEvent={(key) => this.handleChange(key)}\n            updateContactRor={this.updateOrgFromRor()}\n            updateContactOrcid={this.updateIndFromOrcid()}\n          />\n        </Grid>\n\n        <Grid item xs>\n          <Button\n            startIcon={<Save />}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.handleSubmitClick()}\n            disabled={!isFilledEnoughToSave}\n          >\n            <I18n>\n              <En>Save</En>\n              <Fr>Enregistrer</Fr>\n            </I18n>\n          </Button>\n\n          <Button\n            style={{ marginLeft: \"10px\" }}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => this.handleCancelClick()}\n          >\n            <I18n>\n              <En>Cancel</En>\n              <Fr>Annuler</Fr>\n            </I18n>\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(EditContact);\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Modal, TextField } from \"@material-ui/core\";\nimport { validateEmail } from \"../../utils/validate\";\n\nimport { En, Fr, I18n } from \"../I18n\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function TransferModal({\n  open,\n  onClose,\n  onAccept,\n  email,\n  setEmail,\n}) {\n  // result of the transger\n  const [transferResult, setTransferResult] = useState(true);\n  const [isTransferring, setIsTransferring] = useState(false);\n  const classes = useStyles();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const emailIsValid = validateEmail(email);\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">\n            <I18n>\n              <En>Transfer Record</En>\n              <Fr>Enregistrement de transfert</Fr>\n            </I18n>\n          </h2>\n          {isTransferring ? (\n            <h3>\n              <I18n>\n                <En>Transferring...</En>\n                <Fr>Transfert en cours...</Fr>\n              </I18n>\n            </h3>\n          ) : (\n            <div>\n              {!transferResult && (\n                <h3>\n                  <I18n>\n                    <En>User {email} not found</En>\n                    <Fr>L'utilisateur {email} n'a pas été trouvé</Fr>\n                  </I18n>\n                </h3>\n              )}\n\n              <div>\n                <I18n>\n                  <En>\n                    Enter the email address of the user to transfer this record\n                    to. The user must have logged into this region at least\n                    once:\n                  </En>\n                  <Fr>\n                    Entrez l'adresse e-mail de l'utilisateur vers lequel\n                    transférer cet enregistrement. L'utilisateur doit s'être\n                    connecté à cette région au moins une fois:\n                  </Fr>\n                </I18n>\n              </div>\n\n              {/* naterosenstock@gmail.com */}\n              <div>\n                <TextField\n                  helperText={\n                    !emailIsValid && (\n                      <I18n en=\"Invalid email\" fr=\"E-mail non valide\" />\n                    )\n                  }\n                  error={!emailIsValid}\n                  value={email}\n                  onChange={(e) => {\n                    setTransferResult(true);\n                    setEmail(e.target.value);\n                  }}\n                  fullWidth\n                />\n              </div>\n\n              <button\n                type=\"button\"\n                disabled={!email || !emailIsValid || isTransferring}\n                onClick={async () => {\n                  setIsTransferring(true);\n                  const transferResult = await onAccept();\n\n                  setTransferResult(transferResult);\n                  setIsTransferring(false);\n                  if (transferResult) onClose();\n                }}\n              >\n                <I18n>\n                  <En>Transfer</En>\n                  <Fr>Transfert</Fr>\n                </I18n>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setTransferResult(true);\n                  onClose();\n                }}\n              >\n                <I18n>\n                  <En>Cancel</En>\n                  <Fr>Annuler</Fr>\n                </I18n>\n              </button>\n            </div>\n          )}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-no-bind */\nimport React from \"react\";\nimport {\n  Typography,\n  List,\n  Grid,\n  CircularProgress,\n  Checkbox,\n  TextField,\n  Paper,\n} from \"@material-ui/core\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { QuestionText } from \"../FormComponents/QuestionStyles\";\n\nimport firebase from \"../../firebase\";\nimport { auth } from \"../../auth\";\nimport { Fr, En, I18n } from \"../I18n\";\n\nimport CheckBoxList from \"../FormComponents/CheckBoxList\";\n\nimport SimpleModal from \"../FormComponents/SimpleModal\";\nimport TransferModal from \"../FormComponents/TransferModal\";\nimport MetadataRecordListItem from \"../FormComponents/MetadataRecordListItem\";\n\nimport {\n  loadRegionRecords,\n  transferRecord,\n  deleteRecord,\n  submitRecord,\n  cloneRecord,\n} from \"../../utils/firebaseRecordFunctions\";\nimport { unique } from \"../../utils/misc\";\nimport FormClassTemplate from \"./FormClassTemplate\";\n\nconst RecordItem = ({\n  record,\n  language,\n  editRecord,\n  toggleModal,\n  handleCloneRecord,\n}) => {\n  const commonProps = {\n    record,\n    language,\n    onViewEditClick: () => editRecord(record.recordID, record.userinfo.userID),\n    onCloneClick: () =>\n      handleCloneRecord(record.recordID, record.userinfo.userID),\n    onDeleteClick: () =>\n      toggleModal(\n        \"deleteModalOpen\",\n        true,\n        record.recordID,\n        record.userinfo.userID\n      ),\n    onTransferClick: () =>\n      toggleModal(\n        \"transferModalOpen\",\n        true,\n        record.recordID,\n        record.userinfo.userID\n      ),\n    showAuthor: true,\n    showTransferButton: true,\n    showDeleteAction: true,\n    showCloneAction: true,\n  };\n\n  const DraftRecordItem = () => {\n    return (\n      <MetadataRecordListItem\n        onSubmitClick={() => {\n          return toggleModal(\n            \"submitModalOpen\",\n            true,\n            record.recordID,\n            record.userinfo.userID\n          );\n        }}\n        showSubmitAction\n        showEditAction\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...commonProps}\n        showPercentComplete\n      />\n    );\n  };\n  const SubmittedRecordItem = () => (\n    <MetadataRecordListItem\n      onSubmitClick={() =>\n        toggleModal(\n          \"publishModalOpen\",\n          true,\n          record.recordID,\n          record.userinfo.userID\n        )\n      }\n      onUnSubmitClick={() =>\n        toggleModal(\n          \"unSubmitModalOpen\",\n          true,\n          record.recordID,\n          record.userinfo.userID\n        )\n      }\n      showPublishAction\n      showUnSubmitAction\n      showEditAction\n      showPercentComplete\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...commonProps}\n    />\n  );\n  const PublishedRecordItem = () => {\n    return (\n      <MetadataRecordListItem\n        onUnPublishClick={() =>\n          toggleModal(\n            \"unPublishModalOpen\",\n            true,\n            record.recordID,\n            record.userinfo.userID\n          )\n        }\n        showUnPublishAction\n        showViewAction\n        showPercentComplete\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...commonProps}\n      />\n    );\n  };\n\n  if (record.status === \"submitted\") return <SubmittedRecordItem />;\n  if (record.status === \"published\") return <PublishedRecordItem />;\n  return <DraftRecordItem />;\n};\n\nclass Reviewer extends FormClassTemplate {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      deleteModalOpen: false,\n      publishModalOpen: false,\n      unPublishModalOpen: false,\n      unSubmitModalOpen: false,\n      submitModalOpen: false,\n      transferModalOpen: false,\n      modalKey: \"\",\n      modalUserID: \"\",\n      loading: false,\n      showRecordTypes: [\"submitted\", \"published\"],\n      showUsers: [],\n      records: [],\n      recordsFilter: \"\",\n      recordCountsByStatus: {},\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        const usersRef = firebase.database().ref(region).child(\"users\");\n        usersRef.on(\"value\", (regionUsersRaw) => {\n          const records = loadRegionRecords(regionUsersRaw, [\n            \"\",\n            \"submitted\",\n            \"published\",\n          ]);\n\n          this.setState({ records, loading: false });\n\n          const users = unique(records.map((record) => record.userinfo.email));\n\n          this.setState({\n            records,\n            loading: false,\n            users,\n            showUsers: users,\n          });\n        });\n        this.listenerRefs.push(usersRef);\n      }\n    });\n  }\n\n  editRecord(key, userID) {\n    const { history } = this.props;\n    const { language, region } = this.props.match.params;\n    history.push(`/${language}/${region}/${userID}/${key}`);\n  }\n\n  async handleTransferRecord(recordID, userID) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    return transferRecord(this.state.transferEmail, recordID, userID, region);\n  }\n\n  // user ID is that of the record owner, not the editor\n  handleCloneRecord(recordID, sourceUserID) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (auth.currentUser) {\n      cloneRecord(recordID, sourceUserID, auth.currentUser.uid, region);\n    }\n  }\n\n  async handleSubmitRecord(key, userID, status) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (key && userID) {\n      this.setState({ loading: true });\n      await submitRecord(region, userID, key, status);\n      this.setState({ loading: false });\n    }\n  }\n\n  async deleteRecord(key, userID) {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    if (key && userID) {\n      this.setState({ loading: true });\n      await deleteRecord(region, userID, key);\n      this.setState({ loading: false });\n    }\n  }\n\n  toggleModal(modalName, state, key = \"\", userID) {\n    this.setState({ modalKey: key, [modalName]: state, modalUserID: userID });\n  }\n\n  render() {\n    const {\n      records,\n      recordsFilter,\n      showRecordTypes,\n      showUsers,\n      deleteModalOpen,\n      transferModalOpen,\n      transferEmail,\n      transferUserNotFound,\n      modalKey,\n      modalUserID,\n      unPublishModalOpen,\n      publishModalOpen,\n      unSubmitModalOpen,\n      submitModalOpen,\n      loading,\n      users,\n    } = this.state;\n\n    const { match } = this.props;\n    const { language } = match.params;\n\n    const recordTypeOptions = [\"\", \"submitted\", \"published\"];\n\n    // sort records - drafts then submitted then published\n    let recordsToShow = records\n      .filter((record) => showUsers.includes(record.userinfo.email))\n      .sort((a, b) => a.created < b.created);\n\n    // the text search\n    if (recordsFilter) {\n      recordsToShow = recordsToShow.filter((record) => {\n        const recordText = JSON.stringify([\n          record.title || {},\n          record.abstract || {},\n        ]).toUpperCase();\n        return recordText.includes(recordsFilter.toUpperCase());\n      });\n    }\n\n    const recordCountsByStatus = {\n      draft: (recordsToShow.filter((record) => record.status === \"\") || [])\n        .length,\n      submitted: (\n        recordsToShow.filter((record) => record.status === \"submitted\") || []\n      ).length,\n      published: (\n        recordsToShow.filter((record) => record.status === \"published\") || []\n      ).length,\n    };\n\n    recordsToShow = recordsToShow.filter((record) =>\n      showRecordTypes.includes(record.status)\n    );\n\n    recordsToShow = recordsToShow.sort((a, b) => {\n      return (\n        showRecordTypes.indexOf(a.status) > showRecordTypes.indexOf(b.status)\n      );\n    });\n\n    const recordStatusTranslate = {\n      draft: { en: \"Draft\", fr: \"Brouillon\" },\n      submitted: { en: \"Submitted\", fr: \"Soumis\" },\n      published: { en: \"Published\", fr: \"Publié\" },\n    };\n    const selectedText = language === \"fr\" ? \"sélectionnés\" : \"selected\";\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"space-between\"\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        <TransferModal\n          open={transferModalOpen}\n          onClose={() => {\n            this.toggleModal(\"transferModalOpen\", false);\n            this.setState({ transferEmail: \"\" });\n          }}\n          onAccept={() => this.handleTransferRecord(modalKey, modalUserID)}\n          transferUserNotFound={transferUserNotFound}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          email={transferEmail}\n          setEmail={(v) => this.setState({ transferEmail: v })}\n        />\n        <SimpleModal\n          open={deleteModalOpen}\n          onClose={() => this.toggleModal(\"deleteModalOpen\", false)}\n          onAccept={() => this.deleteRecord(modalKey, modalUserID)}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={submitModalOpen}\n          onClose={() => this.toggleModal(\"submitModalOpen\", false)}\n          onAccept={() =>\n            this.handleSubmitRecord(modalKey, modalUserID, \"submitted\")\n          }\n          aria-labelledby=\"simple-modal-title\"\n        />\n        <SimpleModal\n          open={publishModalOpen}\n          onClose={() => this.toggleModal(\"publishModalOpen\", false)}\n          onAccept={() =>\n            this.handleSubmitRecord(modalKey, modalUserID, \"published\")\n          }\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={unPublishModalOpen}\n          onClose={() => this.toggleModal(\"unPublishModalOpen\", false)}\n          onAccept={() =>\n            this.handleSubmitRecord(modalKey, modalUserID, \"submitted\")\n          }\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <SimpleModal\n          open={unSubmitModalOpen}\n          onClose={() => this.toggleModal(\"unSubmitModalOpen\", false)}\n          onAccept={() => this.handleSubmitRecord(modalKey, modalUserID, \"\")}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        />\n        <Grid item xs>\n          <Typography variant=\"h5\">\n            <I18n>\n              <En>Review submissions</En>\n              <Fr>Examen des soumissions</Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <>\n            <Paper\n              style={{\n                padding: \"10px\",\n                margin: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <QuestionText>\n                <En>Filters</En>\n                <Fr>Filtres</Fr>\n              </QuestionText>\n              <Grid container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <CheckBoxList\n                    value={showRecordTypes}\n                    onChange={(e) => {\n                      this.setState({ showRecordTypes: e });\n                    }}\n                    options={recordTypeOptions}\n                    optionLabels={[\"draft\", \"submitted\", \"published\"].map(\n                      (status) =>\n                        `${recordStatusTranslate[status][language]} (${recordCountsByStatus[status]})`\n                    )}\n                  />\n                </Grid>\n                <Grid item xs>\n                  <Accordion>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel2a-content\"\n                      id=\"panel2a-header\"\n                    >\n                      <Typography>\n                        {showUsers.length === users.length ? (\n                          <I18n\n                            en=\"Users (All users selected)\"\n                            fr=\"Utilisateurs (Tous les utilisateurs)\"\n                          />\n                        ) : (\n                          <I18n\n                            en={`Users (${showUsers.length}  ${selectedText})`}\n                            fr={`Utilisateurs (${showUsers.length}  ${selectedText})`}\n                          />\n                        )}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Grid container direction=\"column\">\n                        <Grid item xs>\n                          <En>Select All / None</En>\n                          <Fr>Tout sélectionner/Aucun</Fr>\n\n                          <Checkbox\n                            label=\"Show All / None\"\n                            onChange={(e) => {\n                              this.setState({\n                                showUsers: e.target.checked ? users : [],\n                              });\n                            }}\n                          />\n                        </Grid>\n                        <Grid item xs>\n                          <CheckBoxList\n                            value={showUsers}\n                            onChange={(e) => {\n                              this.setState({ showUsers: e });\n                            }}\n                            options={users}\n                            labelSize={null}\n                          />\n                        </Grid>\n                      </Grid>\n                    </AccordionDetails>\n                  </Accordion>\n                </Grid>\n                <Grid item xs>\n                  <TextField\n                    fullWidth\n                    onChange={(e) => {\n                      this.setState({ recordsFilter: e.target.value });\n                    }}\n                    label={\n                      <I18n\n                        en=\"Search title and abstract\"\n                        fr=\"Rechercher le titre et le résumé\"\n                      />\n                    }\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n            {recordsToShow.length ? (\n              <>\n                <Grid container direction=\"column\">\n                  <Grid item xs>\n                    <Typography>\n                      <I18n>\n                        <En>\n                          These are the submissions we have received from all\n                          users that have not yet been reviewed. To accept a\n                          record, click the 'Publish' button.\n                        </En>\n                        <Fr>\n                          Ce sont les soumissions que nous avons reçues de tous\n                          les utilisateurs qui n'ont pas encore été examinées.\n                          Pour accepter un enregistrement, cliquez sur le bouton\n                          « Publier ».\n                        </Fr>\n                      </I18n>\n                    </Typography>\n                  </Grid>\n                  <Grid item xs>\n                    <List>\n                      {recordsToShow.map((record) => (\n                        <RecordItem\n                          key={record.recordID}\n                          record={record}\n                          // eslint-disable-next-line react/jsx-no-bind\n                          toggleModal={this.toggleModal.bind(this)}\n                          editRecord={this.editRecord.bind(this)}\n                          handleCloneRecord={this.handleCloneRecord.bind(this)}\n                        />\n                      ))}\n                    </List>\n                  </Grid>\n                </Grid>\n              </>\n            ) : (\n              <Grid container direction=\"column\">\n                <Grid item xs>\n                  <Typography>\n                    <I18n>\n                      <En>There are no records waiting to be reviewed.</En>\n                      <Fr>Aucun dossier n'attend d'être examiné.</Fr>\n                    </I18n>\n                  </Typography>\n                </Grid>\n              </Grid>\n            )}\n          </>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default Reviewer;\n","import React from \"react\";\nimport {\n  Typography,\n  Button,\n  CircularProgress,\n  TextField,\n  Grid,\n} from \"@material-ui/core\";\nimport { Save } from \"@material-ui/icons\";\n\nimport firebase from \"../../firebase\";\nimport { getRegionProjects } from \"../../utils/firebaseRecordFunctions\";\nimport { auth } from \"../../auth\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport FormClassTemplate from \"./FormClassTemplate\";\n\nimport { unique } from \"../../utils/misc\";\n\nconst cleanArr = (arr) => unique(arr.map((e) => e.trim()).filter((e) => e));\n\nclass Admin extends FormClassTemplate {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // array of strings which are email addresses or reviewers, admins\n      admins: [],\n      projects: [],\n      reviewers: [],\n      loading: false,\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    this.setState({ loading: true });\n\n    this.unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const regionRef = firebase.database().ref(region);\n        const permissionsRef = regionRef.child(\"permissions\");\n        const projects = await getRegionProjects(region);\n        permissionsRef.on(\"value\", (permissionsFirebase) => {\n          const permissions = permissionsFirebase.toJSON();\n\n          // const projects = permissions.projects.split(\",\");\n          const admins = permissions.admins.split(\",\");\n          const reviewers = permissions.reviewers.split(\",\");\n\n          this.setState({\n            projects,\n            admins,\n            reviewers,\n            loading: false,\n          });\n        });\n        this.listenerRefs.push(permissionsRef);\n      }\n    });\n  }\n\n  save() {\n    const { match } = this.props;\n    const { region } = match.params;\n\n    const { reviewers, admins, projects } = this.state;\n\n    if (auth.currentUser) {\n      const regionRef = firebase.database().ref(region);\n      const permissionsRef = regionRef.child(\"permissions\");\n      const projectsRef = regionRef.child(\"projects\");\n\n      permissionsRef.child(\"admins\").set(cleanArr(admins).join());\n\n      projectsRef.set(cleanArr(projects));\n      permissionsRef.child(\"reviewers\").set(cleanArr(reviewers).join());\n    }\n  }\n\n  render() {\n    const { loading, reviewers, admins, projects } = this.state;\n    return (\n      <Grid container direction=\"column\" spacing={3}>\n        <Grid item xs>\n          <Typography variant=\"h5\">\n            <I18n>\n              <En>Admin</En>\n              <Fr>Administrateurs</Fr>\n            </I18n>\n          </Typography>\n          <Typography>\n            <I18n>\n              <En>\n                Add each admin or reviewer's email address on it's own line\n              </En>\n              <Fr>\n                Ajouter l'adresse e-mail de chaque administrateur ou réviseur\n                sur sa propre ligne\n              </Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <>\n            <Grid item xs>\n              <Typography>\n                <I18n>\n                  <En>Projects</En>\n                  <Fr>Projets</Fr>\n                </I18n>\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <TextField\n                multiline\n                fullWidth\n                value={projects.join(\"\\n\")}\n                onChange={(e) =>\n                  this.setState({ projects: e.target.value.split(\"\\n\") })\n                }\n              />\n            </Grid>\n            <Grid item xs>\n              <Typography>\n                <I18n>\n                  <En>Admins</En>\n                  <Fr>Administrateurs</Fr>\n                </I18n>\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <TextField\n                multiline\n                fullWidth\n                value={admins.join(\"\\n\")}\n                onChange={(e) =>\n                  this.setState({ admins: e.target.value.split(\"\\n\") })\n                }\n              />\n            </Grid>\n            <Grid item xs>\n              <Typography>\n                <I18n>\n                  <En>Reviewers</En>\n                  <Fr>Réviseurs</Fr>\n                </I18n>\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <TextField\n                multiline\n                fullWidth\n                value={reviewers.join(\"\\n\")}\n                onChange={(e) =>\n                  this.setState({\n                    reviewers: e.target.value.split(\"\\n\"),\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs>\n              <Button\n                startIcon={<Save />}\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => this.save()}\n              >\n                <I18n>\n                  <En>Save</En>\n                  <Fr>Enregistrer</Fr>\n                </I18n>\n              </Button>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default Admin;\n","import React from \"react\";\nimport * as Sentry from \"@sentry/react\";\n\nconst SentryTest = () => {\n  Sentry.captureException(new Error(\"Testing sentry\"));\n  return <h1>Error notification sent</h1>;\n};\n\nexport default SentryTest;\n","import React, { useContext } from \"react\";\nimport { Route, Switch, useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Submissions from \"./Pages/Submissions\";\nimport Published from \"./Pages/Published\";\nimport Contacts from \"./Pages/ContactsSaved\";\nimport Login from \"./Pages/Login\";\nimport NavDrawer from \"./NavDrawer\";\nimport MetadataForm from \"./Pages/MetadataForm\";\nimport ErrorBoundary from \"./Pages/ErrorBoundary\";\nimport EditContact from \"./FormComponents/EditSavedContact\";\nimport Reviewer from \"./Pages/Reviewer\";\nimport Admin from \"./Pages/Admin\";\nimport NotFound from \"./Pages/NotFound\";\nimport SentryTest from \"./Pages/SentryTest\";\nimport UserProvider, { UserContext } from \"../providers/UserProvider\";\nimport regions from \"../regions\";\n\nconst RegionLogo = ({ children }) => {\n  const { language, region } = useParams();\n  const imgPath = `/cioos-${region}-${language}.png`;\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item xs>\n        <img src={process.env.PUBLIC_URL + imgPath} alt={region} />\n      </Grid>\n      <Grid item xs style={{ paddingLeft: \"50px\" }}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\nconst Pages = ({ match }) => {\n  const { loggedIn, authIsLoading } = useContext(UserContext);\n\n  return (\n    <>\n      {authIsLoading ? (\n        <CircularProgress />\n      ) : (\n        <RegionLogo>\n          {loggedIn ? (\n            <ErrorBoundary>\n              <Switch>\n                <Route path={`${match.path}/`} exact component={Submissions} />\n                <Route path={`${match.path}/new`} component={MetadataForm} />\n                <Route\n                  path={`${match.path}/contacts/:contactID`}\n                  component={EditContact}\n                />\n                <Route\n                  path={`${match.path}/contacts/new`}\n                  component={EditContact}\n                />\n                <Route path={`${match.path}/contacts`} component={Contacts} />\n                <Route\n                  path={`${match.path}/:userID/:recordID`}\n                  component={MetadataForm}\n                />\n                <Route\n                  path={`${match.path}/submissions`}\n                  component={Submissions}\n                />\n                <Route path={`${match.path}/published`} component={Published} />\n                <Route path={`${match.path}/reviewer`} component={Reviewer} />\n                <Route path={`${match.path}/admin`} component={Admin} />\n                <Route\n                  path={`${match.path}/sentry-test`}\n                  component={SentryTest}\n                />\n                <Route path=\"*\" component={NotFound} />\n              </Switch>\n            </ErrorBoundary>\n          ) : (\n            <Login />\n          )}\n        </RegionLogo>\n      )}\n    </>\n  );\n};\nconst BaseLayout = ({ match }) => {\n  const { region, language } = useParams();\n\n  const theme = createTheme({\n    overrides: {\n      MuiTooltip: {\n        tooltip: {\n          fontSize: \"1em\",\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: regions[region].colors.primary,\n      },\n      secondary: {\n        main: regions[region].colors.secondary,\n      },\n    },\n    props: {\n      MuiTextField: {\n        variant: \"outlined\",\n      },\n      MuiSelect: {\n        variant: \"outlined\",\n      },\n      MuiButton: {\n        variant: \"outlined\",\n      },\n    },\n  });\n  const title = {\n    en: `${regions[region].title[language]} Metadata Intake Form`,\n    fr: `Formulaire de réception des métadonnées ${regions[region].title[language]}`,\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{title[language]}</title>\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href={`${process.env.PUBLIC_URL}/favicons/${region}.ico`}\n          sizes=\"16x16\"\n        />\n      </Helmet>\n\n      <UserProvider>\n        <ThemeProvider theme={theme}>\n          <NavDrawer>\n            <Pages match={match} />\n          </NavDrawer>\n        </ThemeProvider>\n      </UserProvider>\n    </>\n  );\n};\n\nexport default BaseLayout;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport regions from \"../../regions\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 400,\n    \"&:hover\": {\n      filter:\n        \"brightness( 100% ) contrast( 100% ) saturate( 200% ) blur( 0px ) hue-rotate( 197deg )\",\n    },\n  },\n});\n\nexport default function MediaCard({ region, regionSummary }) {\n  const history = useHistory();\n  const { language } = useParams();\n  const classes = useStyles();\n\n  const regionInfo = regions[region];\n  const imgPath = `/cioos-${region}-${language}.png`;\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={() => history.push(`/${language}/${region}`)}\n      style={{ minHeight: \"500px\", minWidth: \"400px\" }}\n    >\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={`${process.env.PUBLIC_URL}/map-${region}.jpg`}\n          title={regionInfo.title[language]}\n        />\n        <CardContent>\n          <div>\n            <img\n              src={process.env.PUBLIC_URL + imgPath}\n              alt={region}\n              style={{ margin: \"10px\", maxWidth: \"300px\", maxHeight: \"80px\" }}\n            />\n          </div>\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {regionSummary}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { En, Fr, I18n } from \"../I18n\";\nimport RegionCard from \"../FormComponents/RegionCard\";\nimport regions from \"../../regions\";\n\nexport default function RegionSelect() {\n  const { language } = useParams();\n  const title = {\n    en: \"Metadata Intake Form\",\n    fr: \"Formulaire de réception des métadonnées\",\n  };\n  return (\n    <>\n      <Helmet>\n        <title>{title[language]}</title>\n      </Helmet>\n\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item xs>\n          <Typography variant=\"h6\">\n            <I18n>\n              <En>\n                Welcome to the CIOOS Metadata Entry Tool. To get started, please\n                select the region where your data was collected.\n              </En>\n              <Fr>\n                Bienvenue dans l'outil de saisie de métadonnées du SIOOC. Pour\n                commencer, veuillez sélectionner la région dans laquelle vos\n                données ont été collectées.\n              </Fr>\n            </I18n>\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"flex-start\"\n            alignItems=\"stretch\"\n          >\n            {Object.entries(regions).map(([regionCode, regionInfo]) => {\n              if (regionInfo.showInRegionSelector)\n                return (\n                  <Grid item xs key={regionCode}>\n                    <RegionCard\n                      region={regionCode}\n                      regionSummary={regionInfo.introPageText[language]}\n                    />\n                  </Grid>\n                );\n              return null;\n            })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Route,\n  HashRouter as Router,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport regions from \"../regions\";\nimport NavDrawer from \"./NavDrawer\";\n\nimport BaseLayout from \"./BaseLayout\";\nimport RegionSelect from \"./Pages/RegionSelect\";\n\nconst languagePath = \":language(en|fr)\";\n// eg :region(pacific|atlantic..)\nconst regionPath = `:region(${Object.keys(regions).join(\"|\")})`;\n\nconst App = () => (\n  <Router basename=\"/\">\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/en/region-select\" />\n      </Route>\n      <Route\n        path={`/${languagePath}/region-select`}\n        exact\n        component={() => (\n          <NavDrawer>\n            <RegionSelect />\n          </NavDrawer>\n        )}\n      />\n      <Route path={`/${languagePath}/${regionPath}`} component={BaseLayout} />\n      <Route path=\"*\">\n        <Redirect to=\"/en/region-select\" />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nif (process.env.NODE_ENV === \"production\")\n  Sentry.init({\n    dsn:\n      \"https://8fd4b6885cc447c0b11aa0cb3009b0e3@o56764.ingest.sentry.io/5493983\",\n    integrations: [new Integrations.BrowserTracing()],\n\n    // We recommend adjusting this value in production, or using tracesSampler\n    // for finer control\n    tracesSampleRate: 1.0,\n  });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
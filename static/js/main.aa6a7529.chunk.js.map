{"version":3,"sources":["codes.js","BilingualTextInput.jsx","CheckBoxList.jsx","SelectInput.jsx","DateInput.jsx","Signup.jsx","serviceWorker.js","index.js"],"names":["eovList","roleCodes","progressCodes","BilingualTextInput","onChange","value","name","label","multiline","TextField","fullWidth","event","en","InputProps","startAdornment","InputAdornment","position","fr","CheckBoxList","options","optionLabels","FormControl","style","minWidth","InputLabel","id","map","v","i","FormControlLabel","key","control","Checkbox","checked","SelectInput","Select","MenuItem","DateInput","utils","DateFnsUtils","margin","format","d","target","KeyboardButtonProps","camelToSentenceCase","text","result","replace","charAt","toUpperCase","slice","useStyles","makeStyles","theme","root","flexGrow","overflow","padding","spacing","paper","Signup","classes","useState","title","abstract","role","progress","dateStart","Date","inputs","setInputs","handleInputChange","parentName","commonBilingualFields","Grid","container","direction","justify","alignItems","Paper","className","Typography","type","required","Button","variant","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa6a7529.chunk.js","sourcesContent":["export const eovList = [\n  \"oxygen\",\n  \"nutrients\",\n  \"nitrate\",\n  \"phosphate\",\n  \"silicate\",\n  \"inorganicCarbon\",\n  \"dissolvedOrganicCarbon\",\n  \"seaSurfaceHeight\",\n  \"seawaterDensity\",\n  \"potentialTemperature\",\n  \"potentialDensity\",\n  \"speedOfSound\",\n  \"seaIce\",\n  \"seaState\",\n  \"seaSurfaceSalinity\",\n  \"seaSurfaceTemperature\",\n  \"subSurfaceCurrents\",\n  \"subSurfaceSalinity\",\n  \"subSurfaceTemperature\",\n  \"surfaceCurrents\",\n];\nexport const roleCodes = [\n  \"resourceProvider\",\n  \"custodian\",\n  \"owner\",\n  \"user\",\n  \"distributor\",\n  \"originator\",\n  \"pointOfContact\",\n  \"principalInvestigator\",\n  \"processor\",\n  \"publisher\",\n  \"author\",\n  \"sponsor\",\n  \"coAuthor\",\n  \"collaborator\",\n  \"editor\",\n  \"mediator\",\n  \"rightsHolder\",\n  \"contributor\",\n  \"funder\",\n  \"stakeholder\",\n];\n\nexport const progressCodes = [\n  \"deprecated\",\n  \"proposed\",\n  \"withdrawn\",\n  \"notAccepted\",\n  \"accepted\",\n  \"valid\",\n  \"tentative\",\n  \"superseded\",\n  \"retired\",\n  \"pending\",\n  \"final\",\n  \"underDevelopment\",\n  \"required\",\n  \"planned\",\n  \"onGoing\",\n  \"obsolete\",\n  \"historicalArchive\",\n  \"completed\",\n];\n","import React from \"react\";\nimport { TextField, Typography, InputAdornment } from \"@material-ui/core\";\nconst BilingualTextInput = ({ onChange, value, name, label, multiline }) => {\n  return (\n    <div>\n      <h5>{label}</h5>\n      <div>\n        <TextField\n          name={\"en\"}\n          fullWidth\n          onChange={(event) => onChange(event, name)}\n          value={value[name].en}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">EN</InputAdornment>\n            ),\n          }}\n          multiline={multiline}\n        />\n      </div>\n      <div>\n        <TextField\n          fullWidth\n          name={\"fr\"}\n          onChange={(event) => onChange(event, name)}\n          value={value[name].fr}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">FR</InputAdornment>\n            ),\n          }}\n          multiline={multiline}\n        />\n      </div>\n    </div>\n  );\n};\nexport default BilingualTextInput;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core\";\n\nconst CheckBoxList = ({\n  onChange,\n  value,\n  name,\n  label,\n  options,\n  optionLabels,\n}) => {\n  return (\n    <FormControl style={{ minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n      {options.map((v, i) => (\n        <FormControlLabel\n          key={v}\n          control={\n            <Checkbox\n              key={v}\n              value={v}\n              name={name}\n              onChange={onChange}\n              checked={value}\n            />\n          }\n          label={optionLabels[i]}\n        />\n      ))}\n    </FormControl>\n  );\n};\nexport default CheckBoxList;\n","import React from \"react\";\nimport { Select, MenuItem, FormControl, InputLabel } from \"@material-ui/core\";\n\nconst SelectInput = ({\n  onChange,\n  value,\n  name,\n  label,\n  options,\n  optionLabels,\n}) => {\n  return (\n    <FormControl style={{ minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n      <Select fullWidth value={value}>\n        {options.map((v, i) => (\n          <MenuItem key={v} value={v}>\n            {optionLabels[i]}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\nexport default SelectInput;\n","import React from \"react\";\n// import {\n//   Checkbox,\n//   MenuItem,\n//   FormControlLabel,\n//   FormControl,\n//   InputLabel,\n// } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  // KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nconst DateInput = ({ onChange, value, name }) => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Date picker dialog\"\n        format=\"MM/dd/yyyy\"\n        value={value}\n        onChange={(d) => onChange({ target: { name, value: d } })}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\nexport default DateInput;\n","import React, { useState, memo } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReactDOM from \"react-dom\";\nimport { eovList, progressCodes, roleCodes } from \"./codes\";\nimport {\n  TextField,\n  Grid,\n  Label,\n  Typography,\n  Button,\n  Card,\n  Box,\n  Container,\n  Paper,\n} from \"@material-ui/core\";\nimport BilingualTextInput from \"./BilingualTextInput\";\nimport CheckBoxList from \"./CheckBoxList\";\nimport SelectInput from \"./SelectInput\";\nimport DateInput from \"./DateInput\";\nfunction camelToSentenceCase(text) {\n  var result = text.replace(/([A-Z])/g, \" $1\");\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"20px\",\n  },\n}));\n\nconst Signup = () => {\n  const classes = useStyles();\n  const [inputs, setInputs] = useState({\n    title: { en: \"\", fr: \"\" },\n    abstract: { en: \"\", fr: \"\" },\n    id: \"\",\n    role: \"resourceProvider\",\n    progress: \"obsolete\",\n    dateStart: new Date(),\n  });\n\n  const handleInputChange = (event, parentName = false) => {\n    // console.log(event);\n    const { name, value } = event.target;\n    // event.persist();\n\n    if (parentName) {\n      setInputs((inputs) => ({\n        ...inputs,\n        [parentName]: { ...inputs[parentName], [name]: value },\n      }));\n    } else {\n      setInputs((inputs) => ({\n        ...inputs,\n        [name]: value,\n      }));\n    }\n  };\n  const commonBilingualFields = { value: inputs, onChange: handleInputChange };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"space-between\"\n      alignItems=\"stretch\"\n    >\n      <Paper className={classes.paper}>\n        <h1>CIOOS Metadata Profile Intake Form</h1>\n        <Typography>\n          Welcome to the CIOOS metadata profile generation form! Please fill out\n          each field with as much detail as you can. Using this information we\n          will create your metadata profile for the given dataset.\n        </Typography>\n      </Paper>\n      <Paper className={classes.paper}>\n        <Typography>What is the ID for your dataset?</Typography>\n        <TextField\n          type=\"text\"\n          label=\"Your Answer\"\n          name=\"id\"\n          // value={inputs.id}\n          onChange={handleInputChange}\n          fullWidth\n          required\n        />\n      </Paper>\n\n      <Paper className={classes.paper}>\n        <Typography>Select a role for your datase</Typography>\n        <SelectInput\n          label=\"Select a role\"\n          name=\"role\"\n          // value={inputs.role}\n          onChange={handleInputChange}\n          options={roleCodes}\n          optionLabels={roleCodes.map(camelToSentenceCase)}\n        />\n      </Paper>\n      <Paper className={classes.paper}>\n        <Typography>Select EOVs that apply to your dataset</Typography>\n        <CheckBoxList\n          name=\"eov\"\n          // value={inputs.eov}\n          onChange={handleInputChange}\n          options={eovList}\n          optionLabels={eovList.map(camelToSentenceCase)}\n        />\n      </Paper>\n      <Paper className={classes.paper}>\n        <Typography>What is the progress?</Typography>\n        <SelectInput\n          label=\"Select a role\"\n          name=\"progress\"\n          // value={inputs.progress}\n          onChange={handleInputChange}\n          options={progressCodes}\n          optionLabels={progressCodes.map(camelToSentenceCase)}\n        />\n      </Paper>\n\n      <Paper className={classes.paper}>\n        <Typography>What is the title of the dataset?</Typography>\n        <BilingualTextInput\n          label=\"Enter a title\"\n          name=\"title\"\n          {...commonBilingualFields}\n        />\n      </Paper>\n\n      <Paper className={classes.paper}>\n        <Typography>What is the abstract for the dataset?</Typography>\n        <BilingualTextInput\n          label=\"Enter an abstract\"\n          name=\"abstract\"\n          onChange={handleInputChange}\n          {...commonBilingualFields}\n          multiline\n        />\n      </Paper>\n\n      <Paper className={classes.paper}>\n        <Typography>What is the start date that data was collected?</Typography>\n        <DateInput name=\"dateStart\" onChange={handleInputChange} />\n      </Paper>\n\n      <Button variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n      {/* </Box> */}\n    </Grid>\n  );\n};\n\nexport default Signup;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Signup from \"./Signup\";\nimport TestTest from \"./TestTest\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Signup />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}